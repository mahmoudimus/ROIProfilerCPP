<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_x_string_8h" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/libclang/CXString.h File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/libclang/CXString.h</primary></indexterm>
<programlisting>#include &quot;clang-c/Index.h&quot;
#include &quot;clang/Basic/LLVM.h&quot;
#include &quot;llvm/ADT/SmallString.h&quot;
#include &quot;llvm/ADT/StringRef.h&quot;
#include &quot;llvm/Support/Compiler.h&quot;
#include &lt;string&gt;
#include &lt;vector&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classclang_1_1cxstring_1_1_c_x_string_pool">clang::cxstring::CXStringPool</link></para>

<para>A string pool used for fast allocation/deallocation of strings. </para>
</listitem>
            <listitem><para>struct <link linkend="_structclang_1_1cxstring_1_1_c_x_string_buf">clang::cxstring::CXStringBuf</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespaceclang">clang</link></para>

<para>-rename </para>
</listitem>
            <listitem><para> <link linkend="_namespaceclang_1_1cxstring">clang::cxstring</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1a8a49aa6ea196abdde85886689f2630f9">clang::cxstring::createEmpty</link> ()</para>

<para>Create a CXString object for an empty &quot;&quot; string. </para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1a8684a35d52ccb8c623144db89a0205e1">clang::cxstring::createNull</link> ()</para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1abc91e0841937d19cfc9e1801ac00b3c4">clang::cxstring::createRef</link> (const char *String)</para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1a19a4962be87f75a8c1fa5a0b75f76298">clang::cxstring::createDup</link> (const char *String)</para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1ae7319593ba701fd2e736767deae5ef5f">clang::cxstring::createRef</link> (StringRef String)</para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1a62e4008f6bfd5c212aada470275c24b1">clang::cxstring::createDup</link> (StringRef String)</para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1abc51fd7a522d9e5b5ca2c0d364d60c61">clang::cxstring::createRef</link> (std::string String)=delete</para>
</listitem>
            <listitem><para>CXString <link linkend="_namespaceclang_1_1cxstring_1a4ea867311d5651a36d2dfa1f1258638c">clang::cxstring::createCXString</link> (CXStringBuf *buf)</para>

<para>Create a CXString object that is backed by a string buffer. </para>
</listitem>
            <listitem><para>CXStringSet * <link linkend="_namespaceclang_1_1cxstring_1a0ebb0924de5a075db7ae5d7937df8056">clang::cxstring::createSet</link> (const std::vector&lt; std::string &gt; &amp;<link linkend="__c_x_loaded_diagnostic_8cpp_1a43f230387ba6f0bf2e696b6029b136bb">Strings</link>)</para>
</listitem>
            <listitem><para>CXStringBuf * <link linkend="_namespaceclang_1_1cxstring_1ad1ccb52527d7a42e4ad5c3e1f6af9907">clang::cxstring::getCXStringBuf</link> (CXTranslationUnit TU)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespaceclang_1_1cxstring_1a23337a6942da94448da8b249362d626e">clang::cxstring::isManagedByPool</link> (CXString str)</para>

<para>Returns true if the CXString data is managed by a pool. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
