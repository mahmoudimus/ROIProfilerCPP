<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_index_high_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/libclang/CIndexHigh.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/libclang/CIndexHigh.cpp</primary></indexterm>
<programlisting>#include &quot;CursorVisitor.h&quot;
#include &quot;CLog.h&quot;
#include &quot;CXCursor.h&quot;
#include &quot;CXSourceLocation.h&quot;
#include &quot;CXTranslationUnit.h&quot;
#include &quot;clang/AST/DeclObjC.h&quot;
#include &quot;clang/Frontend/ASTUnit.h&quot;
#include &quot;llvm/Support/Compiler.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>CXResult <link linkend="__c_index_high_8cpp_1a6b21283c57156038f976fb60e3f268c2">clang_findReferencesInFile</link> (CXCursor cursor, CXFile file, CXCursorAndRangeVisitor visitor)</para>
</listitem>
            <listitem><para>CXResult <link linkend="__c_index_high_8cpp_1a152126673cad4e1f7f0fb80eb8e2044d">clang_findIncludesInFile</link> (CXTranslationUnit TU, CXFile file, CXCursorAndRangeVisitor visitor)</para>
</listitem>
            <listitem><para>CXResult <link linkend="__c_index_high_8cpp_1a76deaf432db9e0e8b5480435ef25761e">clang_findReferencesInFileWithBlock</link> (CXCursor cursor, CXFile file, <link linkend="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b">CXCursorAndRangeVisitorBlock</link> block)</para>
</listitem>
            <listitem><para>CXResult <link linkend="__c_index_high_8cpp_1a0362005a5a487c97584f724b3964a65b">clang_findIncludesInFileWithBlock</link> (CXTranslationUnit TU, CXFile file, <link linkend="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b">CXCursorAndRangeVisitorBlock</link> block)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__c_index_high_8cpp_1a152126673cad4e1f7f0fb80eb8e2044d"/>    <section>
    <title>clang_findIncludesInFile()</title>
<indexterm><primary>clang_findIncludesInFile</primary><secondary>CIndexHigh.cpp</secondary></indexterm>
<indexterm><primary>CIndexHigh.cpp</primary><secondary>clang_findIncludesInFile</secondary></indexterm>
<para><computeroutput>CXResult clang_findIncludesInFile (CXTranslationUnit TU, CXFile file, CXCursorAndRangeVisitor visitor)</computeroutput></para><para>
Definition at line <link linkend="__c_index_high_8cpp_source_1l00478">478</link> of file <link linkend="__c_index_high_8cpp_source">CIndexHigh.cpp</link>.</para>
<programlisting>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00480 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cxtu::isNotUsableTU(TU))&#32;{
00481 &#32;&#32;&#32;&#32;<link linkend="__c_x_translation_unit_8h_1a4ec17e6e03ea0baf73e27802eae36106">LOG_BAD_TU</link>(TU);
00482 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00483 &#32;&#32;}
00484 
00485 &#32;&#32;<link linkend="_namespaceclang_1_1cxindex_1a404a46a001568431816a6c375e7cd810">LogRef</link>&#32;Log&#32;=&#32;Logger::make(__func__);
00486 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!file)&#32;{
00487 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00488 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Null&#32;file&quot;</emphasis>;
00489 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00490 &#32;&#32;}
00491 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!visitor.visit)&#32;{
00492 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00493 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Null&#32;visitor&quot;</emphasis>;
00494 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00495 &#32;&#32;}
00496 
00497 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00498 &#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;TU&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;@&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file);
00499 
00500 &#32;&#32;ASTUnit&#32;*CXXUnit&#32;=&#32;cxtu::getASTUnit(TU);
00501 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!CXXUnit)
00502 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00503 
00504 &#32;&#32;ASTUnit::ConcurrencyCheck&#32;Check(*CXXUnit);
00505 
00506 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(findIncludesInFile(TU,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file),&#32;visitor))
00507 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_VisitBreak;
00508 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Success;
00509 }
</programlisting><para>
References <link linkend="__c_x_translation_unit_8h_source_1l00063">LOG_BAD_TU</link>.</para>
    </section><anchor xml:id="__c_index_high_8cpp_1a0362005a5a487c97584f724b3964a65b"/>    <section>
    <title>clang_findIncludesInFileWithBlock()</title>
<indexterm><primary>clang_findIncludesInFileWithBlock</primary><secondary>CIndexHigh.cpp</secondary></indexterm>
<indexterm><primary>CIndexHigh.cpp</primary><secondary>clang_findIncludesInFileWithBlock</secondary></indexterm>
<para><computeroutput>CXResult clang_findIncludesInFileWithBlock (CXTranslationUnit TU, CXFile file, <link linkend="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b">CXCursorAndRangeVisitorBlock</link> block)</computeroutput></para><para>
Definition at line <link linkend="__c_index_high_8cpp_source_1l00526">526</link> of file <link linkend="__c_index_high_8cpp_source">CIndexHigh.cpp</link>.</para>
<programlisting>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00529 &#32;&#32;CXCursorAndRangeVisitor&#32;visitor&#32;=&#32;{&#32;block,
00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block&#32;?&#32;_visitCursorAndRange&#32;:&#32;<emphasis role="keyword">nullptr</emphasis>&#32;};
00531 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_index_high_8cpp_1a152126673cad4e1f7f0fb80eb8e2044d">clang_findIncludesInFile</link>(TU,&#32;file,&#32;visitor);
00532 }
</programlisting>    </section><anchor xml:id="__c_index_high_8cpp_1a6b21283c57156038f976fb60e3f268c2"/>    <section>
    <title>clang_findReferencesInFile()</title>
<indexterm><primary>clang_findReferencesInFile</primary><secondary>CIndexHigh.cpp</secondary></indexterm>
<indexterm><primary>CIndexHigh.cpp</primary><secondary>clang_findReferencesInFile</secondary></indexterm>
<para><computeroutput>CXResult clang_findReferencesInFile (CXCursor cursor, CXFile file, CXCursorAndRangeVisitor visitor)</computeroutput></para><para>
Definition at line <link linkend="__c_index_high_8cpp_source_1l00409">409</link> of file <link linkend="__c_index_high_8cpp_source">CIndexHigh.cpp</link>.</para>
<programlisting>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00411 &#32;&#32;<link linkend="_namespaceclang_1_1cxindex_1a404a46a001568431816a6c375e7cd810">LogRef</link>&#32;Log&#32;=&#32;Logger::make(__func__);
00412 
00413 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="__c_x_cursor_8cpp_1af734553e3bac74a4a1f6f7450513cf0f">clang_Cursor_isNull</link>(cursor))&#32;{
00414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00415 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Null&#32;cursor&quot;</emphasis>;
00416 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00417 &#32;&#32;}
00418 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor.kind&#32;==&#32;CXCursor_NoDeclFound)&#32;{
00419 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00420 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Got&#32;CXCursor_NoDeclFound&quot;</emphasis>;
00421 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00422 &#32;&#32;}
00423 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!file)&#32;{
00424 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00425 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Null&#32;file&quot;</emphasis>;
00426 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00427 &#32;&#32;}
00428 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!visitor.visit)&#32;{
00429 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00430 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Null&#32;visitor&quot;</emphasis>;
00431 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00432 &#32;&#32;}
00433 
00434 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00435 &#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;cursor&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;@&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file);
00436 
00437 &#32;&#32;ASTUnit&#32;*CXXUnit&#32;=&#32;<link linkend="_namespaceclang_1_1cxcursor_1a68c106f7bebde4f72b0fe7f6f67e8f29">cxcursor::getCursorASTUnit</link>(cursor);
00438 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!CXXUnit)
00439 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00440 
00441 &#32;&#32;ASTUnit::ConcurrencyCheck&#32;Check(*CXXUnit);
00442 
00443 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cursor.kind&#32;==&#32;CXCursor_MacroDefinition&#32;||
00444 &#32;&#32;&#32;&#32;&#32;&#32;cursor.kind&#32;==&#32;CXCursor_MacroExpansion)&#32;{
00445 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(findMacroRefsInFile(<link linkend="_namespaceclang_1_1cxcursor_1a23a495df22339e8289ae6d2421f493b6">cxcursor::getCursorTU</link>(cursor),
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cursor,
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file),
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visitor))
00449 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_VisitBreak;
00450 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Success;
00451 &#32;&#32;}
00452 
00453 &#32;&#32;<emphasis role="comment">//&#32;We&#32;are&#32;interested&#32;in&#32;semantics&#32;of&#32;identifiers&#32;so&#32;for&#32;C++&#32;constructor&#32;exprs</emphasis>
00454 &#32;&#32;<emphasis role="comment">//&#32;prefer&#32;type&#32;references,&#32;e.g.:</emphasis>
00455 &#32;&#32;<emphasis role="comment">//</emphasis>
00456 &#32;&#32;<emphasis role="comment">//&#32;&#32;return&#32;MyStruct();</emphasis>
00457 &#32;&#32;<emphasis role="comment">//</emphasis>
00458 &#32;&#32;<emphasis role="comment">//&#32;for&#32;&apos;MyStruct&apos;&#32;we&apos;ll&#32;have&#32;a&#32;cursor&#32;pointing&#32;at&#32;the&#32;constructor&#32;decl&#32;but</emphasis>
00459 &#32;&#32;<emphasis role="comment">//&#32;we&#32;are&#32;actually&#32;interested&#32;in&#32;the&#32;type&#32;declaration.</emphasis>
00460 &#32;&#32;cursor&#32;=&#32;<link linkend="_namespaceclang_1_1cxcursor_1aa5198a2a166b25337d2c20917d3d28ce">cxcursor::getTypeRefCursor</link>(cursor);
00461 
00462 &#32;&#32;CXCursor&#32;refCursor&#32;=&#32;<link linkend="__c_index_8cpp_1ab26fc466345d015d7f9d418080166dc7">clang_getCursorReferenced</link>(cursor);
00463 
00464 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!<link linkend="__c_index_8cpp_1a5d47db8f608ae0c266d6551875d46b80">clang_isDeclaration</link>(refCursor.kind))&#32;{
00465 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00466 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;cursor&#32;is&#32;not&#32;referencing&#32;a&#32;declaration&quot;</emphasis>;
00467 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Invalid;
00468 &#32;&#32;}
00469 
00470 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(findIdRefsInFile(<link linkend="_namespaceclang_1_1cxcursor_1a23a495df22339e8289ae6d2421f493b6">cxcursor::getCursorTU</link>(cursor),
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;refCursor,
00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file),
00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;visitor))
00474 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_VisitBreak;
00475 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXResult_Success;
00476 }
</programlisting><para>
References <link linkend="__c_x_cursor_8cpp_source_1l01253">clang_Cursor_isNull()</link>, and <link linkend="__c_x_cursor_8cpp_source_1l01126">clang::cxcursor::getCursorASTUnit()</link>.</para>
    </section><anchor xml:id="__c_index_high_8cpp_1a76deaf432db9e0e8b5480435ef25761e"/>    <section>
    <title>clang_findReferencesInFileWithBlock()</title>
<indexterm><primary>clang_findReferencesInFileWithBlock</primary><secondary>CIndexHigh.cpp</secondary></indexterm>
<indexterm><primary>CIndexHigh.cpp</primary><secondary>clang_findReferencesInFileWithBlock</secondary></indexterm>
<para><computeroutput>CXResult clang_findReferencesInFileWithBlock (CXCursor cursor, CXFile file, <link linkend="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b">CXCursorAndRangeVisitorBlock</link> block)</computeroutput></para><para>
Definition at line <link linkend="__c_index_high_8cpp_source_1l00518">518</link> of file <link linkend="__c_index_high_8cpp_source">CIndexHigh.cpp</link>.</para>
<programlisting>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00521 &#32;&#32;CXCursorAndRangeVisitor&#32;visitor&#32;=&#32;{&#32;block,
00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block&#32;?&#32;_visitCursorAndRange&#32;:&#32;<emphasis role="keyword">nullptr</emphasis>&#32;};
00523 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_index_high_8cpp_1a6b21283c57156038f976fb60e3f268c2">clang_findReferencesInFile</link>(cursor,&#32;file,&#32;visitor);
00524 }
</programlisting></section>
</section>
</section>
