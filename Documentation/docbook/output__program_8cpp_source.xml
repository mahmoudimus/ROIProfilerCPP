<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_output__program_8cpp_source" xml:lang="en-US">
<title>output_program.cpp</title>
<indexterm><primary>Tests/output_program.cpp</primary></indexterm>
<programlisting>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
00002 <emphasis role="preprocessor">#include&#32;&quot;../lib/DataStorage.cpp&quot;</emphasis>
<anchor xml:id="_output__program_8cpp_source_1l00003"/><link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">00003</link> <link linkend="_class_data_storage">DataStorage</link>&#32;<link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>(<emphasis role="stringliteral">&quot;Runtime,Scope,CustomCompoundStmt&#32;InterID2,ForStmt&#32;2086992,CallExpr&#32;2087015,CustomCompoundStmt&#32;InterID6&quot;</emphasis>);<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_output__program_8cpp_1a2f2fa66f25afb8fe68abadc72b18ad8e">fibonacci</link>()&#32;{
00004 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;n,&#32;t1&#32;=&#32;0,&#32;t2&#32;=&#32;1,&#32;nextTerm&#32;=&#32;0;
00005 &#32;&#32;&#32;&#32;n&#32;=&#32;100;
00006 
00007 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Fibonacci&#32;Series:&#32;&quot;</emphasis>;
00008 
00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;n;&#32;++i)&#32;{
00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;1)&#32;{
00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;t1&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;2)&#32;{
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;t2&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTerm&#32;=&#32;t1&#32;+&#32;t2;
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;t2;
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t2&#32;=&#32;nextTerm;
00021 
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;nextTerm&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00023 &#32;&#32;&#32;&#32;}
00024 }
00025 
<anchor xml:id="_output__program_8cpp_source_1l00026"/><link linkend="_output__program_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">00026</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_output__program_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">main</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
00027 <link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(0);
00028 
00029 &#32;&#32;&#32;&#32;<link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(2);
00030 <emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;10;
00031 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;e&#32;=&#32;54783498;
00032 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;d&#32;=&#32;54783498;
00033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;c&#32;=&#32;54783498;
00034 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;x&#32;=&#32;e+d+c;
00035 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;z&#32;=&#32;x*2;
00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;zy&#32;=&#32;x*2;
00037 &#32;&#32;&#32;&#32;zy++;
00038 &#32;&#32;&#32;&#32;zy++;
00039 &#32;&#32;&#32;&#32;zy++;
00040 &#32;&#32;&#32;&#32;zy++;
00041 &#32;&#32;&#32;&#32;zy++;
00042 &#32;&#32;&#32;&#32;zy++;
00043 &#32;&#32;&#32;&#32;zy++;
00044 &#32;&#32;&#32;&#32;zy++;
00045 &#32;&#32;&#32;&#32;zy++;
00046 &#32;&#32;&#32;&#32;zy++;
00047 &#32;&#32;&#32;&#32;zy++;
00048 &#32;&#32;&#32;&#32;zy++;
00049 &#32;&#32;&#32;&#32;zy++;
00050 &#32;&#32;&#32;&#32;zy++;
00051 &#32;&#32;&#32;&#32;zy++;
00052 &#32;&#32;&#32;&#32;zy++;
00053 &#32;&#32;&#32;&#32;zy++;
00054 &#32;&#32;&#32;&#32;zy++;
00055 &#32;&#32;&#32;&#32;zy++;
00056 &#32;&#32;&#32;&#32;zy++;
00057 &#32;&#32;&#32;&#32;zy++;
00058 &#32;&#32;&#32;&#32;e&#32;=&#32;z;
00059 &#32;&#32;&#32;&#32;i++;
00060 
00061 &#32;&#32;&#32;&#32;<link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(2);
00062 <link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(3);
00063 <emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;1000000;&#32;++j&#32;)&#32;{
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
00069 &#32;&#32;&#32;&#32;}
00070 <link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(3);
00071 
00072 &#32;&#32;&#32;&#32;<link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(4);
00073 <link linkend="_output__program_8cpp_1a2f2fa66f25afb8fe68abadc72b18ad8e">fibonacci</link>();
00074 <link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(4);
00075 
00076 &#32;&#32;&#32;&#32;<link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(5);
00077 <emphasis role="keywordtype">double</emphasis>&#32;cc&#32;=&#32;54783498;
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;xx&#32;=&#32;e+d+c;
00079 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;zz&#32;=&#32;x*2;
00080 &#32;&#32;&#32;&#32;cc++;
00081 &#32;&#32;&#32;&#32;xx++;
00082 &#32;&#32;&#32;&#32;zz++;
00083 &#32;&#32;&#32;&#32;zy++;
00084 <link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(5);
00085 
00086 &#32;&#32;&#32;&#32;<link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(0);
00087 <link linkend="_output__program_8cpp_1a2ef437390b4f244ec001ac736732f6f4">dataStorage</link>.<link linkend="_class_data_storage_1a94ef68ba0c97efa1c78b6f6909eb133c">print</link>();<emphasis role="keywordflow">return</emphasis>&#32;0;
00088 }
</programlisting></section>
