<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_loop__proto__to__llvm_8h_source" xml:lang="en-US">
<title>loop_proto_to_llvm.h</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.h</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//==--&#32;loop_proto_to_llvm.h&#32;-&#32;Protobuf-C++&#32;conversion&#32;----------------------------==//</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
00004 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
00005 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
00006 <emphasis role="comment">//</emphasis>
00007 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00008 <emphasis role="comment">//</emphasis>
00009 <emphasis role="comment">//&#32;Defines&#32;functions&#32;for&#32;converting&#32;between&#32;protobufs&#32;and&#32;LLVM&#32;IR.</emphasis>
00010 <emphasis role="comment">//</emphasis>
00011 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00012 
00013 <emphasis role="preprocessor">#include&#32;&lt;cstdint&gt;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&lt;cstddef&gt;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
00016 
00017 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespaceclang__fuzzer">clang_fuzzer</link>&#32;{
00018 <emphasis role="keyword">class&#32;</emphasis>LoopFunction;
00019 
00020 std::string&#32;<link linkend="_namespaceclang__fuzzer_1a35ef2ec34abd6c5c09fcf55180046986">LoopFunctionToLLVMString</link>(<emphasis role="keyword">const</emphasis>&#32;LoopFunction&#32;&amp;input);
00021 std::string&#32;<link linkend="_namespaceclang__fuzzer_1af604fc28b812e241cd6abfebaedc4797">LoopProtoToLLVM</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*data,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size);
00022 }
</programlisting></section>
