<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test" xml:lang="en-US">
<title>tests.unit.test_analyze.ExtdefMapSrcToAstTest Class Reference</title>
<indexterm><primary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</primary></indexterm>
<para>Inheritance diagram for tests.unit.test_analyze.ExtdefMapSrcToAstTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test_1a3c8ee5953d2bf710c6b41bbd81a4b870">test_empty_gives_empty</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test_1a4aacfa34a6d1bc91de2ee79f05734e9c">test_sources_to_asts</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test_1ab0e54e8d7dec4e4d226d70e343c1eb00">test_spaces_handled</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__analyze_8py_source_1l00405">405</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test_1a3c8ee5953d2bf710c6b41bbd81a4b870"/>    <section>
    <title>test_empty_gives_empty()</title>
<indexterm><primary>test_empty_gives_empty</primary><secondary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</primary><secondary>test_empty_gives_empty</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.ExtdefMapSrcToAstTest.test_empty_gives_empty ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00407">407</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00407 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_empty_gives_empty(self):
00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun_ast_lst&#32;=&#32;sut.extdef_map_list_src_to_ast([])
00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(fun_ast_lst)
00410 
</programlisting>    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test_1a4aacfa34a6d1bc91de2ee79f05734e9c"/>    <section>
    <title>test_sources_to_asts()</title>
<indexterm><primary>test_sources_to_asts</primary><secondary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</primary><secondary>test_sources_to_asts</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.ExtdefMapSrcToAstTest.test_sources_to_asts ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00411">411</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00411 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_sources_to_asts(self):
00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun_src_lst&#32;=&#32;[<emphasis role="stringliteral">&apos;c:@F@f1#I#&#32;&apos;</emphasis>&#32;+&#32;os.path.join(os.sep&#32;+&#32;<emphasis role="stringliteral">&apos;path&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;f1.c&apos;</emphasis>),
00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;c:@F@f2#I#&#32;&apos;</emphasis>&#32;+&#32;os.path.join(os.sep&#32;+&#32;<emphasis role="stringliteral">&apos;path&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;f2.c&apos;</emphasis>)]
00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun_ast_lst&#32;=&#32;sut.extdef_map_list_src_to_ast(fun_src_lst)
00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(<emphasis role="stringliteral">&apos;c:@F@f1#I#&#32;&apos;</emphasis>&#32;+
00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.join(<emphasis role="stringliteral">&apos;ast&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;path&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;f1.c.ast&apos;</emphasis>)
00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">in</emphasis>&#32;fun_ast_lst)
00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(<emphasis role="stringliteral">&apos;c:@F@f2#I#&#32;&apos;</emphasis>&#32;+
00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.join(<emphasis role="stringliteral">&apos;ast&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;path&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;f2.c.ast&apos;</emphasis>)
00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">in</emphasis>&#32;fun_ast_lst)
00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(2,&#32;len(fun_ast_lst))
00422 
</programlisting>    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_extdef_map_src_to_ast_test_1ab0e54e8d7dec4e4d226d70e343c1eb00"/>    <section>
    <title>test_spaces_handled()</title>
<indexterm><primary>test_spaces_handled</primary><secondary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.ExtdefMapSrcToAstTest</primary><secondary>test_spaces_handled</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.ExtdefMapSrcToAstTest.test_spaces_handled ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00423">423</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00423 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_spaces_handled(self):
00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun_src_lst&#32;=&#32;[<emphasis role="stringliteral">&apos;c:@F@f1#I#&#32;&apos;</emphasis>&#32;+&#32;os.path.join(os.sep&#32;+&#32;<emphasis role="stringliteral">&apos;path&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;f&#32;1.c&apos;</emphasis>)]
00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fun_ast_lst&#32;=&#32;sut.extdef_map_list_src_to_ast(fun_src_lst)
00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(<emphasis role="stringliteral">&apos;c:@F@f1#I#&#32;&apos;</emphasis>&#32;+
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.join(<emphasis role="stringliteral">&apos;ast&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;path&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;f&#32;1.c.ast&apos;</emphasis>)
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">in</emphasis>&#32;fun_ast_lst)
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(1,&#32;len(fun_ast_lst))
</programlisting></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/unit/<link linkend="_test__analyze_8py">test_analyze.py</link></section>
</section>
