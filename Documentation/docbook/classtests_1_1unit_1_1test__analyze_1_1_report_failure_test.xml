<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1unit_1_1test__analyze_1_1_report_failure_test" xml:lang="en-US">
<title>tests.unit.test_analyze.ReportFailureTest Class Reference</title>
<indexterm><primary>tests.unit.test_analyze.ReportFailureTest</primary></indexterm>
<para>Inheritance diagram for tests.unit.test_analyze.ReportFailureTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1unit_1_1test__analyze_1_1_report_failure_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_report_failure_test_1a9adea754ee2d568e911e28390adb5c15">assertUnderFailures</link> (self, path)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_report_failure_test_1a816218f84f033a7cc83bd1ca76e8c8b8">test_report_failure_create_files</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__analyze_8py_source_1l00185">185</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_report_failure_test_1a9adea754ee2d568e911e28390adb5c15"/>    <section>
    <title>assertUnderFailures()</title>
<indexterm><primary>assertUnderFailures</primary><secondary>tests.unit.test_analyze.ReportFailureTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.ReportFailureTest</primary><secondary>assertUnderFailures</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.ReportFailureTest.assertUnderFailures ( self,  path)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00187">187</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00187 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>assertUnderFailures(self,&#32;path):
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="stringliteral">&apos;failures&apos;</emphasis>,&#32;os.path.basename(os.path.dirname(path)))
00189 
</programlisting><para>
Referenced by <link linkend="_test__analyze_8py_source_1l00190">tests.unit.test_analyze.ReportFailureTest.test_report_failure_create_files()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_report_failure_test_1a816218f84f033a7cc83bd1ca76e8c8b8"/>    <section>
    <title>test_report_failure_create_files()</title>
<indexterm><primary>test_report_failure_create_files</primary><secondary>tests.unit.test_analyze.ReportFailureTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.ReportFailureTest</primary><secondary>test_report_failure_create_files</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.ReportFailureTest.test_report_failure_create_files ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00190">190</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00190 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_report_failure_create_files(self):
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;create&#32;input&#32;file</emphasis>
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>)
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename,&#32;<emphasis role="stringliteral">&apos;w&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handle:
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handle.write(<emphasis role="stringliteral">&apos;int&#32;main()&#32;{&#32;return&#32;0&apos;</emphasis>)
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uname_msg&#32;=&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>.join(os.uname())&#32;+&#32;os.linesep
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error_msg&#32;=&#32;<emphasis role="stringliteral">&apos;this&#32;is&#32;my&#32;error&#32;output&apos;</emphasis>
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;execute&#32;test</emphasis>
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opts&#32;=&#32;{
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;clang&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;directory&apos;</emphasis>:&#32;os.getcwd(),
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;flags&apos;</emphasis>:&#32;[],
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;file&apos;</emphasis>:&#32;filename,
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;output_dir&apos;</emphasis>:&#32;tmpdir,
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;language&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;c&apos;</emphasis>,
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;error_type&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;other_error&apos;</emphasis>,
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;error_output&apos;</emphasis>:&#32;error_msg,
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;exit_code&apos;</emphasis>:&#32;13
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sut.report_failure(opts)
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;verify&#32;the&#32;result</emphasis>
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;dict()
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pp_file&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;root,&#32;_,&#32;files&#32;<emphasis role="keywordflow">in</emphasis>&#32;os.walk(tmpdir):
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;keys&#32;=&#32;[os.path.join(root,&#32;name)&#32;<emphasis role="keywordflow">for</emphasis>&#32;name&#32;<emphasis role="keywordflow">in</emphasis>&#32;files]
00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;key&#32;<emphasis role="keywordflow">in</emphasis>&#32;keys:
00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(key,&#32;<emphasis role="stringliteral">&apos;r&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handle:
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result[key]&#32;=&#32;handle.readlines()
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;re.match(<emphasis role="stringliteral">r&apos;^(.*/)+clang(.*)\.i$&apos;</emphasis>,&#32;key):
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pp_file&#32;=&#32;key
00221 
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;prepocessor&#32;file&#32;generated</emphasis>
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertUnderFailures(pp_file)
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;info&#32;file&#32;generated&#32;and&#32;content&#32;dumped</emphasis>
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;info_file&#32;=&#32;pp_file&#32;+&#32;<emphasis role="stringliteral">&apos;.info.txt&apos;</emphasis>
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(info_file&#32;<emphasis role="keywordflow">in</emphasis>&#32;result)
00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="stringliteral">&apos;Other&#32;Error\n&apos;</emphasis>,&#32;result[info_file][1])
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(uname_msg,&#32;result[info_file][3])
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;error&#32;file&#32;generated&#32;and&#32;content&#32;dumped</emphasis>
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error_file&#32;=&#32;pp_file&#32;+&#32;<emphasis role="stringliteral">&apos;.stderr.txt&apos;</emphasis>
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(error_file&#32;<emphasis role="keywordflow">in</emphasis>&#32;result)
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual([error_msg],&#32;result[error_file])
00233 
00234 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00187">tests.unit.test_analyze.ReportFailureTest.assertUnderFailures()</link>, <link linkend="_startfile_8py_source_1l00206">startfile.open()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/unit/<link linkend="_test__analyze_8py">test_analyze.py</link></section>
</section>
