<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_bit_array" xml:lang="en-US">
<title>BitArray Class Reference</title>
<indexterm><primary>BitArray</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1">BitArray</link> (size_t size)</para>
</listitem>
            <listitem><para><link linkend="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f">~BitArray</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45">get</link> (size_t n) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50">setFlagsFalse</link> (size_t n, size_t skip)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
            <listitem><para>static constexpr uint32_t <link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link> (uint32_t x, uint32_t n)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00020">20</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00040">40</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00043 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00045">45</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
<programlisting>00045 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__2_8cpp_source_1l00040">40</link> of file <link linkend="__performance___prime___with___counter__2_8cpp_source">Performance_Prime_With_Counter_2.cpp</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00043 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__2_8cpp_source_1l00045">45</link> of file <link linkend="__performance___prime___with___counter__2_8cpp_source">Performance_Prime_With_Counter_2.cpp</link>.</para>
<programlisting>00045 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__3_8cpp_source_1l00040">40</link> of file <link linkend="__performance___prime___with___counter__3_8cpp_source">Performance_Prime_With_Counter_3.cpp</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00043 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__3_8cpp_source_1l00045">45</link> of file <link linkend="__performance___prime___with___counter__3_8cpp_source">Performance_Prime_With_Counter_3.cpp</link>.</para>
<programlisting>00045 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__4_8cpp_source_1l00040">40</link> of file <link linkend="__performance___prime___with___counter__4_8cpp_source">Performance_Prime_With_Counter_4.cpp</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00043 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__4_8cpp_source_1l00045">45</link> of file <link linkend="__performance___prime___with___counter__4_8cpp_source">Performance_Prime_With_Counter_4.cpp</link>.</para>
<programlisting>00045 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__5_8cpp_source_1l00040">40</link> of file <link linkend="__performance___prime___with___counter__5_8cpp_source">Performance_Prime_With_Counter_5.cpp</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00043 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__5_8cpp_source_1l00045">45</link> of file <link linkend="__performance___prime___with___counter__5_8cpp_source">Performance_Prime_With_Counter_5.cpp</link>.</para>
<programlisting>00045 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__6_8cpp_source_1l00040">40</link> of file <link linkend="__performance___prime___with___counter__6_8cpp_source">Performance_Prime_With_Counter_6.cpp</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00043 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__6_8cpp_source_1l00045">45</link> of file <link linkend="__performance___prime___with___counter__6_8cpp_source">Performance_Prime_With_Counter_6.cpp</link>.</para>
<programlisting>00045 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a79275b2a0a9a7d1039a022c7ac2acab1"/>    <section>
    <title>BitArray()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>BitArray</secondary></indexterm>
<para><computeroutput>BitArray::BitArray (size_t size)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___without___counter_8cpp_source_1l00039">39</link> of file <link linkend="__performance___prime___without___counter_8cpp_source">Performance_Prime_Without_Counter.cpp</link>.</para>
<programlisting>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;arrSize(size)&#32;{
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;uint32_t[arraySize(size)];
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::memset(array,&#32;0xFF,&#32;(size&#32;&gt;&gt;&#32;3)&#32;+&#32;((size&#32;&amp;&#32;7)&#32;&gt;&#32;0));
00042 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a8f4d14141e3c7093ac8558604710736f"/>    <section>
    <title>~BitArray()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>~BitArray</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>~BitArray</secondary></indexterm>
<para><computeroutput>BitArray::~BitArray ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___without___counter_8cpp_source_1l00044">44</link> of file <link linkend="__performance___prime___without___counter_8cpp_source">Performance_Prime_Without_Counter.cpp</link>.</para>
<programlisting>00044 {<emphasis role="keyword">delete</emphasis>&#32;[]&#32;array;}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00047">47</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
<programlisting>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00049 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00150">prime_sieve::countPrimes()</link>, <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00114">prime_sieve::printResults()</link>, and <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00093">prime_sieve::runSieve()</link>.</para>
    </section><anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__2_8cpp_source_1l00047">47</link> of file <link linkend="__performance___prime___with___counter__2_8cpp_source">Performance_Prime_With_Counter_2.cpp</link>.</para>
<programlisting>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00049 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__3_8cpp_source_1l00047">47</link> of file <link linkend="__performance___prime___with___counter__3_8cpp_source">Performance_Prime_With_Counter_3.cpp</link>.</para>
<programlisting>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00049 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__4_8cpp_source_1l00047">47</link> of file <link linkend="__performance___prime___with___counter__4_8cpp_source">Performance_Prime_With_Counter_4.cpp</link>.</para>
<programlisting>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00049 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__5_8cpp_source_1l00047">47</link> of file <link linkend="__performance___prime___with___counter__5_8cpp_source">Performance_Prime_With_Counter_5.cpp</link>.</para>
<programlisting>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00049 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__6_8cpp_source_1l00047">47</link> of file <link linkend="__performance___prime___with___counter__6_8cpp_source">Performance_Prime_With_Counter_6.cpp</link>.</para>
<programlisting>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00049 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a687c9d8bad72ee9873d24051d74dad45"/>    <section>
    <title>get()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>get</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>get</secondary></indexterm>
<para><computeroutput>bool BitArray::get (size_t n) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___without___counter_8cpp_source_1l00046">46</link> of file <link linkend="__performance___prime___without___counter_8cpp_source">Performance_Prime_Without_Counter.cpp</link>.</para>
<programlisting>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;getSubindex(n,&#32;array[index(n)]);
00048 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00051">51</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00053 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__2_8cpp_source_1l00051">51</link> of file <link linkend="__performance___prime___with___counter__2_8cpp_source">Performance_Prime_With_Counter_2.cpp</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00053 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__3_8cpp_source_1l00051">51</link> of file <link linkend="__performance___prime___with___counter__3_8cpp_source">Performance_Prime_With_Counter_3.cpp</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00053 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__4_8cpp_source_1l00051">51</link> of file <link linkend="__performance___prime___with___counter__4_8cpp_source">Performance_Prime_With_Counter_4.cpp</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00053 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__5_8cpp_source_1l00051">51</link> of file <link linkend="__performance___prime___with___counter__5_8cpp_source">Performance_Prime_With_Counter_5.cpp</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00053 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__6_8cpp_source_1l00051">51</link> of file <link linkend="__performance___prime___with___counter__6_8cpp_source">Performance_Prime_With_Counter_6.cpp</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00053 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1"/>    <section>
    <title>rol()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>rol</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>rol</secondary></indexterm>
<para><computeroutput>static constexpr uint32_t BitArray::rol (uint32_t x, uint32_t n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___without___counter_8cpp_source_1l00050">50</link> of file <link linkend="__performance___prime___without___counter_8cpp_source">Performance_Prime_Without_Counter.cpp</link>.</para>
<programlisting>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(x&lt;&lt;n)&#32;|&#32;(x&gt;&gt;(32-n));
00052 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[1/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00055">55</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
<programlisting>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[index(n)]&#32;&amp;=&#32;rolling_mask;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 &#32;&#32;&#32;&#32;}
</programlisting><para>
Referenced by <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00093">prime_sieve::runSieve()</link>.</para>
    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[2/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__2_8cpp_source_1l00055">55</link> of file <link linkend="__performance___prime___with___counter__2_8cpp_source">Performance_Prime_With_Counter_2.cpp</link>.</para>
<programlisting>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[index(n)]&#32;&amp;=&#32;rolling_mask;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[3/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__3_8cpp_source_1l00055">55</link> of file <link linkend="__performance___prime___with___counter__3_8cpp_source">Performance_Prime_With_Counter_3.cpp</link>.</para>
<programlisting>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[index(n)]&#32;&amp;=&#32;rolling_mask;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[4/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__4_8cpp_source_1l00055">55</link> of file <link linkend="__performance___prime___with___counter__4_8cpp_source">Performance_Prime_With_Counter_4.cpp</link>.</para>
<programlisting>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[index(n)]&#32;&amp;=&#32;rolling_mask;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00063 &#32;&#32;&#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[5/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__5_8cpp_source_1l00055">55</link> of file <link linkend="__performance___prime___with___counter__5_8cpp_source">Performance_Prime_With_Counter_5.cpp</link>.</para>
<programlisting>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__5_8cpp_1aa0fee0586f094bcb161928e37d36b3a1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(2);
00057 <emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__5_8cpp_1aa0fee0586f094bcb161928e37d36b3a1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(2);
00060 <link linkend="__performance___prime___with___counter__5_8cpp_1aa0fee0586f094bcb161928e37d36b3a1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(3);
00061 <emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[index(n)]&#32;&amp;=&#32;rolling_mask;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<link linkend="__performance___prime___with___counter__5_8cpp_1aa0fee0586f094bcb161928e37d36b3a1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(3);
00066 
00067 &#32;&#32;&#32;&#32;}
</programlisting><para>
References <link linkend="__performance___prime___with___counter__5_8cpp_1aa0fee0586f094bcb161928e37d36b3a1">dataStorage()</link>, <link linkend="__data_storage_8cpp_source_1l00046">DataStorage::endEvent()</link>, and <link linkend="__data_storage_8cpp_source_1l00028">DataStorage::startEvent()</link>.</para>
    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[6/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__6_8cpp_source_1l00055">55</link> of file <link linkend="__performance___prime___with___counter__6_8cpp_source">Performance_Prime_With_Counter_6.cpp</link>.</para>
<programlisting>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__6_8cpp_1a1ad893ca497f8a01766ec095a7665f7d">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(1);
00059 <emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__6_8cpp_1a1ad893ca497f8a01766ec095a7665f7d">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(2);
00061 array[index(n)]&#32;&amp;=&#32;rolling_mask;
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00064 <link linkend="__performance___prime___with___counter__6_8cpp_1a1ad893ca497f8a01766ec095a7665f7d">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(2);
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}<link linkend="__performance___prime___with___counter__6_8cpp_1a1ad893ca497f8a01766ec095a7665f7d">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(1);
00066 
00067 &#32;&#32;&#32;&#32;}
</programlisting><para>
References <link linkend="__performance___prime___with___counter__6_8cpp_1a1ad893ca497f8a01766ec095a7665f7d">dataStorage()</link>, <link linkend="__data_storage_8cpp_source_1l00046">DataStorage::endEvent()</link>, and <link linkend="__data_storage_8cpp_source_1l00028">DataStorage::startEvent()</link>.</para>
    </section><anchor xml:id="_class_bit_array_1a07e5ee143240de80ab2ab0ab64818f50"/>    <section>
    <title>setFlagsFalse()<computeroutput>[7/7]</computeroutput></title>
<indexterm><primary>setFlagsFalse</primary><secondary>BitArray</secondary></indexterm>
<indexterm><primary>BitArray</primary><secondary>setFlagsFalse</secondary></indexterm>
<para><computeroutput>void BitArray::setFlagsFalse (size_t n, size_t skip)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__performance___prime___without___counter_8cpp_source_1l00054">54</link> of file <link linkend="__performance___prime___without___counter_8cpp_source">Performance_Prime_Without_Counter.cpp</link>.</para>
<programlisting>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;rolling_mask&#32;=&#32;~uint32_t(1&#32;&lt;&lt;&#32;n&#32;%&#32;32);
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;roll_bits&#32;=&#32;skip&#32;%&#32;32;
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(n&#32;&lt;&#32;arrSize)&#32;{
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;array[index(n)]&#32;&amp;=&#32;rolling_mask;
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;+=&#32;skip;
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rolling_mask&#32;=&#32;<link linkend="_class_bit_array_1ab4ba1bbe426655b4279d7b2d87400bf1">rol</link>(rolling_mask,&#32;roll_bits);
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00062 &#32;&#32;&#32;&#32;}
</programlisting></section>
<para>
The documentation for this class was generated from the following files:</para>
Tests/Prime Tests Cases/<link linkend="__performance___prime___with___counter__1_8cpp">Performance_Prime_With_Counter_1.cpp</link>Tests/Prime Tests Cases/<link linkend="__performance___prime___with___counter__2_8cpp">Performance_Prime_With_Counter_2.cpp</link>Tests/Prime Tests Cases/<link linkend="__performance___prime___with___counter__3_8cpp">Performance_Prime_With_Counter_3.cpp</link>Tests/Prime Tests Cases/<link linkend="__performance___prime___with___counter__4_8cpp">Performance_Prime_With_Counter_4.cpp</link>Tests/Prime Tests Cases/<link linkend="__performance___prime___with___counter__5_8cpp">Performance_Prime_With_Counter_5.cpp</link>Tests/Prime Tests Cases/<link linkend="__performance___prime___with___counter__6_8cpp">Performance_Prime_With_Counter_6.cpp</link>Tests/Prime Tests Cases/<link linkend="__performance___prime___without___counter_8cpp">Performance_Prime_Without_Counter.cpp</link></section>
</section>
