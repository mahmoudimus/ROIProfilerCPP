<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_clang_8py" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/scan-build-py/lib/libscanbuild/clang.py File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/scan-build-py/lib/libscanbuild/clang.py</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classlibscanbuild_1_1clang_1_1_clang_error_exception">libscanbuild.clang.ClangErrorException</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespacelibscanbuild_1_1clang">libscanbuild.clang</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1ac38809d624aaefe00fff85b0bfa1005f">libscanbuild.clang.get_version</link> (clang)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1aceaa1fcd710247641672c50964398c2a">libscanbuild.clang.get_arguments</link> (command, cwd)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1a22384ca519d665152d7131a80ea349bb">libscanbuild.clang.get_active_checkers</link> (clang, plugins)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1a34893da383d84e138695f07a596d1b2b">libscanbuild.clang.is_active</link> (checkers)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1af887fda2dc553cce619a1a5dc9a39267">libscanbuild.clang.parse_checkers</link> (stream)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1a70514d7e50269346912151e9c2b0e0d7">libscanbuild.clang.get_checkers</link> (clang, plugins)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1aea5b01c822382e97fd622bbfadd82c62">libscanbuild.clang.is_ctu_capable</link> (extdef_map_cmd)</para>
</listitem>
            <listitem><para>def <link linkend="_namespacelibscanbuild_1_1clang_1af91327b127fdb63a9c81a3d8d03d5149">libscanbuild.clang.get_triple_arch</link> (command, cwd)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacelibscanbuild_1_1clang_1a432255a4149d3c1c5deb929fdad2b46e">libscanbuild.clang.ACTIVE_CHECKER_PATTERN</link> = re.compile(r&apos;^-analyzer-checker=(.*)$&apos;)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
