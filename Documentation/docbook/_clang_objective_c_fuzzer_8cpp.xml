<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__clang_objective_c_fuzzer_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/ClangObjectiveCFuzzer.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/ClangObjectiveCFuzzer.cpp</primary></indexterm>
<programlisting>#include &quot;handle-cxx/handle_cxx.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="__clang_objective_c_fuzzer_8cpp_1aa30889313cc057073351a87b2590b886">LLVMFuzzerInitialize</link> (int *argc, char ***argv)</para>
</listitem>
            <listitem><para>int <link linkend="__clang_objective_c_fuzzer_8cpp_1aecb7ba40a567c045e6eb69209014e460">LLVMFuzzerTestOneInput</link> (uint8_t *data, size_t size)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file implements a function that runs Clang on a single Objective-C input. This function is then linked into the Fuzzer library. </para>
<para>
Definition in file <link linkend="__clang_objective_c_fuzzer_8cpp_source">ClangObjectiveCFuzzer.cpp</link>.</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__clang_objective_c_fuzzer_8cpp_1aa30889313cc057073351a87b2590b886"/>    <section>
    <title>LLVMFuzzerInitialize()</title>
<indexterm><primary>LLVMFuzzerInitialize</primary><secondary>ClangObjectiveCFuzzer.cpp</secondary></indexterm>
<indexterm><primary>ClangObjectiveCFuzzer.cpp</primary><secondary>LLVMFuzzerInitialize</secondary></indexterm>
<para><computeroutput>int LLVMFuzzerInitialize (int * argc, char *** argv)</computeroutput></para><para>
Definition at line <link linkend="__clang_objective_c_fuzzer_8cpp_source_1l00019">19</link> of file <link linkend="__clang_objective_c_fuzzer_8cpp_source">ClangObjectiveCFuzzer.cpp</link>.</para>
<programlisting>00019 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;&#32;}
</programlisting>    </section><anchor xml:id="__clang_objective_c_fuzzer_8cpp_1aecb7ba40a567c045e6eb69209014e460"/>    <section>
    <title>LLVMFuzzerTestOneInput()</title>
<indexterm><primary>LLVMFuzzerTestOneInput</primary><secondary>ClangObjectiveCFuzzer.cpp</secondary></indexterm>
<indexterm><primary>ClangObjectiveCFuzzer.cpp</primary><secondary>LLVMFuzzerTestOneInput</secondary></indexterm>
<para><computeroutput>int LLVMFuzzerTestOneInput (uint8_t * data, size_t size)</computeroutput></para><para>
Definition at line <link linkend="__clang_objective_c_fuzzer_8cpp_source_1l00021">21</link> of file <link linkend="__clang_objective_c_fuzzer_8cpp_source">ClangObjectiveCFuzzer.cpp</link>.</para>
<programlisting>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00022 &#32;&#32;std::string&#32;s(<emphasis role="keyword">reinterpret_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><emphasis role="keywordtype">char</emphasis>&#32;*<emphasis role="keyword">&gt;</emphasis>(data),&#32;size);
00023 &#32;&#32;<link linkend="_namespaceclang__fuzzer_1a27dbd4f50876f9f3532cb6145a78da33">HandleCXX</link>(s,&#32;<emphasis role="stringliteral">&quot;./test.m&quot;</emphasis>,&#32;{<emphasis role="stringliteral">&quot;-O2&quot;</emphasis>});
00024 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00025 }
</programlisting><para>
References <link linkend="_handle__cxx_8cpp_source_1l00023">clang_fuzzer::HandleCXX()</link>.</para>
</section>
</section>
</section>
