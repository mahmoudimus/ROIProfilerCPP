<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__performance___prime___without___counter_8cpp" xml:lang="en-US">
<title>Tests/Prime Tests Cases/Performance_Prime_Without_Counter.cpp File Reference</title>
<indexterm><primary>Tests/Prime Tests Cases/Performance_Prime_Without_Counter.cpp</primary></indexterm>
<programlisting>#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;iostream&gt;
#include &lt;bitset&gt;
#include &lt;map&gt;
#include &lt;cstring&gt;
#include &lt;cmath&gt;
#include &lt;fstream&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_bit_array">BitArray</link></para>
</listitem>
            <listitem><para>class <link linkend="_classprime__sieve">prime_sieve</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="__performance___prime___without___counter_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__performance___prime___without___counter_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>Performance_Prime_Without_Counter.cpp</secondary></indexterm>
<indexterm><primary>Performance_Prime_Without_Counter.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>
Definition at line <link linkend="__performance___prime___without___counter_8cpp_source_1l00173">173</link> of file <link linkend="__performance___prime___without___counter_8cpp_source">Performance_Prime_Without_Counter.cpp</link>.</para>
<programlisting>00174 {
00175 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;passes&#32;=&#32;0;
00176 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;tStart&#32;=&#32;steady_clock::now();
00177 
00178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
00179 &#32;&#32;&#32;&#32;{
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classprime__sieve">prime_sieve</link>&#32;sieve(1000000L);
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sieve.runSieve();
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passes++;
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration_cast&lt;seconds&gt;(steady_clock::now()&#32;-&#32;tStart).count()&#32;&gt;=&#32;5)
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sieve.printResults(<emphasis role="keyword">false</emphasis>,&#32;duration_cast&lt;microseconds&gt;(steady_clock::now()&#32;-&#32;tStart).count()&#32;/&#32;1000000.0,&#32;passes);
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00188 &#32;&#32;&#32;&#32;}
00189 
00190 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00191 }
</programlisting><para>
References <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00114">prime_sieve::printResults()</link>, and <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00093">prime_sieve::runSieve()</link>.</para>
</section>
</section>
</section>
