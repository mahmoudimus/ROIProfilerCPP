<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_loop__proto__to__llvm_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp</primary></indexterm>
<programlisting>#include &quot;loop_proto_to_llvm.h&quot;
#include &quot;cxx_loop_proto.pb.h&quot;
#include &quot;../handle-llvm/input_arrays.h&quot;
#include &lt;google/protobuf/text_format.h&gt;
#include &lt;ostream&gt;
#include &lt;sstream&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classclang__fuzzer_1_1_inner_loop">clang_fuzzer::InnerLoop</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespaceclang__fuzzer">clang_fuzzer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1a2a135ddb6bd40169f7f809210bded8b3">clang_fuzzer::BinopToString</link> (std::ostream &amp;os, const BinaryOp &amp;x)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1aa61cc7ac7e7f548b02f20fdbdd5aedc3">clang_fuzzer::StateSeqToString</link> (std::ostream &amp;os, const StatementSeq &amp;x)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1a4286ea62a31f17f2f81fdbe82e84d30e">clang_fuzzer::ConstToString</link> (const Const &amp;x)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1a42168c5369d315d97d112481cedf9e5a">clang_fuzzer::VarRefToString</link> (std::ostream &amp;os, const VarRef &amp;x)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1af95d943f747b8628a4981aec82abb9d8">clang_fuzzer::RvalueToString</link> (std::ostream &amp;os, const Rvalue &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1adefdaecdbb1de92f0eeba7640b89685b">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const AssignmentStatement &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1ac90ec7b7ecf1e1ead9595d1a983f022d">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const Statement &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1aed1d352356cde87e890c29c8c4d67395">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const StatementSeq &amp;x)</para>
</listitem>
            <listitem><para>void <link linkend="_namespaceclang__fuzzer_1a1de27ebdd8a199c6bdbb5a195631f553">clang_fuzzer::NestedLoopToString</link> (std::ostream &amp;os, const LoopFunction &amp;x)</para>
</listitem>
            <listitem><para>void <link linkend="_namespaceclang__fuzzer_1acecea2c5371f615b84065480211f1374">clang_fuzzer::SingleLoopToString</link> (std::ostream &amp;os, const LoopFunction &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1a52282fc06ac9b7761f21d2588974776a">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const LoopFunction &amp;x)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1a35ef2ec34abd6c5c09fcf55180046986">clang_fuzzer::LoopFunctionToLLVMString</link> (const LoopFunction &amp;input)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1af604fc28b812e241cd6abfebaedc4797">clang_fuzzer::LoopProtoToLLVM</link> (const uint8_t *data, size_t size)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
