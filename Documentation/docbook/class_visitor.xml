<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_visitor" xml:lang="en-US">
<title>Visitor Class Reference</title>
<indexterm><primary>Visitor</primary></indexterm>
<para>Inheritance diagram for Visitor:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_visitor.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_visitor_1a359811b176e137a82a7317e9d5273555">Visitor</link> (ASTContext *Context)</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_visitor_1a4edf72b13c0c55c7be015111c3c6e5df">VisitStmt</link> (Stmt *stmt)</para>

<para>Visit every statement linked to input file. If a stmt option is specified the tools searches for the first occurance of an statement with the specified id. The statement is then casted to the matching statement class and body of the statement will be extracted and annotated. </para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_visitor_1a55ed637ddbf214db01b1b5d65ccfd263">VisitFunctionDecl</link> (FunctionDecl *func)</para>

<para>Visit every function linked to input file. The functions are traversed to find locations for initialization, runtime performance counter and for printing the summary. If stmt option is not specified, the main method will be traversed. </para>
</listitem>
            <listitem><para>virtual <link linkend="_class_visitor_1a2c9cc57ee3a518a193ea88384cbf3937">~Visitor</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__hagn_tool_8cpp_source_1l00212">212</link> of file <link linkend="__hagn_tool_8cpp_source">HagnTool.cpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_visitor_1a359811b176e137a82a7317e9d5273555"/>    <section>
    <title>Visitor()</title>
<indexterm><primary>Visitor</primary><secondary>Visitor</secondary></indexterm>
<indexterm><primary>Visitor</primary><secondary>Visitor</secondary></indexterm>
<para><computeroutput>Visitor::Visitor (ASTContext * Context)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__hagn_tool_8cpp_source_1l00217">217</link> of file <link linkend="__hagn_tool_8cpp_source">HagnTool.cpp</link>.</para>
<programlisting>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;astContext(&#32;Context&#32;)&#32;<emphasis role="comment">//&#32;initialize&#32;private&#32;members</emphasis>
00219 &#32;&#32;&#32;&#32;{
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.setSourceMgr(&#32;astContext-&gt;getSourceManager(&#32;),
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getLangOpts(&#32;));
00222 &#32;&#32;&#32;&#32;}
</programlisting><para>
References <link linkend="__hagn_tool_8h_source_1l00030">rewriter</link>.</para>
    </section><anchor xml:id="_class_visitor_1a2c9cc57ee3a518a193ea88384cbf3937"/>    <section>
    <title>~Visitor()</title>
<indexterm><primary>~Visitor</primary><secondary>Visitor</secondary></indexterm>
<indexterm><primary>Visitor</primary><secondary>~Visitor</secondary></indexterm>
<para><computeroutput>virtual Visitor::~Visitor ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__hagn_tool_8cpp_source_1l00328">328</link> of file <link linkend="__hagn_tool_8cpp_source">HagnTool.cpp</link>.</para>
<programlisting>00328 {&#32;}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_visitor_1a55ed637ddbf214db01b1b5d65ccfd263"/>    <section>
    <title>VisitFunctionDecl()</title>
<indexterm><primary>VisitFunctionDecl</primary><secondary>Visitor</secondary></indexterm>
<indexterm><primary>Visitor</primary><secondary>VisitFunctionDecl</secondary></indexterm>
<para><computeroutput>virtual bool Visitor::VisitFunctionDecl (FunctionDecl * func)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit every function linked to input file. The functions are traversed to find locations for initialization, runtime performance counter and for printing the summary. If stmt option is not specified, the main method will be traversed. </para>
</para>

<para>! </para>
<para>
Definition at line <link linkend="__hagn_tool_8cpp_source_1l00281">281</link> of file <link linkend="__hagn_tool_8cpp_source">HagnTool.cpp</link>.</para>
<programlisting>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00282 
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;initialization&#32;location&#32;for&#32;includes&#32;and&#32;initialization&#32;of&#32;hagn&#32;lib</emphasis>
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__hagn_tool_8h_1a824216c5325518b8eec871b8174fec3f">initializationLocation</link>.isInvalid(&#32;)&#32;&amp;&amp;
00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8h_1a824216c5325518b8eec871b8174fec3f">initializationLocation</link>&#32;=&#32;func-&gt;getOuterLocStart(&#32;);
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00288 
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;first&#32;location&#32;in&#32;main&#32;class&#32;for&#32;runtime&#32;measurement</emphasis>
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__hagn_tool_8h_1a6a7a6f87a39ed5405e4f4df9e1205530">runtimeStartLocation</link>.isInvalid(&#32;)&#32;&amp;&amp;
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;func-&gt;isMain(&#32;))&#32;{
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;locAfterBrace(&#32;clang::Lexer::findLocationAfterToken(
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;func-&gt;getBody(&#32;)-&gt;getBeginLoc(&#32;).getLocWithOffset(&#32;-1&#32;),&#32;clang::tok::l_brace,
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;),
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getLangOpts(&#32;),&#32;<emphasis role="keyword">true</emphasis>&#32;));
00297 
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8h_1a6a7a6f87a39ed5405e4f4df9e1205530">runtimeStartLocation</link>&#32;=&#32;locAfterBrace;
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00301 
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;summary&#32;location&#32;in&#32;main&#32;class&#32;for&#32;ending&#32;runtime&#32;event&#32;and&#32;print&#32;event</emphasis>
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__hagn_tool_8h_1a4d00baee5074510abc5b5853de403290">summaryLocation</link>.isInvalid(&#32;)&#32;&amp;&amp;
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;func-&gt;isMain(&#32;))&#32;{
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;Stmt::child_iterator&#32;i&#32;=&#32;func-&gt;getBody(&#32;)-&gt;child_begin(&#32;),&#32;e&#32;=&#32;func-&gt;getBody(&#32;)-&gt;child_end(&#32;);
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;!=&#32;e;&#32;++i&#32;)&#32;{
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*currStmt&#32;=&#32;*i;
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ReturnStmtClass&#32;)&#32;{
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8h_1a4d00baee5074510abc5b5853de403290">summaryLocation</link>&#32;=&#32;currStmt-&gt;getBeginLoc(&#32;);
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00315 
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;annotate&#32;only&#32;main&#32;function&#32;if&#32;statement&#32;option&#32;is&#32;start</emphasis>
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__hagn_tool_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;==&#32;<emphasis role="stringliteral">&quot;start&quot;</emphasis>&#32;)&#32;{
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;func-&gt;isMain(&#32;))&#32;{
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;func-&gt;getBody(&#32;),&#32;astContext&#32;);
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00324 
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00326 &#32;&#32;&#32;&#32;}
</programlisting><para>
References <link linkend="__hagn_tool_8h_source_1l00033">initializationLocation</link>, <link linkend="__hagn_tool_8h_source_1l00036">runtimeStartLocation</link>, <link linkend="__hagn_tool_8h_source_1l00041">statementOption</link>, <link linkend="__hagn_tool_8h_source_1l00039">summaryLocation</link>, and <link linkend="__hagn_tool_8cpp_source_1l00060">traverseChildren()</link>.</para>
    </section><anchor xml:id="_class_visitor_1a4edf72b13c0c55c7be015111c3c6e5df"/>    <section>
    <title>VisitStmt()</title>
<indexterm><primary>VisitStmt</primary><secondary>Visitor</secondary></indexterm>
<indexterm><primary>Visitor</primary><secondary>VisitStmt</secondary></indexterm>
<para><computeroutput>virtual bool Visitor::VisitStmt (Stmt * stmt)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Visit every statement linked to input file. If a stmt option is specified the tools searches for the first occurance of an statement with the specified id. The statement is then casted to the matching statement class and body of the statement will be extracted and annotated. </para>
</para>

<para>! </para>
<para>
Definition at line <link linkend="__hagn_tool_8cpp_source_1l00232">232</link> of file <link linkend="__hagn_tool_8cpp_source">HagnTool.cpp</link>.</para>
<programlisting>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;statements&#32;in&#32;main&#32;file</emphasis>
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;stmt-&gt;getBeginLoc(&#32;)))&#32;{
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;stmt&#32;identifier&#32;is&#32;specified</emphasis>
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__hagn_tool_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;!=&#32;<emphasis role="stringliteral">&quot;start&quot;</emphasis>&#32;)&#32;{
00237 
00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;statement&#32;identifier&#32;and&#32;cast&#32;to&#32;string</emphasis>
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int64_t&#32;currentId&#32;=&#32;stmt-&gt;getID(&#32;*astContext&#32;);
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;currentIdString&#32;=&#32;std::to_string(&#32;currentId&#32;);
00241 
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;statement&#32;with&#32;matching&#32;id</emphasis>
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentIdString&#32;==&#32;<link linkend="__hagn_tool_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;)&#32;{
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;stmt-&gt;getBeginLoc(),&#32;<emphasis role="stringliteral">&quot;dataStorage.startEvent(1);\n&quot;</emphasis>&#32;);
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;<link linkend="__hagn_tool_8cpp_1adfd72dc10aea9a01b5e9c1785033949d">getLocationAfterToken</link>(stmt-&gt;getEndLoc(),&#32;astContext),&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(1);\n&quot;</emphasis>&#32;);
00246 
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CallExprClass&#32;)&#32;{
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CallExpr&#32;*expr&#32;=&#32;cast&lt;CallExpr&gt;(&#32;stmt&#32;);
00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;expr-&gt;getDirectCallee(&#32;)-&gt;getBody(&#32;);
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ForStmtClass&#32;)&#32;{
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ForStmt&#32;*forStmt&#32;=&#32;cast&lt;ForStmt&gt;(&#32;stmt&#32;);
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;forStmt-&gt;getBody(&#32;);
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::WhileStmtClass&#32;)&#32;{
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WhileStmt&#32;*whileStmt&#32;=&#32;cast&lt;WhileStmt&gt;(&#32;stmt&#32;);
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;whileStmt-&gt;getBody(&#32;);
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::IfStmtClass&#32;)&#32;{
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IfStmt&#32;*ifStmt&#32;=&#32;cast&lt;IfStmt&gt;(&#32;stmt&#32;);
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;ifStmt-&gt;getThen(&#32;);
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__hagn_tool_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00271 &#32;&#32;&#32;&#32;}
</programlisting><para>
References <link linkend="__hagn_tool_8cpp_source_1l00010">getLocationAfterToken()</link>, <link linkend="__hagn_tool_8h_source_1l00030">rewriter</link>, <link linkend="__hagn_tool_8h_source_1l00041">statementOption</link>, and <link linkend="__hagn_tool_8cpp_source_1l00060">traverseChildren()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
<link linkend="__hagn_tool_8cpp">HagnTool.cpp</link></section>
</section>
