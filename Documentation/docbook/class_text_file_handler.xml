<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_text_file_handler" xml:lang="en-US">
<title>TextFileHandler Class Reference</title>
<indexterm><primary>TextFileHandler</primary></indexterm>
<para>Inheritance diagram for TextFileHandler:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_text_file_handler.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_text_file_handler_1a9012588218a8342dbb3216f2fd2ad1f0">TextFileHandler</link> (StringRef Comment)</para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1a87e2401d42b38125b706e0827723d5ec">listBundleIDsCallback</link> (MemoryBuffer &amp;Input, const <link linkend="_struct_file_handler_1_1_bundle_info">BundleInfo</link> &amp;Info) final</para>
</listitem>
            <listitem><para>virtual Error <link linkend="_class_file_handler_1a70cbb9c0347d248c018e52993a13255b">listBundleIDs</link> (MemoryBuffer &amp;Input)</para>

<para>List bundle IDs in <emphasis>Input</emphasis>. </para>
</listitem>
            <listitem><para>Error <link linkend="_class_file_handler_1a70ed8dd129df99dcd5d5e42fffd7b125">forEachBundle</link> (MemoryBuffer &amp;Input, std::function&lt; Error(const <link linkend="_struct_file_handler_1_1_bundle_info">BundleInfo</link> &amp;)&gt; Func)</para>

<para>For each bundle in <emphasis>Input</emphasis>, do <emphasis>Func</emphasis>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>Error <link linkend="_class_text_file_handler_1a1a17e99dd7b8dc26960f7cf517efe495">ReadHeader</link> (MemoryBuffer &amp;Input) final</para>
</listitem>
            <listitem><para>Expected&lt; Optional&lt; StringRef &gt; &gt; <link linkend="_class_text_file_handler_1a6d1891944c44694f060e29b6782ccb23">ReadBundleStart</link> (MemoryBuffer &amp;Input) final</para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1ac39e2d78fcd9e6bb858e7b6efee23d65">ReadBundleEnd</link> (MemoryBuffer &amp;Input) final</para>

<para>Read the marker that closes the current bundle. </para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1a9c3c03be3a980778c30eb310515cd8d9">ReadBundle</link> (raw_ostream &amp;OS, MemoryBuffer &amp;Input) final</para>

<para>Read the current bundle and write the result into the stream <emphasis>OS</emphasis>. </para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1a08d81ba747fa631f4487236685048f82">WriteHeader</link> (raw_fd_ostream &amp;OS, ArrayRef&lt; std::unique_ptr&lt; MemoryBuffer &gt;&gt; Inputs) final</para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1a2820cc3bdbf5f3070206e2a6dfd40b5c">WriteBundleStart</link> (raw_fd_ostream &amp;OS, StringRef TargetTriple) final</para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1a00f79b24f0428f2e285eaac0963367b5">WriteBundleEnd</link> (raw_fd_ostream &amp;OS, StringRef TargetTriple) final</para>
</listitem>
            <listitem><para>Error <link linkend="_class_text_file_handler_1adad2a5ac6ba229cc8142dcf09d707246">WriteBundle</link> (raw_fd_ostream &amp;OS, MemoryBuffer &amp;Input) final</para>

<para>Write the bundle from <emphasis>Input</emphasis> into <emphasis>OS</emphasis>. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Handler for text files. The bundled file will have the following format.</para>

<para>&quot;Comment OFFLOAD_BUNDLER_MAGIC_STR__START__ triple&quot; Bundle 1 &quot;Comment OFFLOAD_BUNDLER_MAGIC_STR__END__ triple&quot; ... &quot;Comment OFFLOAD_BUNDLER_MAGIC_STR__START__ triple&quot; Bundle N &quot;Comment OFFLOAD_BUNDLER_MAGIC_STR__END__ triple&quot; </para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00702">702</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_text_file_handler_1a9012588218a8342dbb3216f2fd2ad1f0"/>    <section>
    <title>TextFileHandler()</title>
<indexterm><primary>TextFileHandler</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>TextFileHandler</secondary></indexterm>
<para><computeroutput>TextFileHandler::TextFileHandler (StringRef Comment)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00788">788</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00789 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_class_file_handler_1a0d1ac8e9911e19255e8b2d99c2d93f43">FileHandler</link>(),&#32;Comment(Comment),&#32;ReadChars(0)&#32;{
00790 &#32;&#32;&#32;&#32;BundleStartString&#32;=
00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>&#32;+&#32;Comment.str()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;<link linkend="__clang_offload_bundler_8cpp_1a8261baf2ddbb8a17f287149d5415eebf">OFFLOAD_BUNDLER_MAGIC_STR</link>&#32;<emphasis role="stringliteral">&quot;__START__&#32;&quot;</emphasis>;
00792 &#32;&#32;&#32;&#32;BundleEndString&#32;=
00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>&#32;+&#32;Comment.str()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;<link linkend="__clang_offload_bundler_8cpp_1a8261baf2ddbb8a17f287149d5415eebf">OFFLOAD_BUNDLER_MAGIC_STR</link>&#32;<emphasis role="stringliteral">&quot;__END__&#32;&quot;</emphasis>;
00794 &#32;&#32;}
</programlisting><para>
References <link linkend="__clang_offload_bundler_8cpp_source_1l00120">OFFLOAD_BUNDLER_MAGIC_STR</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_file_handler_1a70ed8dd129df99dcd5d5e42fffd7b125"/>    <section>
    <title>forEachBundle()</title>
<indexterm><primary>forEachBundle</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>forEachBundle</secondary></indexterm>
<para><computeroutput>Error FileHandler::forEachBundle (MemoryBuffer &amp; Input, std::function&lt; Error(const <link linkend="_struct_file_handler_1_1_bundle_info">BundleInfo</link> &amp;)&gt; Func)<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para><para>

<para>For each bundle in <emphasis>Input</emphasis>, do <emphasis>Func</emphasis>. </para>
</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00234">234</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)&#32;{
00237 &#32;&#32;&#32;&#32;&#32;&#32;Expected&lt;Optional&lt;StringRef&gt;&gt;&#32;CurTripleOrErr&#32;=&#32;<link linkend="_class_file_handler_1a5b31037af59fa8c77b8287d8ae9d84c4">ReadBundleStart</link>(Input);
00238 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!CurTripleOrErr)
00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CurTripleOrErr.takeError();
00240 
00241 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;No&#32;more&#32;bundles.</emphasis>
00242 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!*CurTripleOrErr)
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00244 
00245 &#32;&#32;&#32;&#32;&#32;&#32;StringRef&#32;CurTriple&#32;=&#32;**CurTripleOrErr;
00246 &#32;&#32;&#32;&#32;&#32;&#32;assert(!CurTriple.empty());
00247 
00248 &#32;&#32;&#32;&#32;&#32;&#32;BundleInfo&#32;Info{CurTriple};
00249 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Error&#32;Err&#32;=&#32;Func(Info))
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Err;
00251 &#32;&#32;&#32;&#32;}
00252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00253 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_file_handler_1a70cbb9c0347d248c018e52993a13255b"/>    <section>
    <title>listBundleIDs()</title>
<indexterm><primary>listBundleIDs</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>listBundleIDs</secondary></indexterm>
<para><computeroutput>virtual Error FileHandler::listBundleIDs (MemoryBuffer &amp; Input)<computeroutput>[inline]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para><para>

<para>List bundle IDs in <emphasis>Input</emphasis>. </para>
</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00220">220</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Error&#32;Err&#32;=&#32;<link linkend="_class_file_handler_1a0b973008bf7d7a53bc33d0f75b0dadef">ReadHeader</link>(Input))
00222 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Err;
00223 
00224 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_class_file_handler_1a70ed8dd129df99dcd5d5e42fffd7b125">forEachBundle</link>(Input,&#32;[&amp;](<emphasis role="keyword">const</emphasis>&#32;BundleInfo&#32;&amp;Info)&#32;-&gt;&#32;Error&#32;{
00225 &#32;&#32;&#32;&#32;&#32;&#32;llvm::outs()&#32;&lt;&lt;&#32;Info.BundleID&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
00226 &#32;&#32;&#32;&#32;&#32;&#32;Error&#32;Err&#32;=&#32;<link linkend="_class_file_handler_1af0a452c5014ddb59b9558614d21daaed">listBundleIDsCallback</link>(Input,&#32;Info);
00227 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Err)
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Err;
00229 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00230 &#32;&#32;&#32;&#32;});
00231 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a87e2401d42b38125b706e0827723d5ec"/>    <section>
    <title>listBundleIDsCallback()</title>
<indexterm><primary>listBundleIDsCallback</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>listBundleIDsCallback</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::listBundleIDsCallback (MemoryBuffer &amp; Input, const <link linkend="_struct_file_handler_1_1_bundle_info">BundleInfo</link> &amp; Info)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_file_handler_1af0a452c5014ddb59b9558614d21daaed">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00796">796</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00798 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TODO:&#32;To&#32;list&#32;bundle&#32;IDs&#32;in&#32;a&#32;bundled&#32;text&#32;file&#32;we&#32;need&#32;to&#32;go&#32;through</emphasis>
00799 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;all&#32;bundles.&#32;The&#32;format&#32;of&#32;bundled&#32;text&#32;file&#32;may&#32;need&#32;to&#32;include&#32;a</emphasis>
00800 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;header&#32;if&#32;the&#32;performance&#32;of&#32;listing&#32;bundle&#32;IDs&#32;of&#32;bundled&#32;text&#32;file&#32;is</emphasis>
00801 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;important.</emphasis>
00802 &#32;&#32;&#32;&#32;ReadChars&#32;=&#32;Input.getBuffer().find(BundleEndString,&#32;ReadChars);
00803 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Error&#32;Err&#32;=&#32;<link linkend="_class_text_file_handler_1ac39e2d78fcd9e6bb858e7b6efee23d65">ReadBundleEnd</link>(Input))
00804 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Err;
00805 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00806 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a9c3c03be3a980778c30eb310515cd8d9"/>    <section>
    <title>ReadBundle()</title>
<indexterm><primary>ReadBundle</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>ReadBundle</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::ReadBundle (raw_ostream &amp; OS, MemoryBuffer &amp; Input)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Read the current bundle and write the result into the stream <emphasis>OS</emphasis>. </para>
</para>
<para>
Implements <link linkend="_class_file_handler_1a6e4e497d5160eff3cab43dfdfd7e2a13">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00754">754</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00755 &#32;&#32;&#32;&#32;StringRef&#32;FC&#32;=&#32;Input.getBuffer();
00756 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;BundleStart&#32;=&#32;ReadChars;
00757 
00758 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;end&#32;of&#32;the&#32;bundle.</emphasis>
00759 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;BundleEnd&#32;=&#32;ReadChars&#32;=&#32;FC.find(BundleEndString,&#32;ReadChars);
00760 
00761 &#32;&#32;&#32;&#32;StringRef&#32;Bundle(&amp;FC.data()[BundleStart],&#32;BundleEnd&#32;-&#32;BundleStart);
00762 &#32;&#32;&#32;&#32;OS&#32;&lt;&lt;&#32;Bundle;
00763 
00764 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00765 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1ac39e2d78fcd9e6bb858e7b6efee23d65"/>    <section>
    <title>ReadBundleEnd()</title>
<indexterm><primary>ReadBundleEnd</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>ReadBundleEnd</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::ReadBundleEnd (MemoryBuffer &amp; Input)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Read the marker that closes the current bundle. </para>
</para>
<para>
Implements <link linkend="_class_file_handler_1a0dc30eeb824c348cc6f9bba853c93c41">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00740">740</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00741 &#32;&#32;&#32;&#32;StringRef&#32;FC&#32;=&#32;Input.getBuffer();
00742 
00743 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;up&#32;to&#32;the&#32;next&#32;new&#32;line.</emphasis>
00744 &#32;&#32;&#32;&#32;assert(FC[ReadChars]&#32;==&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>&#32;&amp;&amp;&#32;<emphasis role="stringliteral">&quot;The&#32;bundle&#32;should&#32;end&#32;with&#32;a&#32;new&#32;line.&quot;</emphasis>);
00745 
00746 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;TripleEnd&#32;=&#32;ReadChars&#32;=&#32;FC.find(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;ReadChars&#32;+&#32;1);
00747 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TripleEnd&#32;!=&#32;FC.npos)
00748 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;time&#32;we&#32;read&#32;after&#32;the&#32;new&#32;line.</emphasis>
00749 &#32;&#32;&#32;&#32;&#32;&#32;++ReadChars;
00750 
00751 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00752 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a6d1891944c44694f060e29b6782ccb23"/>    <section>
    <title>ReadBundleStart()</title>
<indexterm><primary>ReadBundleStart</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>ReadBundleStart</secondary></indexterm>
<para><computeroutput>Expected&lt;Optional&lt;StringRef&gt; &gt; TextFileHandler::ReadBundleStart (MemoryBuffer &amp; Input)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Read the marker of the next bundled to be read in the file. The bundle name is returned if there is one in the file, or <computeroutput>None</computeroutput> if there are no more bundles to be read. </para>
<para>
Implements <link linkend="_class_file_handler_1a5b31037af59fa8c77b8287d8ae9d84c4">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00718">718</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00719 &#32;&#32;&#32;&#32;StringRef&#32;FC&#32;=&#32;Input.getBuffer();
00720 
00721 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Find&#32;start&#32;of&#32;the&#32;bundle.</emphasis>
00722 &#32;&#32;&#32;&#32;ReadChars&#32;=&#32;FC.find(BundleStartString,&#32;ReadChars);
00723 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ReadChars&#32;==&#32;FC.npos)
00724 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;None;
00725 
00726 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;position&#32;of&#32;the&#32;triple.</emphasis>
00727 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;TripleStart&#32;=&#32;ReadChars&#32;=&#32;ReadChars&#32;+&#32;BundleStartString.size();
00728 
00729 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;position&#32;that&#32;closes&#32;the&#32;triple.</emphasis>
00730 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;TripleEnd&#32;=&#32;ReadChars&#32;=&#32;FC.find(<emphasis role="stringliteral">&quot;\n&quot;</emphasis>,&#32;ReadChars);
00731 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TripleEnd&#32;==&#32;FC.npos)
00732 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;None;
00733 
00734 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Next&#32;time&#32;we&#32;read&#32;after&#32;the&#32;new&#32;line.</emphasis>
00735 &#32;&#32;&#32;&#32;++ReadChars;
00736 
00737 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;StringRef(&amp;FC.data()[TripleStart],&#32;TripleEnd&#32;-&#32;TripleStart);
00738 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a1a17e99dd7b8dc26960f7cf517efe495"/>    <section>
    <title>ReadHeader()</title>
<indexterm><primary>ReadHeader</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>ReadHeader</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::ReadHeader (MemoryBuffer &amp; Input)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Update the file handler with information from the header of the bundled file. </para>
<para>
Implements <link linkend="_class_file_handler_1a0b973008bf7d7a53bc33d0f75b0dadef">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00716">716</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00716 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1adad2a5ac6ba229cc8142dcf09d707246"/>    <section>
    <title>WriteBundle()</title>
<indexterm><primary>WriteBundle</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>WriteBundle</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::WriteBundle (raw_fd_ostream &amp; OS, MemoryBuffer &amp; Input)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Write the bundle from <emphasis>Input</emphasis> into <emphasis>OS</emphasis>. </para>
</para>
<para>
Implements <link linkend="_class_file_handler_1aa308cfef5f3c06d3c15478097799e0e5">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00782">782</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00783 &#32;&#32;&#32;&#32;OS&#32;&lt;&lt;&#32;Input.getBuffer();
00784 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00785 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a00f79b24f0428f2e285eaac0963367b5"/>    <section>
    <title>WriteBundleEnd()</title>
<indexterm><primary>WriteBundleEnd</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>WriteBundleEnd</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::WriteBundleEnd (raw_fd_ostream &amp; OS, StringRef TargetTriple)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Write the marker that closes a bundle for the triple <emphasis>TargetTriple</emphasis> to <emphasis>OS</emphasis>. </para>
<para>
Implements <link linkend="_class_file_handler_1a716f51f009426d516f30cd7527f25681">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00777">777</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00778 &#32;&#32;&#32;&#32;OS&#32;&lt;&lt;&#32;BundleEndString&#32;&lt;&lt;&#32;TargetTriple&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00779 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00780 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a2820cc3bdbf5f3070206e2a6dfd40b5c"/>    <section>
    <title>WriteBundleStart()</title>
<indexterm><primary>WriteBundleStart</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>WriteBundleStart</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::WriteBundleStart (raw_fd_ostream &amp; OS, StringRef TargetTriple)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Write the marker that initiates a bundle for the triple <emphasis>TargetTriple</emphasis> to <emphasis>OS</emphasis>. </para>
<para>
Implements <link linkend="_class_file_handler_1a023196b877e9ab83859f7194e9b38d9e">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00772">772</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00773 &#32;&#32;&#32;&#32;OS&#32;&lt;&lt;&#32;BundleStartString&#32;&lt;&lt;&#32;TargetTriple&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00774 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00775 &#32;&#32;}
</programlisting>    </section><anchor xml:id="_class_text_file_handler_1a08d81ba747fa631f4487236685048f82"/>    <section>
    <title>WriteHeader()</title>
<indexterm><primary>WriteHeader</primary><secondary>TextFileHandler</secondary></indexterm>
<indexterm><primary>TextFileHandler</primary><secondary>WriteHeader</secondary></indexterm>
<para><computeroutput>Error TextFileHandler::WriteHeader (raw_fd_ostream &amp; OS, ArrayRef&lt; std::unique_ptr&lt; MemoryBuffer &gt;&gt; Inputs)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>Write the header of the bundled file to <emphasis>OS</emphasis> based on the information gathered from <emphasis>Inputs</emphasis>. </para>
<para>
Implements <link linkend="_class_file_handler_1ab587b57538b319ab796b4f9ac060db56">FileHandler</link>.</para>
<para>
Definition at line <link linkend="__clang_offload_bundler_8cpp_source_1l00767">767</link> of file <link linkend="__clang_offload_bundler_8cpp_source">ClangOffloadBundler.cpp</link>.</para>
<programlisting>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00769 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Error::success();
00770 &#32;&#32;}
</programlisting></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/clang-offload-bundler/<link linkend="__clang_offload_bundler_8cpp">ClangOffloadBundler.cpp</link></section>
</section>
