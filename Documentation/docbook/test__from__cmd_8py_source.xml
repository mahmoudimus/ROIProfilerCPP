<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test__from__cmd_8py_source" xml:lang="en-US">
<title>test_from_cmd.py</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/test_from_cmd.py</primary></indexterm>
<programlisting><anchor xml:id="_test__from__cmd_8py_source_1l00001"/><link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cmd">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
00002 <emphasis role="comment">#&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
00003 <emphasis role="comment">#&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
00004 <emphasis role="comment">#&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
00005 
00006 <emphasis role="keyword">import</emphasis>&#32;libear
00007 <emphasis role="keyword">from</emphasis>&#32;.&#32;<emphasis role="keyword">import</emphasis>&#32;make_args,&#32;check_call_and_report,&#32;create_empty_file
00008 <emphasis role="keyword">import</emphasis>&#32;unittest
00009 
00010 <emphasis role="keyword">import</emphasis>&#32;os
00011 <emphasis role="keyword">import</emphasis>&#32;os.path
00012 <emphasis role="keyword">import</emphasis>&#32;glob
00013 
00014 
<anchor xml:id="_test__from__cmd_8py_source_1l00015"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test">00015</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test">OutputDirectoryTest</link>(unittest.TestCase):
00016 
00017 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__from__cmd_8py_source_1l00018"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a7b19d07813a1d95aa07c7d83acad177c">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a7b19d07813a1d95aa07c7d83acad177c">run_analyzer</link>(outdir,&#32;args,&#32;cmd):
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--intercept-first&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;outdir]&#32;+&#32;args,
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd)
00022 
<anchor xml:id="_test__from__cmd_8py_source_1l00023"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a88593769f0901e43e330f7951f0b3cb1">00023</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a88593769f0901e43e330f7951f0b3cb1">test_regular_keeps_report_dir</link>(self):
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>]
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a7b19d07813a1d95aa07c7d83acad177c">run_analyzer</link>run_analyzer(tmpdir,&#32;[],&#32;make)
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isdir(outdir))
00028 
<anchor xml:id="_test__from__cmd_8py_source_1l00029"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1aa2417ba1aace20fa2101fad931067e13">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1aa2417ba1aace20fa2101fad931067e13">test_clear_deletes_report_dir</link>(self):
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>]
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a7b19d07813a1d95aa07c7d83acad177c">run_analyzer</link>run_analyzer(tmpdir,&#32;[],&#32;make)
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(os.path.isdir(outdir))
00034 
<anchor xml:id="_test__from__cmd_8py_source_1l00035"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1ab0ec16c66d4a85132c907f20a1e2364a">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1ab0ec16c66d4a85132c907f20a1e2364a">test_clear_keeps_report_dir_when_asked</link>(self):
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>]
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_output_directory_test_1a7b19d07813a1d95aa07c7d83acad177c">run_analyzer</link>run_analyzer(tmpdir,&#32;[<emphasis role="stringliteral">&apos;--keep-empty&apos;</emphasis>],&#32;make)
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isdir(outdir))
00040 
00041 
<anchor xml:id="_test__from__cmd_8py_source_1l00042"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test">00042</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test">RunAnalyzerTest</link>(unittest.TestCase):
00043 
00044 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__from__cmd_8py_source_1l00045"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">00045</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>(directory):
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(glob.glob(os.path.join(directory,&#32;<emphasis role="stringliteral">&apos;report-*.plist&apos;</emphasis>)))
00047 
<anchor xml:id="_test__from__cmd_8py_source_1l00048"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a8a026672a5e1a3aaa8527917e8875a8b">00048</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a8a026672a5e1a3aaa8527917e8875a8b">test_interposition_works</link>(self):
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>]
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>],
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make)
00054 
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isdir(outdir))
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;5)
00057 
<anchor xml:id="_test__from__cmd_8py_source_1l00058"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a32af4113170c49fdc063caf7e1b04564">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a32af4113170c49fdc063caf7e1b04564">test_intercept_wrapper_works</link>(self):
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>]
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--intercept-first&apos;</emphasis>,
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>],
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make)
00065 
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isdir(outdir))
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;5)
00068 
<anchor xml:id="_test__from__cmd_8py_source_1l00069"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1ab4c2e28d293c42f4ac0449025679deb0">00069</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1ab4c2e28d293c42f4ac0449025679deb0">test_intercept_library_works</link>(self):
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>]
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--intercept-first&apos;</emphasis>],
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make)
00075 
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isdir(outdir))
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;5)
00078 
00079 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__from__cmd_8py_source_1l00080"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a3525749dd4b8bedf2e68ef06af0bdf56">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a3525749dd4b8bedf2e68ef06af0bdf56">compile_empty_source_file</link>(target_dir,&#32;is_cxx):
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;compiler&#32;=&#32;<emphasis role="stringliteral">&apos;$CXX&apos;</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_cxx&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="stringliteral">&apos;$CC&apos;</emphasis>
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;src_file_name&#32;=&#32;<emphasis role="stringliteral">&apos;test.cxx&apos;</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;is_cxx&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;src_file&#32;=&#32;os.path.join(target_dir,&#32;src_file_name)
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;obj_file&#32;=&#32;os.path.join(target_dir,&#32;<emphasis role="stringliteral">&apos;test.o&apos;</emphasis>)
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a329bfe4766e9dade55f5b4e0ece589e1">create_empty_file</link>(src_file)
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;command&#32;=&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>.join([compiler,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;src_file,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;obj_file])
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;[<emphasis role="stringliteral">&apos;sh&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;command]
00088 
<anchor xml:id="_test__from__cmd_8py_source_1l00089"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a584a2f583d3e7d2ed82b424d49782051">00089</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a584a2f583d3e7d2ed82b424d49782051">test_interposition_cc_works</link>(self):
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>],
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a3525749dd4b8bedf2e68ef06af0bdf56">compile_empty_source_file</link>compile_empty_source_file(tmpdir,&#32;<emphasis role="keyword">False</emphasis>))
00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;1)
00095 
<anchor xml:id="_test__from__cmd_8py_source_1l00096"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a432b09ae7380e6297a3dd674e0054517">00096</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a432b09ae7380e6297a3dd674e0054517">test_interposition_cxx_works</link>(self):
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>],
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a3525749dd4b8bedf2e68ef06af0bdf56">compile_empty_source_file</link>compile_empty_source_file(tmpdir,&#32;<emphasis role="keyword">True</emphasis>))
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;1)
00102 
<anchor xml:id="_test__from__cmd_8py_source_1l00103"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1aa104bfcd69726f59ae988af14bb7a75c">00103</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1aa104bfcd69726f59ae988af14bb7a75c">test_intercept_cc_works</link>(self):
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>,
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;--intercept-first&apos;</emphasis>],
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a3525749dd4b8bedf2e68ef06af0bdf56">compile_empty_source_file</link>compile_empty_source_file(tmpdir,&#32;<emphasis role="keyword">False</emphasis>))
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;1)
00110 
<anchor xml:id="_test__from__cmd_8py_source_1l00111"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a9c5ed558b60debcb930ea7985c920f27">00111</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a9c5ed558b60debcb930ea7985c920f27">test_intercept_cxx_works</link>(self):
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a8d11835cf833f6de4ac834c961dcb01e">check_call_and_report</link>(
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;scan-build-py&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;tmpdir,&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>,
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;--intercept-first&apos;</emphasis>],
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a3525749dd4b8bedf2e68ef06af0bdf56">compile_empty_source_file</link>compile_empty_source_file(tmpdir,&#32;<emphasis role="keyword">True</emphasis>))
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cmd_1_1_run_analyzer_test_1a207efb0c667ae6478369457cdbcbc5f7">get_plist_count</link>get_plist_count(outdir),&#32;1)
</programlisting></section>
