<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structclang_1_1refactor_1_1_test_selection_ranges_in_file" xml:lang="en-US">
<title>clang::refactor::TestSelectionRangesInFile Struct Reference</title>
<indexterm><primary>clang::refactor::TestSelectionRangesInFile</primary></indexterm>
<para>

<para>A set of test selection ranges specified in one file. </para>
 
</para>
<para>
<computeroutput>#include &lt;TestSupport.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1_1_range_group">RangeGroup</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1a9b78c23b403e8df71caecc1a7ddd974e">foreachRange</link> (const SourceManager &amp;SM, llvm::function_ref&lt; void(SourceRange)&gt; Callback) const</para>
</listitem>
            <listitem><para>std::unique_ptr&lt; <link linkend="_classclang_1_1refactor_1_1_clang_refactor_tool_consumer_interface">ClangRefactorToolConsumerInterface</link> &gt; <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1aeb68b4e768a17c72b2b6a70fce24283a">createConsumer</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1ae1451cf66bca3fc3c4b1900b34b3a814">dump</link> (llvm::raw_ostream &amp;OS) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::string <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1aed71fb7bda4e5d154426e6695986bf8a">Filename</link></para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1_1_range_group">RangeGroup</link> &gt; <link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1a7ef1a07e6dc8e96c2410290bd009a515">GroupedRanges</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A set of test selection ranges specified in one file. </para>
<para>
Definition at line <link linkend="__test_support_8h_source_1l00053">53</link> of file <link linkend="__test_support_8h_source">TestSupport.h</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1aeb68b4e768a17c72b2b6a70fce24283a"/>    <section>
    <title>createConsumer()</title>
<indexterm><primary>createConsumer</primary><secondary>clang::refactor::TestSelectionRangesInFile</secondary></indexterm>
<indexterm><primary>clang::refactor::TestSelectionRangesInFile</primary><secondary>createConsumer</secondary></indexterm>
<para><computeroutput>std::unique_ptr&lt; <link linkend="_classclang_1_1refactor_1_1_clang_refactor_tool_consumer_interface">ClangRefactorToolConsumerInterface</link> &gt; clang::refactor::TestSelectionRangesInFile::createConsumer ( ) const</computeroutput></para><para>
Definition at line <link linkend="__test_support_8cpp_source_1l00259">259</link> of file <link linkend="__test_support_8cpp_source">TestSupport.cpp</link>.</para>
<programlisting>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00260 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_unique&lt;TestRefactoringResultConsumer&gt;(*<emphasis role="keyword">this</emphasis>);
00261 }
</programlisting>    </section><anchor xml:id="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1ae1451cf66bca3fc3c4b1900b34b3a814"/>    <section>
    <title>dump()</title>
<indexterm><primary>dump</primary><secondary>clang::refactor::TestSelectionRangesInFile</secondary></indexterm>
<indexterm><primary>clang::refactor::TestSelectionRangesInFile</primary><secondary>dump</secondary></indexterm>
<para><computeroutput>void clang::refactor::TestSelectionRangesInFile::dump (llvm::raw_ostream &amp; OS) const</computeroutput></para><para>
Definition at line <link linkend="__test_support_8cpp_source_1l00033">33</link> of file <link linkend="__test_support_8cpp_source">TestSupport.cpp</link>.</para>
<programlisting>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00034 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;&amp;Group&#32;:&#32;<link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1a7ef1a07e6dc8e96c2410290bd009a515">GroupedRanges</link>)&#32;{
00035 &#32;&#32;&#32;&#32;OS&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Test&#32;selection&#32;group&#32;&apos;&quot;</emphasis>&#32;&lt;&lt;&#32;Group.Name&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&apos;:\n&quot;</emphasis>;
00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;&amp;Range&#32;:&#32;Group.Ranges)&#32;{
00037 &#32;&#32;&#32;&#32;&#32;&#32;OS&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;Range.Begin&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;&lt;&lt;&#32;Range.End&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00038 &#32;&#32;&#32;&#32;}
00039 &#32;&#32;}
00040 }
</programlisting>    </section><anchor xml:id="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1a9b78c23b403e8df71caecc1a7ddd974e"/>    <section>
    <title>foreachRange()</title>
<indexterm><primary>foreachRange</primary><secondary>clang::refactor::TestSelectionRangesInFile</secondary></indexterm>
<indexterm><primary>clang::refactor::TestSelectionRangesInFile</primary><secondary>foreachRange</secondary></indexterm>
<para><computeroutput>bool clang::refactor::TestSelectionRangesInFile::foreachRange (const SourceManager &amp; SM, llvm::function_ref&lt; void(SourceRange)&gt; Callback) const</computeroutput></para><para>
Definition at line <link linkend="__test_support_8cpp_source_1l00042">42</link> of file <link linkend="__test_support_8cpp_source">TestSupport.cpp</link>.</para>
<programlisting>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00045 &#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;FE&#32;=&#32;SM.getFileManager().getFile(<link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1aed71fb7bda4e5d154426e6695986bf8a">Filename</link>);
00046 &#32;&#32;FileID&#32;FID&#32;=&#32;FE&#32;?&#32;SM.translateFile(*FE)&#32;:&#32;FileID();
00047 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!FE&#32;||&#32;FID.isInvalid())&#32;{
00048 &#32;&#32;&#32;&#32;llvm::errs()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;error:&#32;-selection=test:&quot;</emphasis>&#32;&lt;&lt;&#32;<link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1aed71fb7bda4e5d154426e6695986bf8a">Filename</link>
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;given&#32;file&#32;is&#32;not&#32;in&#32;the&#32;target&#32;TU&quot;</emphasis>;
00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00051 &#32;&#32;}
00052 &#32;&#32;SourceLocation&#32;FileLoc&#32;=&#32;SM.getLocForStartOfFile(FID);
00053 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;&amp;Group&#32;:&#32;<link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1a7ef1a07e6dc8e96c2410290bd009a515">GroupedRanges</link>)&#32;{
00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">const</emphasis>&#32;TestSelectionRange&#32;&amp;Range&#32;:&#32;Group.Ranges)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Translate&#32;the&#32;offset&#32;pair&#32;to&#32;a&#32;true&#32;source&#32;range.</emphasis>
00056 &#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;Start&#32;=
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SM.getMacroArgExpandedLocation(FileLoc.getLocWithOffset(Range.Begin));
00058 &#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;End&#32;=
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SM.getMacroArgExpandedLocation(FileLoc.getLocWithOffset(Range.End));
00060 &#32;&#32;&#32;&#32;&#32;&#32;assert(Start.isValid()&#32;&amp;&amp;&#32;End.isValid()&#32;&amp;&amp;&#32;<emphasis role="stringliteral">&quot;unexpected&#32;invalid&#32;range&quot;</emphasis>);
00061 &#32;&#32;&#32;&#32;&#32;&#32;Callback(SourceRange(Start,&#32;End));
00062 &#32;&#32;&#32;&#32;}
00063 &#32;&#32;}
00064 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00065 }
</programlisting><para>
References <link linkend="__test_support_8h_source_1l00049">clang::refactor::TestSelectionRange::Begin</link>, and <link linkend="__test_support_8h_source_1l00049">clang::refactor::TestSelectionRange::End</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1aed71fb7bda4e5d154426e6695986bf8a"/>    <section>
    <title>Filename</title>
<indexterm><primary>Filename</primary><secondary>clang::refactor::TestSelectionRangesInFile</secondary></indexterm>
<indexterm><primary>clang::refactor::TestSelectionRangesInFile</primary><secondary>Filename</secondary></indexterm>
<para><computeroutput>std::string clang::refactor::TestSelectionRangesInFile::Filename</computeroutput></para><para>
Definition at line <link linkend="__test_support_8h_source_1l00054">54</link> of file <link linkend="__test_support_8h_source">TestSupport.h</link>.</para>
    </section><anchor xml:id="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1a7ef1a07e6dc8e96c2410290bd009a515"/>    <section>
    <title>GroupedRanges</title>
<indexterm><primary>GroupedRanges</primary><secondary>clang::refactor::TestSelectionRangesInFile</secondary></indexterm>
<indexterm><primary>clang::refactor::TestSelectionRangesInFile</primary><secondary>GroupedRanges</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_structclang_1_1refactor_1_1_test_selection_ranges_in_file_1_1_range_group">RangeGroup</link>&gt; clang::refactor::TestSelectionRangesInFile::GroupedRanges</computeroutput></para><para>
Definition at line <link linkend="__test_support_8h_source_1l00059">59</link> of file <link linkend="__test_support_8h_source">TestSupport.h</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following files:</para>
/Users/maximilian/clang-llvm/clang/tools/clang-refactor/<link linkend="__test_support_8h">TestSupport.h</link>/Users/maximilian/clang-llvm/clang/tools/clang-refactor/<link linkend="__test_support_8cpp">TestSupport.cpp</link></section>
</section>
