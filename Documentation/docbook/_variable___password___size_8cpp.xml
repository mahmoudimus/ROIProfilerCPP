<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__variable___password___size_8cpp" xml:lang="en-US">
<title>Tests/VariablePassword Test/Variable_Password_Size.cpp File Reference</title>
<indexterm><primary>Tests/VariablePassword Test/Variable_Password_Size.cpp</primary></indexterm>
<programlisting>#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
#include &lt;random&gt;
#include &quot;../lib/DataStorage.cpp&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_data_storage">DataStorage</link> <link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link> (&quot;Runtime,Scope,CustomCompoundStmt i000002,IfStmt 2218252,CustomCompoundStmt i000005&quot;)</para>
</listitem>
            <listitem><para>int <link linkend="__variable___password___size_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1"/>    <section>
    <title>dataStorage()</title>
<indexterm><primary>dataStorage</primary><secondary>Variable_Password_Size.cpp</secondary></indexterm>
<indexterm><primary>Variable_Password_Size.cpp</primary><secondary>dataStorage</secondary></indexterm>
<para><computeroutput><link linkend="_class_data_storage">DataStorage</link> dataStorage (&quot; Runtime, Scope , CustomCompoundStmt i000002, IfStmt 2218252, CustomCompoundStmt i000005&quot; )</computeroutput></para><para>
Referenced by <link linkend="__variable___password___size_8cpp_source_1l00009">main()</link>.</para>
    </section><anchor xml:id="__variable___password___size_8cpp_1a840291bc02cba5474a4cb46a9b9566fe"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>Variable_Password_Size.cpp</secondary></indexterm>
<indexterm><primary>Variable_Password_Size.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>
Definition at line <link linkend="__variable___password___size_8cpp_source_1l00009">9</link> of file <link linkend="__variable___password___size_8cpp_source">Variable_Password_Size.cpp</link>.</para>
<programlisting>00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00010 &#32;&#32;&#32;&#32;std::random_device&#32;rd;
00011 &#32;&#32;&#32;&#32;std::mt19937&#32;gen(rd());
00012 &#32;&#32;&#32;&#32;std::uniform_int_distribution&lt;std::int64_t&gt;&#32;dis(1,&#32;20000000000);
00013 &#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(0);
00014 &#32;&#32;&#32;&#32;std::vector&#32;&lt;std::string&gt;&#32;passwordStorage;
00015 &#32;&#32;&#32;&#32;std::string&#32;password;
00016 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;current;
00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;passwordCount&#32;=&#32;0;&#32;passwordCount&#32;&lt;&#32;dis(gen);&#32;passwordCount++)&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;sectionCount&#32;=&#32;0;&#32;sectionCount&#32;&lt;&#32;3;&#32;sectionCount++)&#32;{
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(1);
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;sectionLength&#32;=&#32;0;&#32;sectionLength&#32;&lt;&#32;6;&#32;sectionLength++)&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(2);
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;lowerCase&#32;=&#32;rand()&#32;%&#32;26&#32;+&#32;<emphasis role="charliteral">&apos;a&apos;</emphasis>;
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;upperCase&#32;=&#32;rand()&#32;%&#32;26&#32;+&#32;<emphasis role="charliteral">&apos;A&apos;</emphasis>;
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;number&#32;=&#32;rand()&#32;%&#32;10&#32;+&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>;
00025 
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;randomChoice&#32;=&#32;(rand()&#32;%&#32;100&#32;+&#32;1);
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(2);
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(3);
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(randomChoice&#32;&lt;=&#32;40)&#32;{
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;lowerCase;
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(randomChoice&#32;&lt;=&#32;80)&#32;{
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;upperCase;
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;current&#32;=&#32;number;
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(3);
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(4);
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;password&#32;+=&#32;current;
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(4);
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(1);
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;password&#32;+=&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>;
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;password.pop_back();
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passwordStorage.push_back(password);
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;password.clear();
00047 &#32;&#32;&#32;&#32;}
00048 
00049 &#32;&#32;&#32;&#32;std::sort(passwordStorage.begin(),&#32;passwordStorage.end());
00050 &#32;&#32;&#32;&#32;passwordStorage.erase(std::unique(passwordStorage.begin(),
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passwordStorage.end()),
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passwordStorage.end());
00053 
00054 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::string&#32;currentPassword:&#32;passwordStorage)&#32;{
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;currentPassword&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currentPassword.clear();
00057 &#32;&#32;&#32;&#32;}
00058 
00059 &#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(0);
00060 &#32;&#32;&#32;&#32;<link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage</link>.<link linkend="_class_data_storage_1a94ef68ba0c97efa1c78b6f6909eb133c">print</link>();
00061 &#32;&#32;&#32;&#32;passwordStorage.clear();
00062 &#32;&#32;&#32;&#32;passwordStorage.shrink_to_fit();
00063 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00064 }
</programlisting><para>
References <link linkend="__variable___password___size_8cpp_1aee975090eae59452cbab3ff1565997f1">dataStorage()</link>, <link linkend="__data_storage_8cpp_source_1l00046">DataStorage::endEvent()</link>, <link linkend="__data_storage_8cpp_source_1l00052">DataStorage::print()</link>, and <link linkend="__data_storage_8cpp_source_1l00028">DataStorage::startEvent()</link>.</para>
</section>
</section>
</section>
