<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test" xml:lang="en-US">
<title>tests.unit.test_clang.ClangGetArgumentsTest Class Reference</title>
<indexterm><primary>tests.unit.test_clang.ClangGetArgumentsTest</primary></indexterm>
<para>Inheritance diagram for tests.unit.test_clang.ClangGetArgumentsTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test_1a2e97034833b7531db10e657467e6a939">test_get_clang_arguments</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test_1a220d1d821e638014456d0866c1f1f52b">test_get_clang_arguments_fails</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test_1a7fa704f157284b3d3ea65c7080901b9e">test_get_clang_arguments_fails_badly</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__clang_8py_source_1l00022">22</link> of file <link linkend="_test__clang_8py_source">test_clang.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test_1a2e97034833b7531db10e657467e6a939"/>    <section>
    <title>test_get_clang_arguments()</title>
<indexterm><primary>test_get_clang_arguments</primary><secondary>tests.unit.test_clang.ClangGetArgumentsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_clang.ClangGetArgumentsTest</primary><secondary>test_get_clang_arguments</secondary></indexterm>
<para><computeroutput>def tests.unit.test_clang.ClangGetArgumentsTest.test_get_clang_arguments ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__clang_8py_source_1l00023">23</link> of file <link linkend="_test__clang_8py_source">test_clang.py</link>.</para>
<programlisting>00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_get_clang_arguments(self):
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>)
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename,&#32;<emphasis role="stringliteral">&apos;w&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handle:
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handle.write(<emphasis role="stringliteral">&apos;&apos;</emphasis>)
00028 
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;sut.get_arguments(
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;filename,&#32;<emphasis role="stringliteral">&apos;-DNDEBUG&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-Dvar=&quot;this&#32;is&#32;it&quot;&apos;</emphasis>],
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmpdir)
00032 
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(<emphasis role="stringliteral">&apos;NDEBUG&apos;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;result)
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(<emphasis role="stringliteral">&apos;var=&quot;this&#32;is&#32;it&quot;&apos;</emphasis>&#32;<emphasis role="keywordflow">in</emphasis>&#32;result)
00035 
</programlisting><para>
References <link linkend="_startfile_8py_source_1l00206">startfile.open()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test_1a220d1d821e638014456d0866c1f1f52b"/>    <section>
    <title>test_get_clang_arguments_fails()</title>
<indexterm><primary>test_get_clang_arguments_fails</primary><secondary>tests.unit.test_clang.ClangGetArgumentsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_clang.ClangGetArgumentsTest</primary><secondary>test_get_clang_arguments_fails</secondary></indexterm>
<para><computeroutput>def tests.unit.test_clang.ClangGetArgumentsTest.test_get_clang_arguments_fails ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__clang_8py_source_1l00036">36</link> of file <link linkend="_test__clang_8py_source">test_clang.py</link>.</para>
<programlisting>00036 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_get_clang_arguments_fails(self):
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.assertRaises(Exception):
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sut.get_arguments([<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-x&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;notexist.c&apos;</emphasis>],&#32;<emphasis role="stringliteral">&apos;.&apos;</emphasis>)
00039 
</programlisting>    </section><anchor xml:id="_classtests_1_1unit_1_1test__clang_1_1_clang_get_arguments_test_1a7fa704f157284b3d3ea65c7080901b9e"/>    <section>
    <title>test_get_clang_arguments_fails_badly()</title>
<indexterm><primary>test_get_clang_arguments_fails_badly</primary><secondary>tests.unit.test_clang.ClangGetArgumentsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_clang.ClangGetArgumentsTest</primary><secondary>test_get_clang_arguments_fails_badly</secondary></indexterm>
<para><computeroutput>def tests.unit.test_clang.ClangGetArgumentsTest.test_get_clang_arguments_fails_badly ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__clang_8py_source_1l00040">40</link> of file <link linkend="_test__clang_8py_source">test_clang.py</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_get_clang_arguments_fails_badly(self):
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;self.assertRaises(OSError):
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sut.get_arguments([<emphasis role="stringliteral">&apos;notexist&apos;</emphasis>],&#32;<emphasis role="stringliteral">&apos;.&apos;</emphasis>)
00043 
00044 
</programlisting></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/unit/<link linkend="_test__clang_8py">test_clang.py</link></section>
</section>
