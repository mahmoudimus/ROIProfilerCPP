<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_loop__proto__to__cxx_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/proto-to-cxx/loop_proto_to_cxx.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/proto-to-cxx/loop_proto_to_cxx.cpp</primary></indexterm>
<programlisting>#include &quot;cxx_loop_proto.pb.h&quot;
#include &quot;proto_to_cxx.h&quot;
#include &lt;google/protobuf/text_format.h&gt;
#include &lt;ostream&gt;
#include &lt;sstream&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classclang__fuzzer_1_1_inner_loop">clang_fuzzer::InnerLoop</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespaceclang__fuzzer">clang_fuzzer</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1a999bc51b48e947b0f7feb714749b0a21">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const BinaryOp &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1aed1d352356cde87e890c29c8c4d67395">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const StatementSeq &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1ac8954993cdf896f3a8247559fcd1c198">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const Const &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1a495bf005e5556e5d7428afadce257135">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const VarRef &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1a2375d76e387c15285dda8d15dad36f0e">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const Rvalue &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1adefdaecdbb1de92f0eeba7640b89685b">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const AssignmentStatement &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1ac90ec7b7ecf1e1ead9595d1a983f022d">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const Statement &amp;x)</para>
</listitem>
            <listitem><para>void <link linkend="_namespaceclang__fuzzer_1a1de27ebdd8a199c6bdbb5a195631f553">clang_fuzzer::NestedLoopToString</link> (std::ostream &amp;os, const LoopFunction &amp;x)</para>
</listitem>
            <listitem><para>void <link linkend="_namespaceclang__fuzzer_1acecea2c5371f615b84065480211f1374">clang_fuzzer::SingleLoopToString</link> (std::ostream &amp;os, const LoopFunction &amp;x)</para>
</listitem>
            <listitem><para>std::ostream &amp; <link linkend="_namespaceclang__fuzzer_1a52282fc06ac9b7761f21d2588974776a">clang_fuzzer::operator&lt;&lt;</link> (std::ostream &amp;os, const LoopFunction &amp;x)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1a944a037574154e7dedf0c719e2a4baf7">clang_fuzzer::LoopFunctionToString</link> (const LoopFunction &amp;input)</para>
</listitem>
            <listitem><para>std::string <link linkend="_namespaceclang__fuzzer_1acab6e28bea376a65f6d4ab66def83cac">clang_fuzzer::LoopProtoToCxx</link> (const uint8_t *data, size_t size)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
