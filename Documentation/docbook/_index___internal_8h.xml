<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__index___internal_8h" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/libclang/Index_Internal.h File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/libclang/Index_Internal.h</primary></indexterm>
<programlisting>#include &quot;clang-c/Index.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct___c_x_cursor_and_range_visitor_block">_CXCursorAndRangeVisitorBlock</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__index___internal_8h_1af989845e24678c452b9222afdac95e7f">__has_feature</link>(x)   0</para>
</listitem>
            <listitem><para>#define <link linkend="__index___internal_8h_1ac0a2b80018865726a593e344012872b5">INVOKE_BLOCK2</link>(block,  arg1,  arg2)   block-&gt;invoke(block, arg1, arg2)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct___c_x_cursor_and_range_visitor_block">_CXCursorAndRangeVisitorBlock</link> * <link linkend="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b">CXCursorAndRangeVisitorBlock</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2">RangeComparisonResult</link> { <link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a87e2eee30c9b5a3c2108f2128413157a">RangeOverlap</link>
, <link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a1626bf1782f58fe2a2bf082c4c30e850">RangeBefore</link>
, <link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a7540aa4ebed8662d6f41ec33073611a0">RangeAfter</link>
 }</para>

<para>The result of comparing two source ranges. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__index___internal_8h_1af989845e24678c452b9222afdac95e7f"/>    <section>
    <title>__has_feature</title>
<indexterm><primary>__has_feature</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>__has_feature</secondary></indexterm>
<para><computeroutput>#define __has_feature( x)   0</computeroutput></para><para>
Definition at line <link linkend="__index___internal_8h_source_1l00019">19</link> of file <link linkend="__index___internal_8h_source">Index_Internal.h</link>.</para>
    </section><anchor xml:id="__index___internal_8h_1ac0a2b80018865726a593e344012872b5"/>    <section>
    <title>INVOKE_BLOCK2</title>
<indexterm><primary>INVOKE_BLOCK2</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>INVOKE_BLOCK2</secondary></indexterm>
<para><computeroutput>#define INVOKE_BLOCK2( block,  arg1,  arg2)   block-&gt;invoke(block, arg1, arg2)</computeroutput></para><para>
Definition at line <link linkend="__index___internal_8h_source_1l00030">30</link> of file <link linkend="__index___internal_8h_source">Index_Internal.h</link>.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b"/>    <section>
    <title>CXCursorAndRangeVisitorBlock</title>
<indexterm><primary>CXCursorAndRangeVisitorBlock</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>CXCursorAndRangeVisitorBlock</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct___c_x_cursor_and_range_visitor_block">_CXCursorAndRangeVisitorBlock</link> * <link linkend="__index___internal_8h_1a7ecf674b2986737e29df0f5e88dbf83b">CXCursorAndRangeVisitorBlock</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2"/>    <section>
    <title>RangeComparisonResult</title>
<indexterm><primary>RangeComparisonResult</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>RangeComparisonResult</secondary></indexterm>
<para><computeroutput>enum <link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2">RangeComparisonResult</link></computeroutput></para><para>

<para>The result of comparing two source ranges. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>RangeOverlap</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>RangeOverlap</secondary></indexterm>
<anchor xml:id="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a87e2eee30c9b5a3c2108f2128413157a"/>RangeOverlap</entry><entry>
<para>Either the ranges overlap or one of the ranges is invalid. </para>
</entry></row><row><entry><indexterm><primary>RangeBefore</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>RangeBefore</secondary></indexterm>
<anchor xml:id="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a1626bf1782f58fe2a2bf082c4c30e850"/>RangeBefore</entry><entry>
<para>The first range ends before the second range starts. </para>
</entry></row><row><entry><indexterm><primary>RangeAfter</primary><secondary>Index_Internal.h</secondary></indexterm>
<indexterm><primary>Index_Internal.h</primary><secondary>RangeAfter</secondary></indexterm>
<anchor xml:id="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a7540aa4ebed8662d6f41ec33073611a0"/>RangeAfter</entry><entry>
<para>The first range starts after the second range ends. </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__index___internal_8h_source_1l00043">43</link> of file <link linkend="__index___internal_8h_source">Index_Internal.h</link>.</para>
<programlisting>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00045 &#32;&#32;<link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a87e2eee30c9b5a3c2108f2128413157a">RangeOverlap</link>,
00046 
00048 &#32;&#32;<link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a1626bf1782f58fe2a2bf082c4c30e850">RangeBefore</link>,
00049 
00051 &#32;&#32;<link linkend="__index___internal_8h_1afca6208bdc188ac29b169260314b7af2a7540aa4ebed8662d6f41ec33073611a0">RangeAfter</link>
00052 };
</programlisting></section>
</section>
</section>
