<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classclang_1_1cxindex_1_1_scratch_alloc" xml:lang="en-US">
<title>clang::cxindex::ScratchAlloc Class Reference</title>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary></indexterm>
<para>
<computeroutput>#include &lt;CXIndexDataConsumer.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1a0dab0d715a86655624ef685144ec7fd1">ScratchAlloc</link> (<link linkend="_classclang_1_1cxindex_1_1_c_x_index_data_consumer">CXIndexDataConsumer</link> &amp;indexCtx)</para>
</listitem>
            <listitem><para><link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1a27b07066fd4f2584aee1ef54897805fd">ScratchAlloc</link> (const <link linkend="_classclang_1_1cxindex_1_1_scratch_alloc">ScratchAlloc</link> &amp;SA)</para>
</listitem>
            <listitem><para><link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1ab690f7f15d9c9593a00f35ad4fa11744">~ScratchAlloc</link> ()</para>
</listitem>
            <listitem><para>const char * <link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1a7b5b9de515cd117bc6a0d5a6a667b568">toCStr</link> (StringRef Str)</para>
</listitem>
            <listitem><para>const char * <link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1ada48af8bcc8f64c0645b5e86fed0af62">copyCStr</link> (StringRef Str)</para>
</listitem>
            <listitem><para>template&lt;typename T &gt; </para><para>T * <link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1a71642187ca6f26d231a5426b5a4aa254">allocate</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__c_x_index_data_consumer_8h_source_1l00032">32</link> of file <link linkend="__c_x_index_data_consumer_8h_source">CXIndexDataConsumer.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classclang_1_1cxindex_1_1_scratch_alloc_1a0dab0d715a86655624ef685144ec7fd1"/>    <section>
    <title>ScratchAlloc()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ScratchAlloc</primary><secondary>clang::cxindex::ScratchAlloc</secondary></indexterm>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary><secondary>ScratchAlloc</secondary></indexterm>
<para><computeroutput>clang::cxindex::ScratchAlloc::ScratchAlloc (<link linkend="_classclang_1_1cxindex_1_1_c_x_index_data_consumer">CXIndexDataConsumer</link> &amp; indexCtx)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_x_index_data_consumer_8h_source_1l00481">481</link> of file <link linkend="__c_x_index_data_consumer_8h_source">CXIndexDataConsumer.h</link>.</para>
<programlisting>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;IdxCtx(idxCtx)&#32;{
00482 &#32;&#32;++IdxCtx.StrAdapterCount;
00483 }
</programlisting>    </section><anchor xml:id="_classclang_1_1cxindex_1_1_scratch_alloc_1a27b07066fd4f2584aee1ef54897805fd"/>    <section>
    <title>ScratchAlloc()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ScratchAlloc</primary><secondary>clang::cxindex::ScratchAlloc</secondary></indexterm>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary><secondary>ScratchAlloc</secondary></indexterm>
<para><computeroutput>clang::cxindex::ScratchAlloc::ScratchAlloc (const <link linkend="_classclang_1_1cxindex_1_1_scratch_alloc">ScratchAlloc</link> &amp; SA)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_x_index_data_consumer_8h_source_1l00484">484</link> of file <link linkend="__c_x_index_data_consumer_8h_source">CXIndexDataConsumer.h</link>.</para>
<programlisting>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;IdxCtx(SA.IdxCtx)&#32;{
00485 &#32;&#32;++IdxCtx.StrAdapterCount;
00486 }
</programlisting>    </section><anchor xml:id="_classclang_1_1cxindex_1_1_scratch_alloc_1ab690f7f15d9c9593a00f35ad4fa11744"/>    <section>
    <title>~ScratchAlloc()</title>
<indexterm><primary>~ScratchAlloc</primary><secondary>clang::cxindex::ScratchAlloc</secondary></indexterm>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary><secondary>~ScratchAlloc</secondary></indexterm>
<para><computeroutput>clang::cxindex::ScratchAlloc::~ScratchAlloc ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_x_index_data_consumer_8h_source_1l00488">488</link> of file <link linkend="__c_x_index_data_consumer_8h_source">CXIndexDataConsumer.h</link>.</para>
<programlisting>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00489 &#32;&#32;--IdxCtx.StrAdapterCount;
00490 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(IdxCtx.StrAdapterCount&#32;==&#32;0)
00491 &#32;&#32;&#32;&#32;IdxCtx.StrScratch.Reset();
00492 }
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classclang_1_1cxindex_1_1_scratch_alloc_1a71642187ca6f26d231a5426b5a4aa254"/>    <section>
    <title>allocate()</title>
<indexterm><primary>allocate</primary><secondary>clang::cxindex::ScratchAlloc</secondary></indexterm>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary><secondary>allocate</secondary></indexterm>
<computeroutput>template&lt;typename T &gt; </computeroutput><para><computeroutput>T * clang::cxindex::ScratchAlloc::allocate<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_x_index_data_consumer_8h_source_1l00495">495</link> of file <link linkend="__c_x_index_data_consumer_8h_source">CXIndexDataConsumer.h</link>.</para>
<programlisting>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00496 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;IdxCtx.StrScratch.Allocate&lt;T&gt;();
00497 }
</programlisting><para>
Referenced by <link linkend="__c_x_index_data_consumer_8cpp_source_1l00332">clang::cxindex::AttrListInfo::create()</link>.</para>
    </section><anchor xml:id="_classclang_1_1cxindex_1_1_scratch_alloc_1ada48af8bcc8f64c0645b5e86fed0af62"/>    <section>
    <title>copyCStr()</title>
<indexterm><primary>copyCStr</primary><secondary>clang::cxindex::ScratchAlloc</secondary></indexterm>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary><secondary>copyCStr</secondary></indexterm>
<para><computeroutput>const char * ScratchAlloc::copyCStr (StringRef Str)</computeroutput></para><para>
Definition at line <link linkend="__c_x_index_data_consumer_8cpp_source_1l00404">404</link> of file <link linkend="__c_x_index_data_consumer_8cpp_source">CXIndexDataConsumer.cpp</link>.</para>
<programlisting>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00405 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*buf&#32;=&#32;IdxCtx.StrScratch.Allocate&lt;<emphasis role="keywordtype">char</emphasis>&gt;(Str.size()&#32;+&#32;1);
00406 &#32;&#32;std::uninitialized_copy(Str.begin(),&#32;Str.end(),&#32;buf);
00407 &#32;&#32;buf[Str.size()]&#32;=&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>;
00408 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;buf;
00409 }
</programlisting><para>
Referenced by <link linkend="__c_x_index_data_consumer_8cpp_source_1l00396">toCStr()</link>.</para>
    </section><anchor xml:id="_classclang_1_1cxindex_1_1_scratch_alloc_1a7b5b9de515cd117bc6a0d5a6a667b568"/>    <section>
    <title>toCStr()</title>
<indexterm><primary>toCStr</primary><secondary>clang::cxindex::ScratchAlloc</secondary></indexterm>
<indexterm><primary>clang::cxindex::ScratchAlloc</primary><secondary>toCStr</secondary></indexterm>
<para><computeroutput>const char * ScratchAlloc::toCStr (StringRef Str)</computeroutput></para><para>
Definition at line <link linkend="__c_x_index_data_consumer_8cpp_source_1l00396">396</link> of file <link linkend="__c_x_index_data_consumer_8cpp_source">CXIndexDataConsumer.cpp</link>.</para>
<programlisting>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00397 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Str.empty())
00398 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
00399 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Str.data()[Str.size()]&#32;==&#32;<emphasis role="charliteral">&apos;\0&apos;</emphasis>)
00400 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Str.data();
00401 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classclang_1_1cxindex_1_1_scratch_alloc_1ada48af8bcc8f64c0645b5e86fed0af62">copyCStr</link>(Str);
00402 }
</programlisting><para>
References <link linkend="__c_x_index_data_consumer_8cpp_source_1l00404">copyCStr()</link>.</para>
<para>
Referenced by <link linkend="__c_x_index_data_consumer_8cpp_source_1l00460">clang::cxindex::CXIndexDataConsumer::ppIncludedFile()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/maximilian/clang-llvm/clang/tools/libclang/<link linkend="__c_x_index_data_consumer_8h">CXIndexDataConsumer.h</link>/Users/maximilian/clang-llvm/clang/tools/libclang/<link linkend="__c_x_index_data_consumer_8cpp">CXIndexDataConsumer.cpp</link></section>
</section>
