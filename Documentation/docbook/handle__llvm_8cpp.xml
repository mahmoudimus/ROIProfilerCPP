<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_handle__llvm_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/handle-llvm/handle_llvm.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/handle-llvm/handle_llvm.cpp</primary></indexterm>
<programlisting>#include &quot;handle_llvm.h&quot;
#include &quot;input_arrays.h&quot;
#include &quot;llvm/ADT/Triple.h&quot;
#include &quot;llvm/Analysis/TargetLibraryInfo.h&quot;
#include &quot;llvm/Analysis/TargetTransformInfo.h&quot;
#include &quot;llvm/CodeGen/CommandFlags.h&quot;
#include &quot;llvm/CodeGen/MachineModuleInfo.h&quot;
#include &quot;llvm/CodeGen/TargetPassConfig.h&quot;
#include &quot;llvm/ExecutionEngine/JITEventListener.h&quot;
#include &quot;llvm/ExecutionEngine/JITSymbol.h&quot;
#include &quot;llvm/ExecutionEngine/MCJIT.h&quot;
#include &quot;llvm/ExecutionEngine/ObjectCache.h&quot;
#include &quot;llvm/ExecutionEngine/RTDyldMemoryManager.h&quot;
#include &quot;llvm/ExecutionEngine/SectionMemoryManager.h&quot;
#include &quot;llvm/IR/IRPrintingPasses.h&quot;
#include &quot;llvm/IR/LLVMContext.h&quot;
#include &quot;llvm/IR/LegacyPassManager.h&quot;
#include &quot;llvm/IR/LegacyPassNameParser.h&quot;
#include &quot;llvm/IR/Module.h&quot;
#include &quot;llvm/IR/Verifier.h&quot;
#include &quot;llvm/IRReader/IRReader.h&quot;
#include &quot;llvm/Pass.h&quot;
#include &quot;llvm/PassRegistry.h&quot;
#include &quot;llvm/Support/MemoryBuffer.h&quot;
#include &quot;llvm/Support/SourceMgr.h&quot;
#include &quot;llvm/Support/TargetRegistry.h&quot;
#include &quot;llvm/Support/TargetSelect.h&quot;
#include &quot;llvm/Target/TargetMachine.h&quot;
#include &quot;llvm/Transforms/IPO.h&quot;
#include &quot;llvm/Transforms/IPO/PassManagerBuilder.h&quot;
#include &quot;llvm/Transforms/Vectorize.h&quot;
</programlisting><simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef void(* <link linkend="_handle__llvm_8cpp_1ad679e4a55c200ca194d860e135dfcf7b">LLVMFunc</link>) (int *, int *, int *, int)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_handle__llvm_8cpp_1ad679e4a55c200ca194d860e135dfcf7b"/>    <section>
    <title>LLVMFunc</title>
<indexterm><primary>LLVMFunc</primary><secondary>handle_llvm.cpp</secondary></indexterm>
<indexterm><primary>handle_llvm.cpp</primary><secondary>LLVMFunc</secondary></indexterm>
<para><computeroutput>typedef void(* LLVMFunc) (int *, int *, int *, int)</computeroutput></para><para>
Definition at line <link linkend="_handle__llvm_8cpp_source_1l00054">54</link> of file <link linkend="_handle__llvm_8cpp_source">handle_llvm.cpp</link>.</para>
</section>
</section>
</section>
