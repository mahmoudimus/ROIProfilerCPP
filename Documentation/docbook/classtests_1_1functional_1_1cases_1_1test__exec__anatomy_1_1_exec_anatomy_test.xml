<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test" xml:lang="en-US">
<title>tests.functional.cases.test_exec_anatomy.ExecAnatomyTest Class Reference</title>
<indexterm><primary>tests.functional.cases.test_exec_anatomy.ExecAnatomyTest</primary></indexterm>
<para>Inheritance diagram for tests.functional.cases.test_exec_anatomy.ExecAnatomyTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test_1a006e7edef6ddf1942368fe3e1c4fd40f">assertEqualJson</link> (self, expected, result)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test_1a18117e11fdb8e33755abd78a2eab5903">test_all_exec_calls</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__exec__anatomy_8py_source_1l00031">31</link> of file <link linkend="_test__exec__anatomy_8py_source">test_exec_anatomy.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test_1a006e7edef6ddf1942368fe3e1c4fd40f"/>    <section>
    <title>assertEqualJson()</title>
<indexterm><primary>assertEqualJson</primary><secondary>tests.functional.cases.test_exec_anatomy.ExecAnatomyTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_exec_anatomy.ExecAnatomyTest</primary><secondary>assertEqualJson</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_exec_anatomy.ExecAnatomyTest.assertEqualJson ( self,  expected,  result)</computeroutput></para><para>
Definition at line <link linkend="_test__exec__anatomy_8py_source_1l00032">32</link> of file <link linkend="_test__exec__anatomy_8py_source">test_exec_anatomy.py</link>.</para>
<programlisting>00032 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>assertEqualJson(self,&#32;expected,&#32;result):
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>read_json(filename):
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename)&#32;<emphasis role="keyword">as</emphasis>&#32;handler:
00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;json.load(handler)
00036 
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lhs&#32;=&#32;read_json(expected)
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rhs&#32;=&#32;read_json(result)
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;item&#32;<emphasis role="keywordflow">in</emphasis>&#32;lhs:
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(rhs.count(item))
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;item&#32;<emphasis role="keywordflow">in</emphasis>&#32;rhs:
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(lhs.count(item))
00043 
</programlisting><para>
References <link linkend="_startfile_8py_source_1l00206">startfile.open()</link>.</para>
<para>
Referenced by <link linkend="_test__exec__anatomy_8py_source_1l00044">tests.functional.cases.test_exec_anatomy.ExecAnatomyTest.test_all_exec_calls()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test_1a18117e11fdb8e33755abd78a2eab5903"/>    <section>
    <title>test_all_exec_calls()</title>
<indexterm><primary>test_all_exec_calls</primary><secondary>tests.functional.cases.test_exec_anatomy.ExecAnatomyTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_exec_anatomy.ExecAnatomyTest</primary><secondary>test_all_exec_calls</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_exec_anatomy.ExecAnatomyTest.test_all_exec_calls ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__exec__anatomy_8py_source_1l00044">44</link> of file <link linkend="_test__exec__anatomy_8py_source">test_exec_anatomy.py</link>.</para>
<programlisting>00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_all_exec_calls(self):
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this_dir,&#32;_&#32;=&#32;os.path.split(__file__)
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;source_dir&#32;=&#32;os.path.abspath(os.path.join(this_dir,&#32;<emphasis role="stringliteral">&apos;..&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;exec&apos;</emphasis>))
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmp_dir:
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected,&#32;result&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__exec__anatomy_1a21ef20300ca6267ff4767ef7b159e752">run</link>(source_dir,&#32;tmp_dir)
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqualJson(expected,&#32;result)
</programlisting><para>
References <link linkend="_test__exec__anatomy_8py_source_1l00032">tests.functional.cases.test_exec_anatomy.ExecAnatomyTest.assertEqualJson()</link>, <link linkend="_test__exec__anatomy_8py_source_1l00014">tests.functional.cases.test_exec_anatomy.run()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/<link linkend="_test__exec__anatomy_8py">test_exec_anatomy.py</link></section>
</section>
