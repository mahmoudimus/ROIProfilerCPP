<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test" xml:lang="en-US">
<title>tests.functional.cases.test_from_cdb.OutputFormatTest Class Reference</title>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary></indexterm>
<para>Inheritance diagram for tests.functional.cases.test_from_cdb.OutputFormatTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ab4db56bb2f0ce4c19549d1904cdf6d13">test_default_only_creates_html_report</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a4764004ae95428a61795301679d8810b">test_plist_and_html_creates_html_and_plist_reports</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a162ac412f222980629346f4a99ee485f">test_plist_only_creates_plist_report</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ab458be5ff8a552adf3d671b0523124e7">test_sarif_only_creates_sarif_result</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ae4fa8995d03eccbabf862afb3e1f13c9">test_sarif_and_html_creates_sarif_and_html_reports</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ab1bace51fd954eddcf95bdedec005030">get_html_count</link> (directory)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a967ddb44f1f2d0be185aa78195afdafe">get_plist_count</link> (directory)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a54a6369652b402c388f916f7b2eb95eb">get_sarif_count</link> (directory)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00096">96</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ab1bace51fd954eddcf95bdedec005030"/>    <section>
    <title>get_html_count()</title>
<indexterm><primary>get_html_count</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>get_html_count</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.get_html_count ( directory)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00098">98</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>get_html_count(directory):
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(glob.glob(os.path.join(directory,&#32;<emphasis role="stringliteral">&apos;report-*.html&apos;</emphasis>)))
00100 
</programlisting><para>
Referenced by <link linkend="_test__from__cdb_8py_source_1l00109">tests.functional.cases.test_from_cdb.OutputFormatTest.test_default_only_creates_html_report()</link>, <link linkend="_test__from__cdb_8py_source_1l00119">tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_and_html_creates_html_and_plist_reports()</link>, <link linkend="_test__from__cdb_8py_source_1l00129">tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_only_creates_plist_report()</link>, <link linkend="_test__from__cdb_8py_source_1l00151">tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_and_html_creates_sarif_and_html_reports()</link>, and <link linkend="_test__from__cdb_8py_source_1l00139">tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_only_creates_sarif_result()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a967ddb44f1f2d0be185aa78195afdafe"/>    <section>
    <title>get_plist_count()</title>
<indexterm><primary>get_plist_count</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>get_plist_count</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.get_plist_count ( directory)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00102">102</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00102 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>get_plist_count(directory):
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(glob.glob(os.path.join(directory,&#32;<emphasis role="stringliteral">&apos;report-*.plist&apos;</emphasis>)))
00104 
</programlisting><para>
Referenced by <link linkend="_test__from__cdb_8py_source_1l00109">tests.functional.cases.test_from_cdb.OutputFormatTest.test_default_only_creates_html_report()</link>, <link linkend="_test__from__cmd_8py_source_1l00103">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_intercept_cc_works()</link>, <link linkend="_test__from__cmd_8py_source_1l00111">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_intercept_cxx_works()</link>, <link linkend="_test__from__cmd_8py_source_1l00069">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_intercept_library_works()</link>, <link linkend="_test__from__cmd_8py_source_1l00058">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_intercept_wrapper_works()</link>, <link linkend="_test__from__cmd_8py_source_1l00089">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_interposition_cc_works()</link>, <link linkend="_test__from__cmd_8py_source_1l00096">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_interposition_cxx_works()</link>, <link linkend="_test__from__cmd_8py_source_1l00048">tests.functional.cases.test_from_cmd.RunAnalyzerTest.test_interposition_works()</link>, <link linkend="_test__from__cdb_8py_source_1l00119">tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_and_html_creates_html_and_plist_reports()</link>, <link linkend="_test__from__cdb_8py_source_1l00129">tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_only_creates_plist_report()</link>, <link linkend="_test__from__cdb_8py_source_1l00151">tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_and_html_creates_sarif_and_html_reports()</link>, and <link linkend="_test__from__cdb_8py_source_1l00139">tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_only_creates_sarif_result()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a54a6369652b402c388f916f7b2eb95eb"/>    <section>
    <title>get_sarif_count()</title>
<indexterm><primary>get_sarif_count</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>get_sarif_count</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.get_sarif_count ( directory)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00106">106</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00106 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>get_sarif_count(directory):
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(glob.glob(os.path.join(directory,&#32;<emphasis role="stringliteral">&apos;result-*.sarif&apos;</emphasis>)))
00108 
</programlisting><para>
Referenced by <link linkend="_test__from__cdb_8py_source_1l00109">tests.functional.cases.test_from_cdb.OutputFormatTest.test_default_only_creates_html_report()</link>, <link linkend="_test__from__cdb_8py_source_1l00119">tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_and_html_creates_html_and_plist_reports()</link>, <link linkend="_test__from__cdb_8py_source_1l00129">tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_only_creates_plist_report()</link>, <link linkend="_test__from__cdb_8py_source_1l00151">tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_and_html_creates_sarif_and_html_reports()</link>, and <link linkend="_test__from__cdb_8py_source_1l00139">tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_only_creates_sarif_result()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ab4db56bb2f0ce4c19549d1904cdf6d13"/>    <section>
    <title>test_default_only_creates_html_report()</title>
<indexterm><primary>test_default_only_creates_html_report</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>test_default_only_creates_html_report</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.test_default_only_creates_html_report ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00109">109</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00109 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_default_only_creates_html_report(self):
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;reportdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[])
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;index.html&apos;</emphasis>)))
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_html_count(reportdir),&#32;2)
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_plist_count(reportdir),&#32;0)
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_sarif_count(reportdir),&#32;0)
00118 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00098">tests.functional.cases.test_from_cdb.OutputFormatTest.get_html_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00102">tests.functional.cases.test_from_cdb.OutputFormatTest.get_plist_count()</link>, <link linkend="_test__from__cmd_8py_source_1l00045">tests.functional.cases.test_from_cmd.RunAnalyzerTest.get_plist_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00106">tests.functional.cases.test_from_cdb.OutputFormatTest.get_sarif_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a4764004ae95428a61795301679d8810b"/>    <section>
    <title>test_plist_and_html_creates_html_and_plist_reports()</title>
<indexterm><primary>test_plist_and_html_creates_html_and_plist_reports</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>test_plist_and_html_creates_html_and_plist_reports</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_and_html_creates_html_and_plist_reports ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00119">119</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00119 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_plist_and_html_creates_html_and_plist_reports(self):
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;reportdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--plist-html&apos;</emphasis>])
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;index.html&apos;</emphasis>)))
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_html_count(reportdir),&#32;2)
00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_plist_count(reportdir),&#32;5)
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_sarif_count(reportdir),&#32;0)
00128 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00098">tests.functional.cases.test_from_cdb.OutputFormatTest.get_html_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00102">tests.functional.cases.test_from_cdb.OutputFormatTest.get_plist_count()</link>, <link linkend="_test__from__cmd_8py_source_1l00045">tests.functional.cases.test_from_cmd.RunAnalyzerTest.get_plist_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00106">tests.functional.cases.test_from_cdb.OutputFormatTest.get_sarif_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1a162ac412f222980629346f4a99ee485f"/>    <section>
    <title>test_plist_only_creates_plist_report()</title>
<indexterm><primary>test_plist_only_creates_plist_report</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>test_plist_only_creates_plist_report</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.test_plist_only_creates_plist_report ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00129">129</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00129 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_plist_only_creates_plist_report(self):
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;reportdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>])
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;index.html&apos;</emphasis>)))
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_html_count(reportdir),&#32;0)
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_plist_count(reportdir),&#32;5)
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_sarif_count(reportdir),&#32;0)
00138 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00098">tests.functional.cases.test_from_cdb.OutputFormatTest.get_html_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00102">tests.functional.cases.test_from_cdb.OutputFormatTest.get_plist_count()</link>, <link linkend="_test__from__cmd_8py_source_1l00045">tests.functional.cases.test_from_cmd.RunAnalyzerTest.get_plist_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00106">tests.functional.cases.test_from_cdb.OutputFormatTest.get_sarif_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ae4fa8995d03eccbabf862afb3e1f13c9"/>    <section>
    <title>test_sarif_and_html_creates_sarif_and_html_reports()</title>
<indexterm><primary>test_sarif_and_html_creates_sarif_and_html_reports</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>test_sarif_and_html_creates_sarif_and_html_reports</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_and_html_creates_sarif_and_html_reports ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00151">151</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00151 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_sarif_and_html_creates_sarif_and_html_reports(self):
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;reportdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--sarif-html&apos;</emphasis>])
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;index.html&apos;</emphasis>)))
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;results-merged.sarif&apos;</emphasis>)))
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_html_count(reportdir),&#32;2)
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_plist_count(reportdir),&#32;0)
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_sarif_count(reportdir),&#32;5)
00162 
00163 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00098">tests.functional.cases.test_from_cdb.OutputFormatTest.get_html_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00102">tests.functional.cases.test_from_cdb.OutputFormatTest.get_plist_count()</link>, <link linkend="_test__from__cmd_8py_source_1l00045">tests.functional.cases.test_from_cmd.RunAnalyzerTest.get_plist_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00106">tests.functional.cases.test_from_cdb.OutputFormatTest.get_sarif_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_output_format_test_1ab458be5ff8a552adf3d671b0523124e7"/>    <section>
    <title>test_sarif_only_creates_sarif_result()</title>
<indexterm><primary>test_sarif_only_creates_sarif_result</primary><secondary>tests.functional.cases.test_from_cdb.OutputFormatTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.OutputFormatTest</primary><secondary>test_sarif_only_creates_sarif_result</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.OutputFormatTest.test_sarif_only_creates_sarif_result ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00139">139</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00139 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_sarif_only_creates_sarif_result(self):
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;reportdir&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--sarif&apos;</emphasis>])
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;index.html&apos;</emphasis>)))
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os.path.exists(os.path.join(reportdir,&#32;<emphasis role="stringliteral">&apos;results-merged.sarif&apos;</emphasis>)))
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_html_count(reportdir),&#32;0)
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_plist_count(reportdir),&#32;0)
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(self.get_sarif_count(reportdir),&#32;5)
00150 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00098">tests.functional.cases.test_from_cdb.OutputFormatTest.get_html_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00102">tests.functional.cases.test_from_cdb.OutputFormatTest.get_plist_count()</link>, <link linkend="_test__from__cmd_8py_source_1l00045">tests.functional.cases.test_from_cmd.RunAnalyzerTest.get_plist_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00106">tests.functional.cases.test_from_cdb.OutputFormatTest.get_sarif_count()</link>, <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/<link linkend="_test__from__cdb_8py">test_from_cdb.py</link></section>
</section>
