<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespacetests_1_1functional_1_1cases_1_1test__exec__anatomy" xml:lang="en-US">
<title>tests.functional.cases.test_exec_anatomy Namespace Reference</title>
<indexterm><primary>tests.functional.cases.test_exec_anatomy</primary></indexterm>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_classtests_1_1functional_1_1cases_1_1test__exec__anatomy_1_1_exec_anatomy_test">ExecAnatomyTest</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_namespacetests_1_1functional_1_1cases_1_1test__exec__anatomy_1a21ef20300ca6267ff4767ef7b159e752">run</link> (source_dir, target_dir)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespacetests_1_1functional_1_1cases_1_1test__exec__anatomy_1a21ef20300ca6267ff4767ef7b159e752"/>    <section>
    <title>run()</title>
<indexterm><primary>run</primary><secondary>tests.functional.cases.test_exec_anatomy</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_exec_anatomy</primary><secondary>run</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_exec_anatomy.run ( source_dir,  target_dir)</computeroutput></para><para>
Definition at line <link linkend="_test__exec__anatomy_8py_source_1l00014">14</link> of file <link linkend="_test__exec__anatomy_8py_source">test_exec_anatomy.py</link>.</para>
<programlisting>00014 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacetests_1_1functional_1_1cases_1_1test__exec__anatomy_1a21ef20300ca6267ff4767ef7b159e752">run</link>(source_dir,&#32;target_dir):
00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacelibear_1a011d707003ffa7443b73f8761c2a121b">execute</link>(cmd):
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;subprocess.check_call(cmd,
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cwd=target_dir,
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stdout=subprocess.PIPE,
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stderr=subprocess.STDOUT)
00020 
00021 &#32;&#32;&#32;&#32;<link linkend="_namespacelibear_1a011d707003ffa7443b73f8761c2a121b">execute</link>([<emphasis role="stringliteral">&apos;cmake&apos;</emphasis>,&#32;source_dir])
00022 &#32;&#32;&#32;&#32;<link linkend="_namespacelibear_1a011d707003ffa7443b73f8761c2a121b">execute</link>([<emphasis role="stringliteral">&apos;make&apos;</emphasis>])
00023 
00024 &#32;&#32;&#32;&#32;result_file&#32;=&#32;os.path.join(target_dir,&#32;<emphasis role="stringliteral">&apos;result.json&apos;</emphasis>)
00025 &#32;&#32;&#32;&#32;expected_file&#32;=&#32;os.path.join(target_dir,&#32;<emphasis role="stringliteral">&apos;expected.json&apos;</emphasis>)
00026 &#32;&#32;&#32;&#32;<link linkend="_namespacelibear_1a011d707003ffa7443b73f8761c2a121b">execute</link>([<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result_file,&#32;<emphasis role="stringliteral">&apos;./exec&apos;</emphasis>,
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;expected_file])
00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(expected_file,&#32;result_file)
00029 
00030 
</programlisting><para>
References <link linkend="_lib_2libear_2____init_____8py_source_1l00061">libear.execute()</link>.</para>
<para>
Referenced by <link linkend="_test__exec__anatomy_8py_source_1l00044">tests.functional.cases.test_exec_anatomy.ExecAnatomyTest.test_all_exec_calls()</link>.</para>
</section>
</section>
</section>
