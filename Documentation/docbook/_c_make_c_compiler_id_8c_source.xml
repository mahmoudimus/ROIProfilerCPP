<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_make_c_compiler_id_8c_source" xml:lang="en-US">
<title>CMakeCCompilerId.c</title>
<indexterm><primary>cmake-build-debug/CMakeFiles/3.20.2/CompilerIdC/CMakeCCompilerId.c</primary></indexterm>
<programlisting>00001 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
00002 <emphasis role="preprocessor">#&#32;error&#32;&quot;A&#32;C++&#32;compiler&#32;has&#32;been&#32;selected&#32;for&#32;C.&quot;</emphasis>
00003 <emphasis role="preprocessor">#endif</emphasis>
00004 
00005 <emphasis role="preprocessor">#if&#32;defined(__18CXX)</emphasis>
00006 <emphasis role="preprocessor">#&#32;define&#32;ID_VOID_MAIN</emphasis>
00007 <emphasis role="preprocessor">#endif</emphasis>
00008 <emphasis role="preprocessor">#if&#32;defined(__CLASSIC_C__)</emphasis>
00009 <emphasis role="comment">/*&#32;cv-qualifiers&#32;did&#32;not&#32;exist&#32;in&#32;K&amp;R&#32;C&#32;*/</emphasis>
00010 <emphasis role="preprocessor">#&#32;define&#32;const</emphasis>
00011 <emphasis role="preprocessor">#&#32;define&#32;volatile</emphasis>
00012 <emphasis role="preprocessor">#endif</emphasis>
00013 
00014 
00015 <emphasis role="comment">/*&#32;Version&#32;number&#32;components:&#32;V=Version,&#32;R=Revision,&#32;P=Patch</emphasis>
00016 <emphasis role="comment">&#32;&#32;&#32;Version&#32;date&#32;components:&#32;&#32;&#32;YYYY=Year,&#32;MM=Month,&#32;&#32;&#32;DD=Day&#32;&#32;*/</emphasis>
00017 
00018 <emphasis role="preprocessor">#if&#32;defined(__INTEL_COMPILER)&#32;||&#32;defined(__ICC)</emphasis>
00019 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Intel&quot;</emphasis>
00020 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_VER)</emphasis>
00021 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_ID&#32;&quot;MSVC&quot;</emphasis>
00022 <emphasis role="preprocessor">#&#32;endif</emphasis>
00023 <emphasis role="preprocessor">#&#32;if&#32;defined(__GNUC__)</emphasis>
00024 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_ID&#32;&quot;GNU&quot;</emphasis>
00025 <emphasis role="preprocessor">#&#32;endif</emphasis>
00026 &#32;&#32;<emphasis role="comment">/*&#32;__INTEL_COMPILER&#32;=&#32;VRP&#32;prior&#32;to&#32;2021,&#32;and&#32;then&#32;VVVV&#32;for&#32;2021&#32;and&#32;later,</emphasis>
00027 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;except&#32;that&#32;a&#32;few&#32;beta&#32;releases&#32;use&#32;the&#32;old&#32;format&#32;with&#32;V=2021.&#32;&#32;*/</emphasis>
00028 <emphasis role="preprocessor">#&#32;if&#32;__INTEL_COMPILER&#32;&lt;&#32;2021&#32;||&#32;__INTEL_COMPILER&#32;==&#32;202110&#32;||&#32;__INTEL_COMPILER&#32;==&#32;202111</emphasis>
00029 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__INTEL_COMPILER/100)</emphasis>
00030 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__INTEL_COMPILER/10&#32;%&#32;10)</emphasis>
00031 <emphasis role="preprocessor">#&#32;&#32;if&#32;defined(__INTEL_COMPILER_UPDATE)</emphasis>
00032 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__INTEL_COMPILER_UPDATE)</emphasis>
00033 <emphasis role="preprocessor">#&#32;&#32;else</emphasis>
00034 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__INTEL_COMPILER&#32;&#32;&#32;%&#32;10)</emphasis>
00035 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
00036 <emphasis role="preprocessor">#&#32;else</emphasis>
00037 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__INTEL_COMPILER)</emphasis>
00038 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__INTEL_COMPILER_UPDATE)</emphasis>
00039 &#32;&#32;&#32;<emphasis role="comment">/*&#32;The&#32;third&#32;version&#32;component&#32;from&#32;--version&#32;is&#32;an&#32;update&#32;index,</emphasis>
00040 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;but&#32;no&#32;macro&#32;is&#32;provided&#32;for&#32;it.&#32;&#32;*/</emphasis>
00041 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(0)</emphasis>
00042 <emphasis role="preprocessor">#&#32;endif</emphasis>
00043 <emphasis role="preprocessor">#&#32;if&#32;defined(__INTEL_COMPILER_BUILD_DATE)</emphasis>
00044 &#32;&#32;&#32;<emphasis role="comment">/*&#32;__INTEL_COMPILER_BUILD_DATE&#32;=&#32;YYYYMMDD&#32;*/</emphasis>
00045 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_TWEAK&#32;DEC(__INTEL_COMPILER_BUILD_DATE)</emphasis>
00046 <emphasis role="preprocessor">#&#32;endif</emphasis>
00047 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_VER)</emphasis>
00048 &#32;&#32;&#32;<emphasis role="comment">/*&#32;_MSC_VER&#32;=&#32;VVRR&#32;*/</emphasis>
00049 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(_MSC_VER&#32;/&#32;100)</emphasis>
00050 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MINOR&#32;DEC(_MSC_VER&#32;%&#32;100)</emphasis>
00051 <emphasis role="preprocessor">#&#32;endif</emphasis>
00052 <emphasis role="preprocessor">#&#32;if&#32;defined(__GNUC__)</emphasis>
00053 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(__GNUC__)</emphasis>
00054 <emphasis role="preprocessor">#&#32;elif&#32;defined(__GNUG__)</emphasis>
00055 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(__GNUG__)</emphasis>
00056 <emphasis role="preprocessor">#&#32;endif</emphasis>
00057 <emphasis role="preprocessor">#&#32;if&#32;defined(__GNUC_MINOR__)</emphasis>
00058 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MINOR&#32;DEC(__GNUC_MINOR__)</emphasis>
00059 <emphasis role="preprocessor">#&#32;endif</emphasis>
00060 <emphasis role="preprocessor">#&#32;if&#32;defined(__GNUC_PATCHLEVEL__)</emphasis>
00061 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_PATCH&#32;DEC(__GNUC_PATCHLEVEL__)</emphasis>
00062 <emphasis role="preprocessor">#&#32;endif</emphasis>
00063 
00064 <emphasis role="preprocessor">#elif&#32;(defined(__clang__)&#32;&amp;&amp;&#32;defined(__INTEL_CLANG_COMPILER))&#32;||&#32;defined(__INTEL_LLVM_COMPILER)</emphasis>
00065 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;IntelLLVM&quot;</emphasis>
00066 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
00067 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_ID&#32;&quot;MSVC&quot;</emphasis>
00068 <emphasis role="preprocessor">#endif</emphasis>
00069 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)</emphasis>
00070 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_ID&#32;&quot;GNU&quot;</emphasis>
00071 <emphasis role="preprocessor">#endif</emphasis>
00072 <emphasis role="comment">/*&#32;__INTEL_LLVM_COMPILER&#32;=&#32;VVVVRP&#32;prior&#32;to&#32;2021.2.0,&#32;VVVVRRPP&#32;for&#32;2021.2.0&#32;and</emphasis>
00073 <emphasis role="comment">&#32;*&#32;later.&#32;&#32;Look&#32;for&#32;6&#32;digit&#32;vs.&#32;8&#32;digit&#32;version&#32;number&#32;to&#32;decide&#32;encoding.</emphasis>
00074 <emphasis role="comment">&#32;*&#32;VVVV&#32;is&#32;no&#32;smaller&#32;than&#32;the&#32;current&#32;year&#32;when&#32;a&#32;versio&#32;is&#32;released.</emphasis>
00075 <emphasis role="comment">&#32;*/</emphasis>
00076 <emphasis role="preprocessor">#if&#32;__INTEL_LLVM_COMPILER&#32;&lt;&#32;1000000L</emphasis>
00077 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__INTEL_LLVM_COMPILER/100)</emphasis>
00078 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__INTEL_LLVM_COMPILER/10&#32;%&#32;10)</emphasis>
00079 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__INTEL_LLVM_COMPILER&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
00080 <emphasis role="preprocessor">#else</emphasis>
00081 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__INTEL_LLVM_COMPILER/10000)</emphasis>
00082 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__INTEL_LLVM_COMPILER/100&#32;%&#32;100)</emphasis>
00083 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__INTEL_LLVM_COMPILER&#32;&#32;&#32;&#32;&#32;%&#32;100)</emphasis>
00084 <emphasis role="preprocessor">#endif</emphasis>
00085 <emphasis role="preprocessor">#if&#32;defined(_MSC_VER)</emphasis>
00086 &#32;&#32;<emphasis role="comment">/*&#32;_MSC_VER&#32;=&#32;VVRR&#32;*/</emphasis>
00087 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(_MSC_VER&#32;/&#32;100)</emphasis>
00088 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_VERSION_MINOR&#32;DEC(_MSC_VER&#32;%&#32;100)</emphasis>
00089 <emphasis role="preprocessor">#endif</emphasis>
00090 <emphasis role="preprocessor">#if&#32;defined(__GNUC__)</emphasis>
00091 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(__GNUC__)</emphasis>
00092 <emphasis role="preprocessor">#elif&#32;defined(__GNUG__)</emphasis>
00093 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(__GNUG__)</emphasis>
00094 <emphasis role="preprocessor">#endif</emphasis>
00095 <emphasis role="preprocessor">#if&#32;defined(__GNUC_MINOR__)</emphasis>
00096 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_VERSION_MINOR&#32;DEC(__GNUC_MINOR__)</emphasis>
00097 <emphasis role="preprocessor">#endif</emphasis>
00098 <emphasis role="preprocessor">#if&#32;defined(__GNUC_PATCHLEVEL__)</emphasis>
00099 <emphasis role="preprocessor">#&#32;define&#32;SIMULATE_VERSION_PATCH&#32;DEC(__GNUC_PATCHLEVEL__)</emphasis>
00100 <emphasis role="preprocessor">#endif</emphasis>
00101 
00102 <emphasis role="preprocessor">#elif&#32;defined(__PATHCC__)</emphasis>
00103 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;PathScale&quot;</emphasis>
00104 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__PATHCC__)</emphasis>
00105 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__PATHCC_MINOR__)</emphasis>
00106 <emphasis role="preprocessor">#&#32;if&#32;defined(__PATHCC_PATCHLEVEL__)</emphasis>
00107 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__PATHCC_PATCHLEVEL__)</emphasis>
00108 <emphasis role="preprocessor">#&#32;endif</emphasis>
00109 
00110 <emphasis role="preprocessor">#elif&#32;defined(__BORLANDC__)&#32;&amp;&amp;&#32;defined(__CODEGEARC_VERSION__)</emphasis>
00111 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Embarcadero&quot;</emphasis>
00112 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__CODEGEARC_VERSION__&gt;&gt;24&#32;&amp;&#32;0x00FF)</emphasis>
00113 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__CODEGEARC_VERSION__&gt;&gt;16&#32;&amp;&#32;0x00FF)</emphasis>
00114 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__CODEGEARC_VERSION__&#32;&#32;&#32;&#32;&#32;&amp;&#32;0xFFFF)</emphasis>
00115 
00116 <emphasis role="preprocessor">#elif&#32;defined(__BORLANDC__)</emphasis>
00117 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Borland&quot;</emphasis>
00118 &#32;&#32;<emphasis role="comment">/*&#32;__BORLANDC__&#32;=&#32;0xVRR&#32;*/</emphasis>
00119 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__BORLANDC__&gt;&gt;8)</emphasis>
00120 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__BORLANDC__&#32;&amp;&#32;0xFF)</emphasis>
00121 
00122 <emphasis role="preprocessor">#elif&#32;defined(__WATCOMC__)&#32;&amp;&amp;&#32;__WATCOMC__&#32;&lt;&#32;1200</emphasis>
00123 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Watcom&quot;</emphasis>
00124 &#32;&#32;&#32;<emphasis role="comment">/*&#32;__WATCOMC__&#32;=&#32;VVRR&#32;*/</emphasis>
00125 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__WATCOMC__&#32;/&#32;100)</emphasis>
00126 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC((__WATCOMC__&#32;/&#32;10)&#32;%&#32;10)</emphasis>
00127 <emphasis role="preprocessor">#&#32;if&#32;(__WATCOMC__&#32;%&#32;10)&#32;&gt;&#32;0</emphasis>
00128 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__WATCOMC__&#32;%&#32;10)</emphasis>
00129 <emphasis role="preprocessor">#&#32;endif</emphasis>
00130 
00131 <emphasis role="preprocessor">#elif&#32;defined(__WATCOMC__)</emphasis>
00132 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;OpenWatcom&quot;</emphasis>
00133 &#32;&#32;&#32;<emphasis role="comment">/*&#32;__WATCOMC__&#32;=&#32;VVRP&#32;+&#32;1100&#32;*/</emphasis>
00134 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC((__WATCOMC__&#32;-&#32;1100)&#32;/&#32;100)</emphasis>
00135 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC((__WATCOMC__&#32;/&#32;10)&#32;%&#32;10)</emphasis>
00136 <emphasis role="preprocessor">#&#32;if&#32;(__WATCOMC__&#32;%&#32;10)&#32;&gt;&#32;0</emphasis>
00137 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__WATCOMC__&#32;%&#32;10)</emphasis>
00138 <emphasis role="preprocessor">#&#32;endif</emphasis>
00139 
00140 <emphasis role="preprocessor">#elif&#32;defined(__SUNPRO_C)</emphasis>
00141 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;SunPro&quot;</emphasis>
00142 <emphasis role="preprocessor">#&#32;if&#32;__SUNPRO_C&#32;&gt;=&#32;0x5100</emphasis>
00143 &#32;&#32;&#32;<emphasis role="comment">/*&#32;__SUNPRO_C&#32;=&#32;0xVRRP&#32;*/</emphasis>
00144 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__SUNPRO_C&gt;&gt;12)</emphasis>
00145 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__SUNPRO_C&gt;&gt;4&#32;&amp;&#32;0xFF)</emphasis>
00146 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;HEX(__SUNPRO_C&#32;&#32;&#32;&#32;&amp;&#32;0xF)</emphasis>
00147 <emphasis role="preprocessor">#&#32;else</emphasis>
00148 &#32;&#32;&#32;<emphasis role="comment">/*&#32;__SUNPRO_CC&#32;=&#32;0xVRP&#32;*/</emphasis>
00149 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__SUNPRO_C&gt;&gt;8)</emphasis>
00150 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__SUNPRO_C&gt;&gt;4&#32;&amp;&#32;0xF)</emphasis>
00151 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;HEX(__SUNPRO_C&#32;&#32;&#32;&#32;&amp;&#32;0xF)</emphasis>
00152 <emphasis role="preprocessor">#&#32;endif</emphasis>
00153 
00154 <emphasis role="preprocessor">#elif&#32;defined(__HP_cc)</emphasis>
00155 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;HP&quot;</emphasis>
00156 &#32;&#32;<emphasis role="comment">/*&#32;__HP_cc&#32;=&#32;VVRRPP&#32;*/</emphasis>
00157 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__HP_cc/10000)</emphasis>
00158 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__HP_cc/100&#32;%&#32;100)</emphasis>
00159 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__HP_cc&#32;&#32;&#32;&#32;&#32;%&#32;100)</emphasis>
00160 
00161 <emphasis role="preprocessor">#elif&#32;defined(__DECC)</emphasis>
00162 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Compaq&quot;</emphasis>
00163 &#32;&#32;<emphasis role="comment">/*&#32;__DECC_VER&#32;=&#32;VVRRTPPPP&#32;*/</emphasis>
00164 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__DECC_VER/10000000)</emphasis>
00165 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__DECC_VER/100000&#32;&#32;%&#32;100)</emphasis>
00166 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__DECC_VER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;%&#32;10000)</emphasis>
00167 
00168 <emphasis role="preprocessor">#elif&#32;defined(__IBMC__)&#32;&amp;&amp;&#32;defined(__COMPILER_VER__)</emphasis>
00169 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;zOS&quot;</emphasis>
00170 &#32;&#32;<emphasis role="comment">/*&#32;__IBMC__&#32;=&#32;VRP&#32;*/</emphasis>
00171 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__IBMC__/100)</emphasis>
00172 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__IBMC__/10&#32;%&#32;10)</emphasis>
00173 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__IBMC__&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
00174 
00175 <emphasis role="preprocessor">#elif&#32;defined(__ibmxl__)&#32;&amp;&amp;&#32;defined(__clang__)</emphasis>
00176 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;XLClang&quot;</emphasis>
00177 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__ibmxl_version__)</emphasis>
00178 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__ibmxl_release__)</emphasis>
00179 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__ibmxl_modification__)</emphasis>
00180 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_TWEAK&#32;DEC(__ibmxl_ptf_fix_level__)</emphasis>
00181 
00182 
00183 <emphasis role="preprocessor">#elif&#32;defined(__IBMC__)&#32;&amp;&amp;&#32;!defined(__COMPILER_VER__)&#32;&amp;&amp;&#32;__IBMC__&#32;&gt;=&#32;800</emphasis>
00184 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;XL&quot;</emphasis>
00185 &#32;&#32;<emphasis role="comment">/*&#32;__IBMC__&#32;=&#32;VRP&#32;*/</emphasis>
00186 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__IBMC__/100)</emphasis>
00187 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__IBMC__/10&#32;%&#32;10)</emphasis>
00188 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__IBMC__&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
00189 
00190 <emphasis role="preprocessor">#elif&#32;defined(__IBMC__)&#32;&amp;&amp;&#32;!defined(__COMPILER_VER__)&#32;&amp;&amp;&#32;__IBMC__&#32;&lt;&#32;800</emphasis>
00191 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;VisualAge&quot;</emphasis>
00192 &#32;&#32;<emphasis role="comment">/*&#32;__IBMC__&#32;=&#32;VRP&#32;*/</emphasis>
00193 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__IBMC__/100)</emphasis>
00194 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__IBMC__/10&#32;%&#32;10)</emphasis>
00195 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__IBMC__&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
00196 
00197 <emphasis role="preprocessor">#elif&#32;defined(__NVCOMPILER)</emphasis>
00198 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;NVHPC&quot;</emphasis>
00199 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__NVCOMPILER_MAJOR__)</emphasis>
00200 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__NVCOMPILER_MINOR__)</emphasis>
00201 <emphasis role="preprocessor">#&#32;if&#32;defined(__NVCOMPILER_PATCHLEVEL__)</emphasis>
00202 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__NVCOMPILER_PATCHLEVEL__)</emphasis>
00203 <emphasis role="preprocessor">#&#32;endif</emphasis>
00204 
00205 <emphasis role="preprocessor">#elif&#32;defined(__PGI)</emphasis>
00206 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;PGI&quot;</emphasis>
00207 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__PGIC__)</emphasis>
00208 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__PGIC_MINOR__)</emphasis>
00209 <emphasis role="preprocessor">#&#32;if&#32;defined(__PGIC_PATCHLEVEL__)</emphasis>
00210 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__PGIC_PATCHLEVEL__)</emphasis>
00211 <emphasis role="preprocessor">#&#32;endif</emphasis>
00212 
00213 <emphasis role="preprocessor">#elif&#32;defined(_CRAYC)</emphasis>
00214 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Cray&quot;</emphasis>
00215 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(_RELEASE_MAJOR)</emphasis>
00216 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(_RELEASE_MINOR)</emphasis>
00217 
00218 <emphasis role="preprocessor">#elif&#32;defined(__TI_COMPILER_VERSION__)</emphasis>
00219 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;TI&quot;</emphasis>
00220 &#32;&#32;<emphasis role="comment">/*&#32;__TI_COMPILER_VERSION__&#32;=&#32;VVVRRRPPP&#32;*/</emphasis>
00221 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__TI_COMPILER_VERSION__/1000000)</emphasis>
00222 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__TI_COMPILER_VERSION__/1000&#32;&#32;&#32;%&#32;1000)</emphasis>
00223 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__TI_COMPILER_VERSION__&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;%&#32;1000)</emphasis>
00224 
00225 <emphasis role="preprocessor">#elif&#32;defined(__FUJITSU)&#32;||&#32;defined(__FCC_VERSION)&#32;||&#32;defined(__fcc_version)</emphasis>
00226 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Fujitsu&quot;</emphasis>
00227 
00228 <emphasis role="preprocessor">#elif&#32;defined(__ghs__)</emphasis>
00229 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;GHS&quot;</emphasis>
00230 <emphasis role="comment">/*&#32;__GHS_VERSION_NUMBER&#32;=&#32;VVVVRP&#32;*/</emphasis>
00231 <emphasis role="preprocessor">#&#32;ifdef&#32;__GHS_VERSION_NUMBER</emphasis>
00232 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__GHS_VERSION_NUMBER&#32;/&#32;100)</emphasis>
00233 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__GHS_VERSION_NUMBER&#32;/&#32;10&#32;%&#32;10)</emphasis>
00234 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__GHS_VERSION_NUMBER&#32;&#32;&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
00235 <emphasis role="preprocessor">#&#32;endif</emphasis>
00236 
00237 <emphasis role="preprocessor">#elif&#32;defined(__TINYC__)</emphasis>
00238 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;TinyCC&quot;</emphasis>
00239 
00240 <emphasis role="preprocessor">#elif&#32;defined(__BCC__)</emphasis>
00241 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Bruce&quot;</emphasis>
00242 
00243 <emphasis role="preprocessor">#elif&#32;defined(__SCO_VERSION__)</emphasis>
00244 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;SCO&quot;</emphasis>
00245 
00246 <emphasis role="preprocessor">#elif&#32;defined(__ARMCC_VERSION)&#32;&amp;&amp;&#32;!defined(__clang__)</emphasis>
00247 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;ARMCC&quot;</emphasis>
00248 <emphasis role="preprocessor">#if&#32;__ARMCC_VERSION&#32;&gt;=&#32;1000000</emphasis>
00249 &#32;&#32;<emphasis role="comment">/*&#32;__ARMCC_VERSION&#32;=&#32;VRRPPPP&#32;*/</emphasis>
00250 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__ARMCC_VERSION/1000000)</emphasis>
00251 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__ARMCC_VERSION/10000&#32;%&#32;100)</emphasis>
00252 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__ARMCC_VERSION&#32;&#32;&#32;&#32;&#32;%&#32;10000)</emphasis>
00253 <emphasis role="preprocessor">#else</emphasis>
00254 &#32;&#32;<emphasis role="comment">/*&#32;__ARMCC_VERSION&#32;=&#32;VRPPPP&#32;*/</emphasis>
00255 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__ARMCC_VERSION/100000)</emphasis>
00256 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__ARMCC_VERSION/10000&#32;%&#32;10)</emphasis>
00257 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__ARMCC_VERSION&#32;&#32;&#32;&#32;%&#32;10000)</emphasis>
00258 <emphasis role="preprocessor">#endif</emphasis>
00259 
00260 
00261 <emphasis role="preprocessor">#elif&#32;defined(__clang__)&#32;&amp;&amp;&#32;defined(__apple_build_version__)</emphasis>
00262 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;AppleClang&quot;</emphasis>
00263 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_VER)</emphasis>
00264 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_ID&#32;&quot;MSVC&quot;</emphasis>
00265 <emphasis role="preprocessor">#&#32;endif</emphasis>
00266 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__clang_major__)</emphasis>
00267 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__clang_minor__)</emphasis>
00268 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__clang_patchlevel__)</emphasis>
00269 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_VER)</emphasis>
00270 &#32;&#32;&#32;<emphasis role="comment">/*&#32;_MSC_VER&#32;=&#32;VVRR&#32;*/</emphasis>
00271 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(_MSC_VER&#32;/&#32;100)</emphasis>
00272 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MINOR&#32;DEC(_MSC_VER&#32;%&#32;100)</emphasis>
00273 <emphasis role="preprocessor">#&#32;endif</emphasis>
00274 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_TWEAK&#32;DEC(__apple_build_version__)</emphasis>
00275 
00276 <emphasis role="preprocessor">#elif&#32;defined(__clang__)&#32;&amp;&amp;&#32;defined(__ARMCOMPILER_VERSION)</emphasis>
00277 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;ARMClang&quot;</emphasis>
00278 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__ARMCOMPILER_VERSION/1000000)</emphasis>
00279 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__ARMCOMPILER_VERSION/10000&#32;%&#32;100)</emphasis>
00280 <emphasis role="preprocessor">&#32;&#32;#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__ARMCOMPILER_VERSION&#32;&#32;&#32;&#32;&#32;%&#32;10000)</emphasis>
00281 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_INTERNAL&#32;DEC(__ARMCOMPILER_VERSION)</emphasis>
00282 
00283 <emphasis role="preprocessor">#elif&#32;defined(__clang__)</emphasis>
00284 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;Clang&quot;</emphasis>
00285 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_VER)</emphasis>
00286 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_ID&#32;&quot;MSVC&quot;</emphasis>
00287 <emphasis role="preprocessor">#&#32;endif</emphasis>
00288 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__clang_major__)</emphasis>
00289 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__clang_minor__)</emphasis>
00290 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__clang_patchlevel__)</emphasis>
00291 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_VER)</emphasis>
00292 &#32;&#32;&#32;<emphasis role="comment">/*&#32;_MSC_VER&#32;=&#32;VVRR&#32;*/</emphasis>
00293 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MAJOR&#32;DEC(_MSC_VER&#32;/&#32;100)</emphasis>
00294 <emphasis role="preprocessor">#&#32;&#32;define&#32;SIMULATE_VERSION_MINOR&#32;DEC(_MSC_VER&#32;%&#32;100)</emphasis>
00295 <emphasis role="preprocessor">#&#32;endif</emphasis>
00296 
00297 <emphasis role="preprocessor">#elif&#32;defined(__GNUC__)</emphasis>
00298 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;GNU&quot;</emphasis>
00299 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__GNUC__)</emphasis>
00300 <emphasis role="preprocessor">#&#32;if&#32;defined(__GNUC_MINOR__)</emphasis>
00301 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__GNUC_MINOR__)</emphasis>
00302 <emphasis role="preprocessor">#&#32;endif</emphasis>
00303 <emphasis role="preprocessor">#&#32;if&#32;defined(__GNUC_PATCHLEVEL__)</emphasis>
00304 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__GNUC_PATCHLEVEL__)</emphasis>
00305 <emphasis role="preprocessor">#&#32;endif</emphasis>
00306 
00307 <emphasis role="preprocessor">#elif&#32;defined(_MSC_VER)</emphasis>
00308 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;MSVC&quot;</emphasis>
00309 &#32;&#32;<emphasis role="comment">/*&#32;_MSC_VER&#32;=&#32;VVRR&#32;*/</emphasis>
00310 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(_MSC_VER&#32;/&#32;100)</emphasis>
00311 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(_MSC_VER&#32;%&#32;100)</emphasis>
00312 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_FULL_VER)</emphasis>
00313 <emphasis role="preprocessor">#&#32;&#32;if&#32;_MSC_VER&#32;&gt;=&#32;1400</emphasis>
00314 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;_MSC_FULL_VER&#32;=&#32;VVRRPPPPP&#32;*/</emphasis>
00315 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(_MSC_FULL_VER&#32;%&#32;100000)</emphasis>
00316 <emphasis role="preprocessor">#&#32;&#32;else</emphasis>
00317 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;_MSC_FULL_VER&#32;=&#32;VVRRPPPP&#32;*/</emphasis>
00318 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(_MSC_FULL_VER&#32;%&#32;10000)</emphasis>
00319 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
00320 <emphasis role="preprocessor">#&#32;endif</emphasis>
00321 <emphasis role="preprocessor">#&#32;if&#32;defined(_MSC_BUILD)</emphasis>
00322 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_TWEAK&#32;DEC(_MSC_BUILD)</emphasis>
00323 <emphasis role="preprocessor">#&#32;endif</emphasis>
00324 
00325 <emphasis role="preprocessor">#elif&#32;defined(__VISUALDSPVERSION__)&#32;||&#32;defined(__ADSPBLACKFIN__)&#32;||&#32;defined(__ADSPTS__)&#32;||&#32;defined(__ADSP21000__)</emphasis>
00326 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;ADSP&quot;</emphasis>
00327 <emphasis role="preprocessor">#if&#32;defined(__VISUALDSPVERSION__)</emphasis>
00328 &#32;&#32;<emphasis role="comment">/*&#32;__VISUALDSPVERSION__&#32;=&#32;0xVVRRPP00&#32;*/</emphasis>
00329 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MAJOR&#32;HEX(__VISUALDSPVERSION__&gt;&gt;24)</emphasis>
00330 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_MINOR&#32;HEX(__VISUALDSPVERSION__&gt;&gt;16&#32;&amp;&#32;0xFF)</emphasis>
00331 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_VERSION_PATCH&#32;HEX(__VISUALDSPVERSION__&gt;&gt;8&#32;&#32;&amp;&#32;0xFF)</emphasis>
00332 <emphasis role="preprocessor">#endif</emphasis>
00333 
00334 <emphasis role="preprocessor">#elif&#32;defined(__IAR_SYSTEMS_ICC__)&#32;||&#32;defined(__IAR_SYSTEMS_ICC)</emphasis>
00335 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;IAR&quot;</emphasis>
00336 <emphasis role="preprocessor">#&#32;if&#32;defined(__VER__)&#32;&amp;&amp;&#32;defined(__ICCARM__)</emphasis>
00337 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC((__VER__)&#32;/&#32;1000000)</emphasis>
00338 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(((__VER__)&#32;/&#32;1000)&#32;%&#32;1000)</emphasis>
00339 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC((__VER__)&#32;%&#32;1000)</emphasis>
00340 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_INTERNAL&#32;DEC(__IAR_SYSTEMS_ICC__)</emphasis>
00341 <emphasis role="preprocessor">#&#32;elif&#32;defined(__VER__)&#32;&amp;&amp;&#32;(defined(__ICCAVR__)&#32;||&#32;defined(__ICCRX__)&#32;||&#32;defined(__ICCRH850__)&#32;||&#32;defined(__ICCRL78__)&#32;||&#32;defined(__ICC430__)&#32;||&#32;defined(__ICCRISCV__)&#32;||&#32;defined(__ICCV850__)&#32;||&#32;defined(__ICC8051__)&#32;||&#32;defined(__ICCSTM8__))</emphasis>
00342 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC((__VER__)&#32;/&#32;100)</emphasis>
00343 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC((__VER__)&#32;-&#32;(((__VER__)&#32;/&#32;100)*100))</emphasis>
00344 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__SUBVERSION__)</emphasis>
00345 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_INTERNAL&#32;DEC(__IAR_SYSTEMS_ICC__)</emphasis>
00346 <emphasis role="preprocessor">#&#32;endif</emphasis>
00347 
00348 <emphasis role="preprocessor">#elif&#32;defined(__SDCC_VERSION_MAJOR)&#32;||&#32;defined(SDCC)</emphasis>
00349 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;SDCC&quot;</emphasis>
00350 <emphasis role="preprocessor">#&#32;if&#32;defined(__SDCC_VERSION_MAJOR)</emphasis>
00351 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(__SDCC_VERSION_MAJOR)</emphasis>
00352 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(__SDCC_VERSION_MINOR)</emphasis>
00353 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(__SDCC_VERSION_PATCH)</emphasis>
00354 <emphasis role="preprocessor">#&#32;else</emphasis>
00355 &#32;&#32;<emphasis role="comment">/*&#32;SDCC&#32;=&#32;VRP&#32;*/</emphasis>
00356 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MAJOR&#32;DEC(SDCC/100)</emphasis>
00357 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_MINOR&#32;DEC(SDCC/10&#32;%&#32;10)</emphasis>
00358 <emphasis role="preprocessor">#&#32;&#32;define&#32;COMPILER_VERSION_PATCH&#32;DEC(SDCC&#32;&#32;&#32;&#32;%&#32;10)</emphasis>
00359 <emphasis role="preprocessor">#&#32;endif</emphasis>
00360 
00361 
00362 <emphasis role="comment">/*&#32;These&#32;compilers&#32;are&#32;either&#32;not&#32;known&#32;or&#32;too&#32;old&#32;to&#32;define&#32;an</emphasis>
00363 <emphasis role="comment">&#32;&#32;identification&#32;macro.&#32;&#32;Try&#32;to&#32;identify&#32;the&#32;platform&#32;and&#32;guess&#32;that</emphasis>
00364 <emphasis role="comment">&#32;&#32;it&#32;is&#32;the&#32;native&#32;compiler.&#32;&#32;*/</emphasis>
00365 <emphasis role="preprocessor">#elif&#32;defined(__hpux)&#32;||&#32;defined(__hpua)</emphasis>
00366 <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;HP&quot;</emphasis>
00367 
00368 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;compiler&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00369"/><link linkend="__c_make_c_compiler_id_8c_1a81dee0709ded976b2e0319239f72d174">00369</link> <emphasis role="preprocessor">#&#32;define&#32;COMPILER_ID&#32;&quot;&quot;</emphasis>
00370 <emphasis role="preprocessor">#endif</emphasis>
00371 
00372 <emphasis role="comment">/*&#32;Construct&#32;the&#32;string&#32;literal&#32;in&#32;pieces&#32;to&#32;prevent&#32;the&#32;source&#32;from</emphasis>
00373 <emphasis role="comment">&#32;&#32;&#32;getting&#32;matched.&#32;&#32;Store&#32;it&#32;in&#32;a&#32;pointer&#32;rather&#32;than&#32;an&#32;array</emphasis>
00374 <emphasis role="comment">&#32;&#32;&#32;because&#32;some&#32;compilers&#32;will&#32;just&#32;produce&#32;instructions&#32;to&#32;fill&#32;the</emphasis>
00375 <emphasis role="comment">&#32;&#32;&#32;array&#32;rather&#32;than&#32;assigning&#32;a&#32;pointer&#32;to&#32;a&#32;static&#32;array.&#32;&#32;*/</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00376"/><link linkend="__c_make_c_compiler_id_8c_1a4b0efeb7a5d59313986b3a0390f050f6">00376</link> <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>*&#32;<link linkend="__c_make_c_compiler_id_8c_1a4b0efeb7a5d59313986b3a0390f050f6">info_compiler</link>&#32;=&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;compiler[&quot;</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1a81dee0709ded976b2e0319239f72d174">COMPILER_ID</link>&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
00377 <emphasis role="preprocessor">#ifdef&#32;SIMULATE_ID</emphasis>
00378 <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>*&#32;info_simulate&#32;=&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;simulate[&quot;</emphasis>&#32;SIMULATE_ID&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
00379 <emphasis role="preprocessor">#endif</emphasis>
00380 
00381 <emphasis role="preprocessor">#ifdef&#32;__QNXNTO__</emphasis>
00382 <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>*&#32;qnxnto&#32;=&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;qnxnto[]&quot;</emphasis>;
00383 <emphasis role="preprocessor">#endif</emphasis>
00384 
00385 <emphasis role="preprocessor">#if&#32;defined(__CRAYXT_COMPUTE_LINUX_TARGET)</emphasis>
00386 <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;*info_cray&#32;=&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;compiler_wrapper[CrayPrgEnv]&quot;</emphasis>;
00387 <emphasis role="preprocessor">#endif</emphasis>
00388 
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00389"/><link linkend="__c_make_c_compiler_id_8c_1a2ae9b72bb13abaabfcf2ee0ba7d3fa1d">00389</link> <emphasis role="preprocessor">#define&#32;STRINGIFY_HELPER(X)&#32;#X</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00390"/><link linkend="__c_make_c_compiler_id_8c_1a43e1cad902b6477bec893cb6430bd6c8">00390</link> <emphasis role="preprocessor">#define&#32;STRINGIFY(X)&#32;STRINGIFY_HELPER(X)</emphasis>
00391 
00392 <emphasis role="comment">/*&#32;Identify&#32;known&#32;platforms&#32;by&#32;name.&#32;&#32;*/</emphasis>
00393 <emphasis role="preprocessor">#if&#32;defined(__linux)&#32;||&#32;defined(__linux__)&#32;||&#32;defined(linux)</emphasis>
00394 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Linux&quot;</emphasis>
00395 
00396 <emphasis role="preprocessor">#elif&#32;defined(__CYGWIN__)</emphasis>
00397 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Cygwin&quot;</emphasis>
00398 
00399 <emphasis role="preprocessor">#elif&#32;defined(__MINGW32__)</emphasis>
00400 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;MinGW&quot;</emphasis>
00401 
00402 <emphasis role="preprocessor">#elif&#32;defined(__APPLE__)</emphasis>
00403 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Darwin&quot;</emphasis>
00404 
00405 <emphasis role="preprocessor">#elif&#32;defined(_WIN32)&#32;||&#32;defined(__WIN32__)&#32;||&#32;defined(WIN32)</emphasis>
00406 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Windows&quot;</emphasis>
00407 
00408 <emphasis role="preprocessor">#elif&#32;defined(__FreeBSD__)&#32;||&#32;defined(__FreeBSD)</emphasis>
00409 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;FreeBSD&quot;</emphasis>
00410 
00411 <emphasis role="preprocessor">#elif&#32;defined(__NetBSD__)&#32;||&#32;defined(__NetBSD)</emphasis>
00412 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;NetBSD&quot;</emphasis>
00413 
00414 <emphasis role="preprocessor">#elif&#32;defined(__OpenBSD__)&#32;||&#32;defined(__OPENBSD)</emphasis>
00415 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;OpenBSD&quot;</emphasis>
00416 
00417 <emphasis role="preprocessor">#elif&#32;defined(__sun)&#32;||&#32;defined(sun)</emphasis>
00418 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;SunOS&quot;</emphasis>
00419 
00420 <emphasis role="preprocessor">#elif&#32;defined(_AIX)&#32;||&#32;defined(__AIX)&#32;||&#32;defined(__AIX__)&#32;||&#32;defined(__aix)&#32;||&#32;defined(__aix__)</emphasis>
00421 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;AIX&quot;</emphasis>
00422 
00423 <emphasis role="preprocessor">#elif&#32;defined(__hpux)&#32;||&#32;defined(__hpux__)</emphasis>
00424 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;HP-UX&quot;</emphasis>
00425 
00426 <emphasis role="preprocessor">#elif&#32;defined(__HAIKU__)</emphasis>
00427 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Haiku&quot;</emphasis>
00428 
00429 <emphasis role="preprocessor">#elif&#32;defined(__BeOS)&#32;||&#32;defined(__BEOS__)&#32;||&#32;defined(_BEOS)</emphasis>
00430 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;BeOS&quot;</emphasis>
00431 
00432 <emphasis role="preprocessor">#elif&#32;defined(__QNX__)&#32;||&#32;defined(__QNXNTO__)</emphasis>
00433 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;QNX&quot;</emphasis>
00434 
00435 <emphasis role="preprocessor">#elif&#32;defined(__tru64)&#32;||&#32;defined(_tru64)&#32;||&#32;defined(__TRU64__)</emphasis>
00436 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Tru64&quot;</emphasis>
00437 
00438 <emphasis role="preprocessor">#elif&#32;defined(__riscos)&#32;||&#32;defined(__riscos__)</emphasis>
00439 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;RISCos&quot;</emphasis>
00440 
00441 <emphasis role="preprocessor">#elif&#32;defined(__sinix)&#32;||&#32;defined(__sinix__)&#32;||&#32;defined(__SINIX__)</emphasis>
00442 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;SINIX&quot;</emphasis>
00443 
00444 <emphasis role="preprocessor">#elif&#32;defined(__UNIX_SV__)</emphasis>
00445 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;UNIX_SV&quot;</emphasis>
00446 
00447 <emphasis role="preprocessor">#elif&#32;defined(__bsdos__)</emphasis>
00448 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;BSDOS&quot;</emphasis>
00449 
00450 <emphasis role="preprocessor">#elif&#32;defined(_MPRAS)&#32;||&#32;defined(MPRAS)</emphasis>
00451 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;MP-RAS&quot;</emphasis>
00452 
00453 <emphasis role="preprocessor">#elif&#32;defined(__osf)&#32;||&#32;defined(__osf__)</emphasis>
00454 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;OSF1&quot;</emphasis>
00455 
00456 <emphasis role="preprocessor">#elif&#32;defined(_SCO_SV)&#32;||&#32;defined(SCO_SV)&#32;||&#32;defined(sco_sv)</emphasis>
00457 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;SCO_SV&quot;</emphasis>
00458 
00459 <emphasis role="preprocessor">#elif&#32;defined(__ultrix)&#32;||&#32;defined(__ultrix__)&#32;||&#32;defined(_ULTRIX)</emphasis>
00460 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;ULTRIX&quot;</emphasis>
00461 
00462 <emphasis role="preprocessor">#elif&#32;defined(__XENIX__)&#32;||&#32;defined(_XENIX)&#32;||&#32;defined(XENIX)</emphasis>
00463 <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID&#32;&quot;Xenix&quot;</emphasis>
00464 
00465 <emphasis role="preprocessor">#elif&#32;defined(__WATCOMC__)</emphasis>
00466 <emphasis role="preprocessor">#&#32;if&#32;defined(__LINUX__)</emphasis>
00467 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;Linux&quot;</emphasis>
00468 
00469 <emphasis role="preprocessor">#&#32;elif&#32;defined(__DOS__)</emphasis>
00470 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;DOS&quot;</emphasis>
00471 
00472 <emphasis role="preprocessor">#&#32;elif&#32;defined(__OS2__)</emphasis>
00473 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;OS2&quot;</emphasis>
00474 
00475 <emphasis role="preprocessor">#&#32;elif&#32;defined(__WINDOWS__)</emphasis>
00476 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;Windows3x&quot;</emphasis>
00477 
00478 <emphasis role="preprocessor">#&#32;elif&#32;defined(__VXWORKS__)</emphasis>
00479 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;VxWorks&quot;</emphasis>
00480 
00481 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;platform&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00482 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID</emphasis>
00483 <emphasis role="preprocessor">#&#32;endif</emphasis>
00484 
00485 <emphasis role="preprocessor">#elif&#32;defined(__INTEGRITY)</emphasis>
00486 <emphasis role="preprocessor">#&#32;if&#32;defined(INT_178B)</emphasis>
00487 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;Integrity178&quot;</emphasis>
00488 
00489 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;regular&#32;Integrity&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00490 <emphasis role="preprocessor">#&#32;&#32;define&#32;PLATFORM_ID&#32;&quot;Integrity&quot;</emphasis>
00491 <emphasis role="preprocessor">#&#32;endif</emphasis>
00492 
00493 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;platform&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00494"/><link linkend="__c_make_c_compiler_id_8c_1adbc5372f40838899018fadbc89bd588b">00494</link> <emphasis role="preprocessor">#&#32;define&#32;PLATFORM_ID</emphasis>
00495 
00496 <emphasis role="preprocessor">#endif</emphasis>
00497 
00498 <emphasis role="comment">/*&#32;For&#32;windows&#32;compilers&#32;MSVC&#32;and&#32;Intel&#32;we&#32;can&#32;determine</emphasis>
00499 <emphasis role="comment">&#32;&#32;&#32;the&#32;architecture&#32;of&#32;the&#32;compiler&#32;being&#32;used.&#32;&#32;This&#32;is&#32;because</emphasis>
00500 <emphasis role="comment">&#32;&#32;&#32;the&#32;compilers&#32;do&#32;not&#32;have&#32;flags&#32;that&#32;can&#32;change&#32;the&#32;architecture,</emphasis>
00501 <emphasis role="comment">&#32;&#32;&#32;but&#32;rather&#32;depend&#32;on&#32;which&#32;compiler&#32;is&#32;being&#32;used</emphasis>
00502 <emphasis role="comment">*/</emphasis>
00503 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;defined(_MSC_VER)</emphasis>
00504 <emphasis role="preprocessor">#&#32;if&#32;defined(_M_IA64)</emphasis>
00505 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;IA64&quot;</emphasis>
00506 
00507 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_ARM64EC)</emphasis>
00508 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARM64EC&quot;</emphasis>
00509 
00510 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_X64)&#32;||&#32;defined(_M_AMD64)</emphasis>
00511 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;x64&quot;</emphasis>
00512 
00513 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_IX86)</emphasis>
00514 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;X86&quot;</emphasis>
00515 
00516 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_ARM64)</emphasis>
00517 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARM64&quot;</emphasis>
00518 
00519 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_ARM)</emphasis>
00520 <emphasis role="preprocessor">#&#32;&#32;if&#32;_M_ARM&#32;==&#32;4</emphasis>
00521 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARMV4I&quot;</emphasis>
00522 <emphasis role="preprocessor">#&#32;&#32;elif&#32;_M_ARM&#32;==&#32;5</emphasis>
00523 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARMV5I&quot;</emphasis>
00524 <emphasis role="preprocessor">#&#32;&#32;else</emphasis>
00525 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARMV&quot;</emphasis>&#32;STRINGIFY(_M_ARM)
00526 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
00527 
00528 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_MIPS)</emphasis>
00529 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;MIPS&quot;</emphasis>
00530 
00531 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_SH)</emphasis>
00532 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;SHx&quot;</emphasis>
00533 
00534 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;architecture&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00535 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
00536 <emphasis role="preprocessor">#&#32;endif</emphasis>
00537 
00538 <emphasis role="preprocessor">#elif&#32;defined(__WATCOMC__)</emphasis>
00539 <emphasis role="preprocessor">#&#32;if&#32;defined(_M_I86)</emphasis>
00540 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;I86&quot;</emphasis>
00541 
00542 <emphasis role="preprocessor">#&#32;elif&#32;defined(_M_IX86)</emphasis>
00543 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;X86&quot;</emphasis>
00544 
00545 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;architecture&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00546 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
00547 <emphasis role="preprocessor">#&#32;endif</emphasis>
00548 
00549 <emphasis role="preprocessor">#elif&#32;defined(__IAR_SYSTEMS_ICC__)&#32;||&#32;defined(__IAR_SYSTEMS_ICC)</emphasis>
00550 <emphasis role="preprocessor">#&#32;if&#32;defined(__ICCARM__)</emphasis>
00551 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARM&quot;</emphasis>
00552 
00553 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCRX__)</emphasis>
00554 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;RX&quot;</emphasis>
00555 
00556 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCRH850__)</emphasis>
00557 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;RH850&quot;</emphasis>
00558 
00559 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCRL78__)</emphasis>
00560 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;RL78&quot;</emphasis>
00561 
00562 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCRISCV__)</emphasis>
00563 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;RISCV&quot;</emphasis>
00564 
00565 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCAVR__)</emphasis>
00566 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;AVR&quot;</emphasis>
00567 
00568 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICC430__)</emphasis>
00569 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;MSP430&quot;</emphasis>
00570 
00571 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCV850__)</emphasis>
00572 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;V850&quot;</emphasis>
00573 
00574 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICC8051__)</emphasis>
00575 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;8051&quot;</emphasis>
00576 
00577 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ICCSTM8__)</emphasis>
00578 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;STM8&quot;</emphasis>
00579 
00580 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;architecture&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00581 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
00582 <emphasis role="preprocessor">#&#32;endif</emphasis>
00583 
00584 <emphasis role="preprocessor">#elif&#32;defined(__ghs__)</emphasis>
00585 <emphasis role="preprocessor">#&#32;if&#32;defined(__PPC64__)</emphasis>
00586 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;PPC64&quot;</emphasis>
00587 
00588 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ppc__)</emphasis>
00589 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;PPC&quot;</emphasis>
00590 
00591 <emphasis role="preprocessor">#&#32;elif&#32;defined(__ARM__)</emphasis>
00592 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARM&quot;</emphasis>
00593 
00594 <emphasis role="preprocessor">#&#32;elif&#32;defined(__x86_64__)</emphasis>
00595 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;x64&quot;</emphasis>
00596 
00597 <emphasis role="preprocessor">#&#32;elif&#32;defined(__i386__)</emphasis>
00598 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;X86&quot;</emphasis>
00599 
00600 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;architecture&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00601 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
00602 <emphasis role="preprocessor">#&#32;endif</emphasis>
00603 
00604 <emphasis role="preprocessor">#elif&#32;defined(__TI_COMPILER_VERSION__)</emphasis>
00605 <emphasis role="preprocessor">#&#32;if&#32;defined(__TI_ARM__)</emphasis>
00606 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;ARM&quot;</emphasis>
00607 
00608 <emphasis role="preprocessor">#&#32;elif&#32;defined(__MSP430__)</emphasis>
00609 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;MSP430&quot;</emphasis>
00610 
00611 <emphasis role="preprocessor">#&#32;elif&#32;defined(__TMS320C28XX__)</emphasis>
00612 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;TMS320C28x&quot;</emphasis>
00613 
00614 <emphasis role="preprocessor">#&#32;elif&#32;defined(__TMS320C6X__)&#32;||&#32;defined(_TMS320C6X)</emphasis>
00615 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;TMS320C6x&quot;</emphasis>
00616 
00617 <emphasis role="preprocessor">#&#32;else&#32;</emphasis><emphasis role="comment">/*&#32;unknown&#32;architecture&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
00618 <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID&#32;&quot;&quot;</emphasis>
00619 <emphasis role="preprocessor">#&#32;endif</emphasis>
00620 
00621 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00622"/><link linkend="__c_make_c_compiler_id_8c_1aba35d0d200deaeb06aee95ca297acb28">00622</link> <emphasis role="preprocessor">#&#32;&#32;define&#32;ARCHITECTURE_ID</emphasis>
00623 <emphasis role="preprocessor">#endif</emphasis>
00624 
00625 <emphasis role="comment">/*&#32;Convert&#32;integer&#32;to&#32;decimal&#32;digit&#32;literals.&#32;&#32;*/</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00626"/><link linkend="__c_make_c_compiler_id_8c_1ad1280362da42492bbc11aa78cbf776ad">00626</link> <emphasis role="preprocessor">#define&#32;DEC(n)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
00627 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;10000000)%10)),&#32;\</emphasis>
00628 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;1000000)%10)),&#32;&#32;\</emphasis>
00629 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;100000)%10)),&#32;&#32;&#32;\</emphasis>
00630 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;10000)%10)),&#32;&#32;&#32;&#32;\</emphasis>
00631 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;1000)%10)),&#32;&#32;&#32;&#32;&#32;\</emphasis>
00632 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;100)%10)),&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
00633 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;(((n)&#32;/&#32;10)%10)),&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
00634 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;&#32;((n)&#32;%&#32;10))</emphasis>
00635 
00636 <emphasis role="comment">/*&#32;Convert&#32;integer&#32;to&#32;hex&#32;digit&#32;literals.&#32;&#32;*/</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00637"/><link linkend="__c_make_c_compiler_id_8c_1a46d5d95daa1bef867bd0179594310ed5">00637</link> <emphasis role="preprocessor">#define&#32;HEX(n)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
00638 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;28&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00639 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;24&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00640 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;20&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00641 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;16&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00642 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;12&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00643 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;8&#32;&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00644 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&gt;&gt;4&#32;&#32;&amp;&#32;0xF)),&#32;\</emphasis>
00645 <emphasis role="preprocessor">&#32;&#32;(&apos;0&apos;&#32;+&#32;((n)&#32;&#32;&#32;&#32;&#32;&amp;&#32;0xF))</emphasis>
00646 
00647 <emphasis role="comment">/*&#32;Construct&#32;a&#32;string&#32;literal&#32;encoding&#32;the&#32;version&#32;number&#32;components.&#32;*/</emphasis>
00648 <emphasis role="preprocessor">#ifdef&#32;COMPILER_VERSION_MAJOR</emphasis>
00649 <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;info_version[]&#32;=&#32;{
00650 &#32;&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;N&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;F&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;O&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;:&apos;</emphasis>,
00651 &#32;&#32;<emphasis role="charliteral">&apos;c&apos;</emphasis>,<emphasis role="charliteral">&apos;o&apos;</emphasis>,<emphasis role="charliteral">&apos;m&apos;</emphasis>,<emphasis role="charliteral">&apos;p&apos;</emphasis>,<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;l&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;r&apos;</emphasis>,<emphasis role="charliteral">&apos;_&apos;</emphasis>,<emphasis role="charliteral">&apos;v&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;r&apos;</emphasis>,<emphasis role="charliteral">&apos;s&apos;</emphasis>,<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;o&apos;</emphasis>,<emphasis role="charliteral">&apos;n&apos;</emphasis>,<emphasis role="charliteral">&apos;[&apos;</emphasis>,
00652 &#32;&#32;COMPILER_VERSION_MAJOR,
00653 <emphasis role="preprocessor">#&#32;ifdef&#32;COMPILER_VERSION_MINOR</emphasis>
00654 &#32;&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;COMPILER_VERSION_MINOR,
00655 <emphasis role="preprocessor">#&#32;&#32;ifdef&#32;COMPILER_VERSION_PATCH</emphasis>
00656 &#32;&#32;&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;COMPILER_VERSION_PATCH,
00657 <emphasis role="preprocessor">#&#32;&#32;&#32;ifdef&#32;COMPILER_VERSION_TWEAK</emphasis>
00658 &#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;COMPILER_VERSION_TWEAK,
00659 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
00660 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
00661 <emphasis role="preprocessor">#&#32;endif</emphasis>
00662 &#32;&#32;<emphasis role="charliteral">&apos;]&apos;</emphasis>,<emphasis role="charliteral">&apos;\0&apos;</emphasis>};
00663 <emphasis role="preprocessor">#endif</emphasis>
00664 
00665 <emphasis role="comment">/*&#32;Construct&#32;a&#32;string&#32;literal&#32;encoding&#32;the&#32;internal&#32;version&#32;number.&#32;*/</emphasis>
00666 <emphasis role="preprocessor">#ifdef&#32;COMPILER_VERSION_INTERNAL</emphasis>
00667 <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;info_version_internal[]&#32;=&#32;{
00668 &#32;&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;N&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;F&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;O&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;:&apos;</emphasis>,
00669 &#32;&#32;<emphasis role="charliteral">&apos;c&apos;</emphasis>,<emphasis role="charliteral">&apos;o&apos;</emphasis>,<emphasis role="charliteral">&apos;m&apos;</emphasis>,<emphasis role="charliteral">&apos;p&apos;</emphasis>,<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;l&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;r&apos;</emphasis>,<emphasis role="charliteral">&apos;_&apos;</emphasis>,<emphasis role="charliteral">&apos;v&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;r&apos;</emphasis>,<emphasis role="charliteral">&apos;s&apos;</emphasis>,<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;o&apos;</emphasis>,<emphasis role="charliteral">&apos;n&apos;</emphasis>,<emphasis role="charliteral">&apos;_&apos;</emphasis>,
00670 &#32;&#32;<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;n&apos;</emphasis>,<emphasis role="charliteral">&apos;t&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;r&apos;</emphasis>,<emphasis role="charliteral">&apos;n&apos;</emphasis>,<emphasis role="charliteral">&apos;a&apos;</emphasis>,<emphasis role="charliteral">&apos;l&apos;</emphasis>,<emphasis role="charliteral">&apos;[&apos;</emphasis>,
00671 &#32;&#32;COMPILER_VERSION_INTERNAL,<emphasis role="charliteral">&apos;]&apos;</emphasis>,<emphasis role="charliteral">&apos;\0&apos;</emphasis>};
00672 <emphasis role="preprocessor">#endif</emphasis>
00673 
00674 <emphasis role="comment">/*&#32;Construct&#32;a&#32;string&#32;literal&#32;encoding&#32;the&#32;version&#32;number&#32;components.&#32;*/</emphasis>
00675 <emphasis role="preprocessor">#ifdef&#32;SIMULATE_VERSION_MAJOR</emphasis>
00676 <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;info_simulate_version[]&#32;=&#32;{
00677 &#32;&#32;<emphasis role="charliteral">&apos;I&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;N&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;F&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;O&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;:&apos;</emphasis>,
00678 &#32;&#32;<emphasis role="charliteral">&apos;s&apos;</emphasis>,<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;m&apos;</emphasis>,<emphasis role="charliteral">&apos;u&apos;</emphasis>,<emphasis role="charliteral">&apos;l&apos;</emphasis>,<emphasis role="charliteral">&apos;a&apos;</emphasis>,<emphasis role="charliteral">&apos;t&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;_&apos;</emphasis>,<emphasis role="charliteral">&apos;v&apos;</emphasis>,<emphasis role="charliteral">&apos;e&apos;</emphasis>,<emphasis role="charliteral">&apos;r&apos;</emphasis>,<emphasis role="charliteral">&apos;s&apos;</emphasis>,<emphasis role="charliteral">&apos;i&apos;</emphasis>,<emphasis role="charliteral">&apos;o&apos;</emphasis>,<emphasis role="charliteral">&apos;n&apos;</emphasis>,<emphasis role="charliteral">&apos;[&apos;</emphasis>,
00679 &#32;&#32;SIMULATE_VERSION_MAJOR,
00680 <emphasis role="preprocessor">#&#32;ifdef&#32;SIMULATE_VERSION_MINOR</emphasis>
00681 &#32;&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;SIMULATE_VERSION_MINOR,
00682 <emphasis role="preprocessor">#&#32;&#32;ifdef&#32;SIMULATE_VERSION_PATCH</emphasis>
00683 &#32;&#32;&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;SIMULATE_VERSION_PATCH,
00684 <emphasis role="preprocessor">#&#32;&#32;&#32;ifdef&#32;SIMULATE_VERSION_TWEAK</emphasis>
00685 &#32;&#32;&#32;&#32;<emphasis role="charliteral">&apos;.&apos;</emphasis>,&#32;SIMULATE_VERSION_TWEAK,
00686 <emphasis role="preprocessor">#&#32;&#32;&#32;endif</emphasis>
00687 <emphasis role="preprocessor">#&#32;&#32;endif</emphasis>
00688 <emphasis role="preprocessor">#&#32;endif</emphasis>
00689 &#32;&#32;<emphasis role="charliteral">&apos;]&apos;</emphasis>,<emphasis role="charliteral">&apos;\0&apos;</emphasis>};
00690 <emphasis role="preprocessor">#endif</emphasis>
00691 
00692 <emphasis role="comment">/*&#32;Construct&#32;the&#32;string&#32;literal&#32;in&#32;pieces&#32;to&#32;prevent&#32;the&#32;source&#32;from</emphasis>
00693 <emphasis role="comment">&#32;&#32;&#32;getting&#32;matched.&#32;&#32;Store&#32;it&#32;in&#32;a&#32;pointer&#32;rather&#32;than&#32;an&#32;array</emphasis>
00694 <emphasis role="comment">&#32;&#32;&#32;because&#32;some&#32;compilers&#32;will&#32;just&#32;produce&#32;instructions&#32;to&#32;fill&#32;the</emphasis>
00695 <emphasis role="comment">&#32;&#32;&#32;array&#32;rather&#32;than&#32;assigning&#32;a&#32;pointer&#32;to&#32;a&#32;static&#32;array.&#32;&#32;*/</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00696"/><link linkend="__c_make_c_compiler_id_8c_1a2321403dee54ee23f0c2fa849c60f7d4">00696</link> <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>*&#32;<link linkend="__c_make_c_compiler_id_8c_1a2321403dee54ee23f0c2fa849c60f7d4">info_platform</link>&#32;=&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;platform[&quot;</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1adbc5372f40838899018fadbc89bd588b">PLATFORM_ID</link>&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00697"/><link linkend="__c_make_c_compiler_id_8c_1a59647e99d304ed33b15cb284c27ed391">00697</link> <emphasis role="keywordtype">char</emphasis>&#32;<emphasis role="keyword">const</emphasis>*&#32;<link linkend="__c_make_c_compiler_id_8c_1a59647e99d304ed33b15cb284c27ed391">info_arch</link>&#32;=&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;arch[&quot;</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1aba35d0d200deaeb06aee95ca297acb28">ARCHITECTURE_ID</link>&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
00698 
00699 
00700 
00701 <emphasis role="preprocessor">#if&#32;!defined(__STDC__)</emphasis>
00702 <emphasis role="preprocessor">#&#32;if&#32;(defined(_MSC_VER)&#32;&amp;&amp;&#32;!defined(__clang__))&#32;\</emphasis>
00703 <emphasis role="preprocessor">&#32;&#32;||&#32;(defined(__ibmxl__)&#32;||&#32;defined(__IBMC__))</emphasis>
00704 <emphasis role="preprocessor">#&#32;&#32;define&#32;C_DIALECT&#32;&quot;90&quot;</emphasis>
00705 <emphasis role="preprocessor">#&#32;else</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00706"/><link linkend="__c_make_c_compiler_id_8c_1a07f8e5783674099cd7f5110e22a78cdb">00706</link> <emphasis role="preprocessor">#&#32;&#32;define&#32;C_DIALECT</emphasis>
00707 <emphasis role="preprocessor">#&#32;endif</emphasis>
00708 <emphasis role="preprocessor">#elif&#32;__STDC_VERSION__&#32;&gt;=&#32;201000L</emphasis>
00709 <emphasis role="preprocessor">#&#32;define&#32;C_DIALECT&#32;&quot;11&quot;</emphasis>
00710 <emphasis role="preprocessor">#elif&#32;__STDC_VERSION__&#32;&gt;=&#32;199901L</emphasis>
00711 <emphasis role="preprocessor">#&#32;define&#32;C_DIALECT&#32;&quot;99&quot;</emphasis>
00712 <emphasis role="preprocessor">#else</emphasis>
00713 <emphasis role="preprocessor">#&#32;define&#32;C_DIALECT&#32;&quot;90&quot;</emphasis>
00714 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00715"/><link linkend="__c_make_c_compiler_id_8c_1a1ce162bad2fe6966ac8b33cc19e120b8">00715</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__c_make_c_compiler_id_8c_1a1ce162bad2fe6966ac8b33cc19e120b8">info_language_dialect_default</link>&#32;=
00716 &#32;&#32;<emphasis role="stringliteral">&quot;INFO&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>&#32;<emphasis role="stringliteral">&quot;dialect_default[&quot;</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1a07f8e5783674099cd7f5110e22a78cdb">C_DIALECT</link>&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>;
00717 
00718 <emphasis role="comment">/*--------------------------------------------------------------------------*/</emphasis>
00719 
00720 <emphasis role="preprocessor">#ifdef&#32;ID_VOID_MAIN</emphasis>
00721 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1a0ddf1224851353fc92bfbff6f499fa97">main</link>()&#32;{}
00722 <emphasis role="preprocessor">#else</emphasis>
00723 <emphasis role="preprocessor">#&#32;if&#32;defined(__CLASSIC_C__)</emphasis>
00724 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1a0ddf1224851353fc92bfbff6f499fa97">main</link>(argc,&#32;argv)&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*argv[];
00725 <emphasis role="preprocessor">#&#32;else</emphasis>
<anchor xml:id="__c_make_c_compiler_id_8c_source_1l00726"/><link linkend="__c_make_c_compiler_id_8c_1a0ddf1224851353fc92bfbff6f499fa97">00726</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__c_make_c_compiler_id_8c_1a0ddf1224851353fc92bfbff6f499fa97">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>*&#32;argv[])
00727 <emphasis role="preprocessor">#&#32;endif</emphasis>
00728 {
00729 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;require&#32;=&#32;0;
00730 &#32;&#32;require&#32;+=&#32;<link linkend="__c_make_c_compiler_id_8c_1a4b0efeb7a5d59313986b3a0390f050f6">info_compiler</link>[argc];
00731 &#32;&#32;require&#32;+=&#32;<link linkend="__c_make_c_compiler_id_8c_1a2321403dee54ee23f0c2fa849c60f7d4">info_platform</link>[argc];
00732 &#32;&#32;require&#32;+=&#32;<link linkend="__c_make_c_compiler_id_8c_1a59647e99d304ed33b15cb284c27ed391">info_arch</link>[argc];
00733 <emphasis role="preprocessor">#ifdef&#32;COMPILER_VERSION_MAJOR</emphasis>
00734 &#32;&#32;require&#32;+=&#32;info_version[argc];
00735 <emphasis role="preprocessor">#endif</emphasis>
00736 <emphasis role="preprocessor">#ifdef&#32;COMPILER_VERSION_INTERNAL</emphasis>
00737 &#32;&#32;require&#32;+=&#32;info_version_internal[argc];
00738 <emphasis role="preprocessor">#endif</emphasis>
00739 <emphasis role="preprocessor">#ifdef&#32;SIMULATE_ID</emphasis>
00740 &#32;&#32;require&#32;+=&#32;info_simulate[argc];
00741 <emphasis role="preprocessor">#endif</emphasis>
00742 <emphasis role="preprocessor">#ifdef&#32;SIMULATE_VERSION_MAJOR</emphasis>
00743 &#32;&#32;require&#32;+=&#32;info_simulate_version[argc];
00744 <emphasis role="preprocessor">#endif</emphasis>
00745 <emphasis role="preprocessor">#if&#32;defined(__CRAYXT_COMPUTE_LINUX_TARGET)</emphasis>
00746 &#32;&#32;require&#32;+=&#32;info_cray[argc];
00747 <emphasis role="preprocessor">#endif</emphasis>
00748 &#32;&#32;require&#32;+=&#32;<link linkend="__c_make_c_compiler_id_8c_1a1ce162bad2fe6966ac8b33cc19e120b8">info_language_dialect_default</link>[argc];
00749 &#32;&#32;(void)argv;
00750 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;require;
00751 }
00752 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
