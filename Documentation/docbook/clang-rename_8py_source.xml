<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_clang-rename_8py_source" xml:lang="en-US">
<title>clang-rename.py</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-rename/clang-rename.py</primary></indexterm>
<programlisting><anchor xml:id="_clang-rename_8py_source_1l00001"/><link linkend="_namespaceclang-rename">00001</link> <emphasis role="stringliteral">&apos;&apos;&apos;</emphasis>
00002 <emphasis role="stringliteral">Minimal&#32;clang-rename&#32;integration&#32;with&#32;Vim.</emphasis>
00003 <emphasis role="stringliteral"></emphasis>
00004 <emphasis role="stringliteral">Before&#32;installing&#32;make&#32;sure&#32;one&#32;of&#32;the&#32;following&#32;is&#32;satisfied:</emphasis>
00005 <emphasis role="stringliteral"></emphasis>
00006 <emphasis role="stringliteral">*&#32;clang-rename&#32;is&#32;in&#32;your&#32;PATH</emphasis>
00007 <emphasis role="stringliteral">*&#32;`g:clang_rename_path`&#32;in&#32;~/.vimrc&#32;points&#32;to&#32;valid&#32;clang-rename&#32;executable</emphasis>
00008 <emphasis role="stringliteral">*&#32;`binary`&#32;in&#32;clang-rename.py&#32;points&#32;to&#32;valid&#32;to&#32;clang-rename&#32;executable</emphasis>
00009 <emphasis role="stringliteral"></emphasis>
00010 <emphasis role="stringliteral">To&#32;install,&#32;simply&#32;put&#32;this&#32;into&#32;your&#32;~/.vimrc&#32;for&#32;python2&#32;support</emphasis>
00011 <emphasis role="stringliteral"></emphasis>
00012 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;noremap&#32;&lt;leader&gt;cr&#32;:pyf&#32;&lt;path-to&gt;/clang-rename.py&lt;cr&gt;</emphasis>
00013 <emphasis role="stringliteral"></emphasis>
00014 <emphasis role="stringliteral">For&#32;python3&#32;use&#32;the&#32;following&#32;command&#32;(note&#32;the&#32;change&#32;from&#32;:pyf&#32;to&#32;:py3f)</emphasis>
00015 <emphasis role="stringliteral"></emphasis>
00016 <emphasis role="stringliteral">&#32;&#32;&#32;&#32;noremap&#32;&lt;leader&gt;cr&#32;:py3f&#32;&lt;path-to&gt;/clang-rename.py&lt;cr&gt;</emphasis>
00017 <emphasis role="stringliteral"></emphasis>
00018 <emphasis role="stringliteral">IMPORTANT&#32;NOTE:&#32;Before&#32;running&#32;the&#32;tool,&#32;make&#32;sure&#32;you&#32;saved&#32;the&#32;file.</emphasis>
00019 <emphasis role="stringliteral"></emphasis>
00020 <emphasis role="stringliteral">All&#32;you&#32;have&#32;to&#32;do&#32;now&#32;is&#32;to&#32;place&#32;a&#32;cursor&#32;on&#32;a&#32;variable/function/class&#32;which</emphasis>
00021 <emphasis role="stringliteral">you&#32;would&#32;like&#32;to&#32;rename&#32;and&#32;press&#32;&apos;&lt;leader&gt;cr&apos;.&#32;You&#32;will&#32;be&#32;prompted&#32;for&#32;a&#32;new</emphasis>
00022 <emphasis role="stringliteral">name&#32;if&#32;the&#32;cursor&#32;points&#32;to&#32;a&#32;valid&#32;symbol.</emphasis>
00023 <emphasis role="stringliteral">&apos;&apos;&apos;</emphasis>
00024 
00025 <emphasis role="keyword">from</emphasis>&#32;__future__&#32;<emphasis role="keyword">import</emphasis>&#32;absolute_import,&#32;division,&#32;print_function
00026 <emphasis role="keyword">import</emphasis>&#32;vim
00027 <emphasis role="keyword">import</emphasis>&#32;subprocess
00028 <emphasis role="keyword">import</emphasis>&#32;sys
00029 
<anchor xml:id="_clang-rename_8py_source_1l00030"/><link linkend="_namespaceclang-rename_1a72623062ae6b8f10b4d7bb810bb743e4">00030</link> <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceclang-rename_1a72623062ae6b8f10b4d7bb810bb743e4">main</link>():
00031 &#32;&#32;&#32;&#32;binary&#32;=&#32;<emphasis role="stringliteral">&apos;clang-rename&apos;</emphasis>
00032 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;vim.eval(<emphasis role="stringliteral">&apos;exists(&quot;g:clang_rename_path&quot;)&apos;</emphasis>)&#32;==&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>:
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;binary&#32;=&#32;vim.eval(<emphasis role="stringliteral">&apos;g:clang_rename_path&apos;</emphasis>)
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Get&#32;arguments&#32;for&#32;clang-rename&#32;binary.</emphasis>
00036 &#32;&#32;&#32;&#32;offset&#32;=&#32;int(vim.eval(<emphasis role="stringliteral">&apos;line2byte(line(&quot;.&quot;))+col(&quot;.&quot;)&apos;</emphasis>))&#32;-&#32;2
00037 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;offset&#32;&lt;&#32;0:
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__function_call_decl_8cpp_1a388f572c62279f839ee138a9afbdeeb5">print</link>(<emphasis role="stringliteral">&apos;Couldn\&apos;t&#32;determine&#32;cursor&#32;position.&#32;Is&#32;your&#32;file&#32;empty?&apos;</emphasis>,
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file=sys.stderr)
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
00041 &#32;&#32;&#32;&#32;filename&#32;=&#32;vim.current.buffer.name
00042 
00043 &#32;&#32;&#32;&#32;new_name_request_message&#32;=&#32;<emphasis role="stringliteral">&apos;type&#32;new&#32;name:&apos;</emphasis>
00044 &#32;&#32;&#32;&#32;new_name&#32;=&#32;vim.eval(<emphasis role="stringliteral">&quot;input(&apos;{}\n&apos;)&quot;</emphasis>.format(new_name_request_message))
00045 
00046 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Call&#32;clang-rename.</emphasis>
00047 &#32;&#32;&#32;&#32;command&#32;=&#32;[binary,
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename,
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;-i&apos;</emphasis>,
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;-offset&apos;</emphasis>,&#32;str(offset),
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;-new-name&apos;</emphasis>,&#32;str(new_name)]
00052 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;FIXME:&#32;make&#32;it&#32;possible&#32;to&#32;run&#32;the&#32;tool&#32;on&#32;unsaved&#32;file.</emphasis>
00053 &#32;&#32;&#32;&#32;p&#32;=&#32;subprocess.Popen(command,
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stdout=subprocess.PIPE,
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stderr=subprocess.PIPE)
00056 &#32;&#32;&#32;&#32;stdout,&#32;stderr&#32;=&#32;p.communicate()
00057 
00058 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;stderr:
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__function_call_decl_8cpp_1a388f572c62279f839ee138a9afbdeeb5">print</link>(stderr)
00060 
00061 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Reload&#32;all&#32;buffers&#32;in&#32;Vim.</emphasis>
00062 &#32;&#32;&#32;&#32;vim.command(<emphasis role="stringliteral">&quot;checktime&quot;</emphasis>)
00063 
00064 
00065 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&apos;__main__&apos;</emphasis>:
00066 &#32;&#32;&#32;&#32;<link linkend="_namespaceclang-rename_1a72623062ae6b8f10b4d7bb810bb743e4">main</link>()
</programlisting></section>
