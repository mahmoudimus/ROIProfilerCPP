<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__dummy_clang_fuzzer_8cpp_source" xml:lang="en-US">
<title>DummyClangFuzzer.cpp</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/DummyClangFuzzer.cpp</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//===--&#32;DummyClangFuzzer.cpp&#32;-&#32;Entry&#32;point&#32;to&#32;sanity&#32;check&#32;fuzzers&#32;--------===//</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
00004 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
00005 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
00006 <emphasis role="comment">//</emphasis>
00007 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00008 <emphasis role="comment">//</emphasis>
00009 <emphasis role="comment">//&#32;Provides&#32;a&#32;main()&#32;to&#32;build&#32;without&#32;linking&#32;libFuzzer.</emphasis>
00010 <emphasis role="comment">//</emphasis>
00011 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00012 <emphasis role="preprocessor">#include&#32;&quot;llvm/FuzzMutate/FuzzerCLI.h&quot;</emphasis>
00013 
<anchor xml:id="__dummy_clang_fuzzer_8cpp_source_1l00014"/><link linkend="__dummy_clang_fuzzer_8cpp_1a1c473c9665269a78ef9001573a6995df">00014</link> <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__dummy_clang_fuzzer_8cpp_1a1c473c9665269a78ef9001573a6995df">LLVMFuzzerTestOneInput</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;*Data,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;Size);
00015 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__dummy_clang_fuzzer_8cpp_1aa30889313cc057073351a87b2590b886">LLVMFuzzerInitialize</link>(<emphasis role="keywordtype">int</emphasis>&#32;*argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;***argv);
00016 
<anchor xml:id="__dummy_clang_fuzzer_8cpp_source_1l00017"/><link linkend="__dummy_clang_fuzzer_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">00017</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__dummy_clang_fuzzer_8cpp_1a0ddf1224851353fc92bfbff6f499fa97">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*argv[])&#32;{
00018 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;llvm::runFuzzerOnInputs(argc,&#32;argv,&#32;<link linkend="__dummy_clang_fuzzer_8cpp_1a1c473c9665269a78ef9001573a6995df">LLVMFuzzerTestOneInput</link>,
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__dummy_clang_fuzzer_8cpp_1aa30889313cc057073351a87b2590b886">LLVMFuzzerInitialize</link>);
00020 }
</programlisting></section>
