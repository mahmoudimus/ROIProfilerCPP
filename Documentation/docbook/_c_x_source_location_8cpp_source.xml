<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_x_source_location_8cpp_source" xml:lang="en-US">
<title>CXSourceLocation.cpp</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/libclang/CXSourceLocation.cpp</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//===-&#32;CXSourceLocation.cpp&#32;-&#32;CXSourceLocations&#32;APIs&#32;------------*-&#32;C++&#32;-*-===//</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
00004 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
00005 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
00006 <emphasis role="comment">//</emphasis>
00007 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00008 <emphasis role="comment">//</emphasis>
00009 <emphasis role="comment">//&#32;This&#32;file&#32;defines&#32;routines&#32;for&#32;manipulating&#32;CXSourceLocations.</emphasis>
00010 <emphasis role="comment">//</emphasis>
00011 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00012 
00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_x_source_location_8h">CXSourceLocation.h</link>&quot;</emphasis>
00014 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_indexer_8h">CIndexer.h</link>&quot;</emphasis>
00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_log_8h">CLog.h</link>&quot;</emphasis>
00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_x_loaded_diagnostic_8h">CXLoadedDiagnostic.h</link>&quot;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_x_string_8h">CXString.h</link>&quot;</emphasis>
00018 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__c_x_translation_unit_8h">CXTranslationUnit.h</link>&quot;</emphasis>
00019 <emphasis role="preprocessor">#include&#32;&quot;clang/Basic/FileManager.h&quot;</emphasis>
00020 <emphasis role="preprocessor">#include&#32;&quot;clang/Frontend/ASTUnit.h&quot;</emphasis>
00021 <emphasis role="preprocessor">#include&#32;&quot;llvm/Support/Compiler.h&quot;</emphasis>
00022 <emphasis role="preprocessor">#include&#32;&quot;llvm/Support/Format.h&quot;</emphasis>
00023 
00024 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespaceclang">clang</link>;
00025 <emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespaceclang_1_1cxindex">clang::cxindex</link>;
00026 
00027 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00028 <emphasis role="comment">//&#32;Internal&#32;predicates&#32;on&#32;CXSourceLocations.</emphasis>
00029 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00030 
00031 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isASTUnitSourceLocation(<emphasis role="keyword">const</emphasis>&#32;CXSourceLocation&#32;&amp;L)&#32;{
00032 &#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;lowest&#32;bit&#32;is&#32;clear&#32;then&#32;the&#32;first&#32;ptr_data&#32;entry&#32;is&#32;a&#32;SourceManager</emphasis>
00033 &#32;&#32;<emphasis role="comment">//&#32;pointer,&#32;or&#32;the&#32;CXSourceLocation&#32;is&#32;a&#32;null&#32;location.</emphasis>
00034 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((uintptr_t)L.ptr_data[0]&#32;&amp;&#32;0x1)&#32;==&#32;0;
00035 }
00036 
00037 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00038 <emphasis role="comment">//&#32;Basic&#32;construction&#32;and&#32;comparison&#32;of&#32;CXSourceLocations&#32;and&#32;CXSourceRanges.</emphasis>
00039 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00040 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00041"/><link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">00041</link> CXSourceLocation&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>()&#32;{
00042 &#32;&#32;CXSourceLocation&#32;Result&#32;=&#32;{&#32;{&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>&#32;},&#32;0&#32;};
00043 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
00044 }
00045 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00046"/><link linkend="__c_x_source_location_8cpp_1aa18c665664a0dd6ebf8eae9954a3a696">00046</link> <emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1aa18c665664a0dd6ebf8eae9954a3a696">clang_equalLocations</link>(CXSourceLocation&#32;loc1,&#32;CXSourceLocation&#32;loc2)&#32;{
00047 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(loc1.ptr_data[0]&#32;==&#32;loc2.ptr_data[0]&#32;&amp;&amp;
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loc1.ptr_data[1]&#32;==&#32;loc2.ptr_data[1]&#32;&amp;&amp;
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;loc1.int_data&#32;==&#32;loc2.int_data);
00050 }
00051 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00052"/><link linkend="__c_x_source_location_8cpp_1afadb1a95ce51366407cf6c363299a17f">00052</link> CXSourceRange&#32;<link linkend="__c_x_source_location_8cpp_1afadb1a95ce51366407cf6c363299a17f">clang_getNullRange</link>()&#32;{
00053 &#32;&#32;CXSourceRange&#32;Result&#32;=&#32;{&#32;{&#32;<emphasis role="keyword">nullptr</emphasis>,&#32;<emphasis role="keyword">nullptr</emphasis>&#32;},&#32;0,&#32;0&#32;};
00054 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
00055 }
00056 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00057"/><link linkend="__c_x_source_location_8cpp_1a6d436a40e815644209860de3f1416210">00057</link> CXSourceRange&#32;<link linkend="__c_x_source_location_8cpp_1a6d436a40e815644209860de3f1416210">clang_getRange</link>(CXSourceLocation&#32;begin,&#32;CXSourceLocation&#32;end)&#32;{
00058 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isASTUnitSourceLocation(begin))&#32;{
00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(isASTUnitSourceLocation(end))
00060 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1afadb1a95ce51366407cf6c363299a17f">clang_getNullRange</link>();
00061 &#32;&#32;&#32;&#32;CXSourceRange&#32;Result&#32;=&#32;{&#32;{&#32;begin.ptr_data[0],&#32;end.ptr_data[0]&#32;},&#32;0,&#32;0&#32;};
00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
00063 &#32;&#32;}
00064 &#32;&#32;
00065 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(begin.ptr_data[0]&#32;!=&#32;end.ptr_data[0]&#32;||
00066 &#32;&#32;&#32;&#32;&#32;&#32;begin.ptr_data[1]&#32;!=&#32;end.ptr_data[1])
00067 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1afadb1a95ce51366407cf6c363299a17f">clang_getNullRange</link>();
00068 &#32;&#32;
00069 &#32;&#32;CXSourceRange&#32;Result&#32;=&#32;{&#32;{&#32;begin.ptr_data[0],&#32;begin.ptr_data[1]&#32;},
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;begin.int_data,&#32;end.int_data&#32;};
00071 
00072 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
00073 }
00074 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00075"/><link linkend="__c_x_source_location_8cpp_1a1db87704023c788fcbaeac5c7a940560">00075</link> <emphasis role="keywordtype">unsigned</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a1db87704023c788fcbaeac5c7a940560">clang_equalRanges</link>(CXSourceRange&#32;range1,&#32;CXSourceRange&#32;range2)&#32;{
00076 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;range1.ptr_data[0]&#32;==&#32;range2.ptr_data[0]
00077 &#32;&#32;&#32;&#32;&amp;&amp;&#32;range1.ptr_data[1]&#32;==&#32;range2.ptr_data[1]
00078 &#32;&#32;&#32;&#32;&amp;&amp;&#32;range1.begin_int_data&#32;==&#32;range2.begin_int_data
00079 &#32;&#32;&#32;&#32;&amp;&amp;&#32;range1.end_int_data&#32;==&#32;range2.end_int_data;
00080 }
00081 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00082"/><link linkend="__c_x_source_location_8cpp_1ae11f8a52af4ea3ffd8018196f41f4128">00082</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1ae11f8a52af4ea3ffd8018196f41f4128">clang_Range_isNull</link>(CXSourceRange&#32;range)&#32;{
00083 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a1db87704023c788fcbaeac5c7a940560">clang_equalRanges</link>(range,&#32;<link linkend="__c_x_source_location_8cpp_1afadb1a95ce51366407cf6c363299a17f">clang_getNullRange</link>());
00084 }
00085 &#32;&#32;
00086 &#32;&#32;
<anchor xml:id="__c_x_source_location_8cpp_source_1l00087"/><link linkend="__c_x_source_location_8cpp_1a14a10dd8d9a4069c4fc1a7be62f58874">00087</link> CXSourceLocation&#32;<link linkend="__c_x_source_location_8cpp_1a14a10dd8d9a4069c4fc1a7be62f58874">clang_getRangeStart</link>(CXSourceRange&#32;range)&#32;{
00088 &#32;&#32;<emphasis role="comment">//&#32;Special&#32;decoding&#32;for&#32;CXSourceLocations&#32;for&#32;CXLoadedDiagnostics.</emphasis>
00089 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((uintptr_t)range.ptr_data[0]&#32;&amp;&#32;0x1)&#32;{
00090 &#32;&#32;&#32;&#32;CXSourceLocation&#32;Result&#32;=&#32;{&#32;{&#32;range.ptr_data[0],&#32;<emphasis role="keyword">nullptr</emphasis>&#32;},&#32;0&#32;};
00091 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;&#32;&#32;&#32;&#32;
00092 &#32;&#32;}
00093 &#32;&#32;
00094 &#32;&#32;CXSourceLocation&#32;Result&#32;=&#32;{&#32;{&#32;range.ptr_data[0],&#32;range.ptr_data[1]&#32;},
00095 &#32;&#32;&#32;&#32;range.begin_int_data&#32;};
00096 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
00097 }
00098 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00099"/><link linkend="__c_x_source_location_8cpp_1a146c4bda0251ee320dc6e4b1b3fbb919">00099</link> CXSourceLocation&#32;<link linkend="__c_x_source_location_8cpp_1a146c4bda0251ee320dc6e4b1b3fbb919">clang_getRangeEnd</link>(CXSourceRange&#32;range)&#32;{
00100 &#32;&#32;<emphasis role="comment">//&#32;Special&#32;decoding&#32;for&#32;CXSourceLocations&#32;for&#32;CXLoadedDiagnostics.</emphasis>
00101 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((uintptr_t)range.ptr_data[0]&#32;&amp;&#32;0x1)&#32;{
00102 &#32;&#32;&#32;&#32;CXSourceLocation&#32;Result&#32;=&#32;{&#32;{&#32;range.ptr_data[1],&#32;<emphasis role="keyword">nullptr</emphasis>&#32;},&#32;0&#32;};
00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;&#32;&#32;&#32;&#32;
00104 &#32;&#32;}
00105 
00106 &#32;&#32;CXSourceLocation&#32;Result&#32;=&#32;{&#32;{&#32;range.ptr_data[0],&#32;range.ptr_data[1]&#32;},
00107 &#32;&#32;&#32;&#32;range.end_int_data&#32;};
00108 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Result;
00109 }
00110 
00111 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00112 <emphasis role="comment">//&#32;&#32;Getting&#32;CXSourceLocations&#32;and&#32;CXSourceRanges&#32;from&#32;a&#32;translation&#32;unit.</emphasis>
00113 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00114 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00115"/><link linkend="__c_x_source_location_8cpp_1a3da1e96662794609af6bec3dc345dd9a">00115</link> CXSourceLocation&#32;<link linkend="__c_x_source_location_8cpp_1a3da1e96662794609af6bec3dc345dd9a">clang_getLocation</link>(CXTranslationUnit&#32;TU,
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXFile&#32;file,
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;line,
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;column)&#32;{
00119 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cxtu::isNotUsableTU(TU))&#32;{
00120 &#32;&#32;&#32;&#32;<link linkend="__c_x_translation_unit_8h_1a4ec17e6e03ea0baf73e27802eae36106">LOG_BAD_TU</link>(TU);
00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00122 &#32;&#32;}
00123 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!file)
00124 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00125 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line&#32;==&#32;0&#32;||&#32;column&#32;==&#32;0)
00126 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00127 &#32;&#32;
00128 &#32;&#32;<link linkend="_namespaceclang_1_1cxindex_1a404a46a001568431816a6c375e7cd810">LogRef</link>&#32;Log&#32;=&#32;<link linkend="_classclang_1_1cxindex_1_1_logger_1a3baec221eac793eb7f974cc709b55bb3">Logger::make</link>(__func__);
00129 &#32;&#32;ASTUnit&#32;*CXXUnit&#32;=&#32;cxtu::getASTUnit(TU);
00130 &#32;&#32;ASTUnit::ConcurrencyCheck&#32;Check(*CXXUnit);
00131 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;FileEntry&#32;*File&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file);
00132 &#32;&#32;SourceLocation&#32;SLoc&#32;=&#32;CXXUnit-&gt;getLocation(File,&#32;line,&#32;column);
00133 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SLoc.isInvalid())&#32;{
00134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00135 &#32;&#32;&#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;llvm::format(<emphasis role="stringliteral">&quot;(\&quot;%s\&quot;,&#32;%d,&#32;%d)&#32;=&#32;invalid&quot;</emphasis>,
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;File-&gt;getName().str().c_str(),&#32;line,&#32;column);
00137 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00138 &#32;&#32;}
00139 &#32;&#32;
00140 &#32;&#32;CXSourceLocation&#32;CXLoc&#32;=
00141 &#32;&#32;&#32;&#32;&#32;&#32;cxloc::translateSourceLocation(CXXUnit-&gt;getASTContext(),&#32;SLoc);
00142 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Log)
00143 &#32;&#32;&#32;&#32;*Log&#32;&lt;&lt;&#32;llvm::format(<emphasis role="stringliteral">&quot;(\&quot;%s\&quot;,&#32;%d,&#32;%d)&#32;=&#32;&quot;</emphasis>,&#32;File-&gt;getName().str().c_str(),
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line,&#32;column)
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;CXLoc;
00146 
00147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;CXLoc;
00148 }
00149 &#32;&#32;
<anchor xml:id="__c_x_source_location_8cpp_source_1l00150"/><link linkend="__c_x_source_location_8cpp_1aec48eeee62c87eaf3b6f11b5f2a129af">00150</link> CXSourceLocation&#32;<link linkend="__c_x_source_location_8cpp_1aec48eeee62c87eaf3b6f11b5f2a129af">clang_getLocationForOffset</link>(CXTranslationUnit&#32;TU,
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXFile&#32;file,
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;offset)&#32;{
00153 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cxtu::isNotUsableTU(TU))&#32;{
00154 &#32;&#32;&#32;&#32;<link linkend="__c_x_translation_unit_8h_1a4ec17e6e03ea0baf73e27802eae36106">LOG_BAD_TU</link>(TU);
00155 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00156 &#32;&#32;}
00157 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!file)
00158 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00159 
00160 &#32;&#32;ASTUnit&#32;*CXXUnit&#32;=&#32;cxtu::getASTUnit(TU);
00161 
00162 &#32;&#32;SourceLocation&#32;SLoc&#32;
00163 &#32;&#32;&#32;&#32;=&#32;CXXUnit-&gt;getLocation(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(file),&#32;offset);
00164 
00165 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(SLoc.isInvalid())
00166 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a20bb1e9a72e2c16fbcb21958f0648947">clang_getNullLocation</link>();
00167 &#32;&#32;
00168 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cxloc::translateSourceLocation(CXXUnit-&gt;getASTContext(),&#32;SLoc);
00169 }
00170 
00171 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00172 <emphasis role="comment">//&#32;Routines&#32;for&#32;expanding&#32;and&#32;manipulating&#32;CXSourceLocations,&#32;regardless</emphasis>
00173 <emphasis role="comment">//&#32;of&#32;their&#32;origin.</emphasis>
00174 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00175 
00176 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;createNullLocation(CXFile&#32;*file,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*offset)&#32;{
00178 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file)
00179 &#32;&#32;&#32;&#32;*file&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
00180 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line)
00181 &#32;&#32;&#32;&#32;*line&#32;=&#32;0;
00182 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(column)
00183 &#32;&#32;&#32;&#32;*column&#32;=&#32;0;
00184 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset)
00185 &#32;&#32;&#32;&#32;*offset&#32;=&#32;0;
00186 }
00187 
00188 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;createNullLocation(CXString&#32;*filename,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*offset&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
00190 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(filename)
00191 &#32;&#32;&#32;&#32;*filename&#32;=&#32;<link linkend="_namespaceclang_1_1cxstring_1a8a49aa6ea196abdde85886689f2630f9">cxstring::createEmpty</link>();
00192 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line)
00193 &#32;&#32;&#32;&#32;*line&#32;=&#32;0;
00194 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(column)
00195 &#32;&#32;&#32;&#32;*column&#32;=&#32;0;
00196 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset)
00197 &#32;&#32;&#32;&#32;*offset&#32;=&#32;0;
00198 }
00199 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00200"/><link linkend="__c_x_source_location_8cpp_1aba0511bc9712c9796fb25762a424c507">00200</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1aba0511bc9712c9796fb25762a424c507">clang_Location_isInSystemHeader</link>(CXSourceLocation&#32;location)&#32;{
00201 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceLocation&#32;Loc&#32;=
00202 &#32;&#32;&#32;&#32;SourceLocation::getFromRawEncoding(location.int_data);
00203 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Loc.isInvalid())
00204 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00205 
00206 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceManager&#32;&amp;SM&#32;=
00207 &#32;&#32;&#32;&#32;*<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>SourceManager*<emphasis role="keyword">&gt;</emphasis>(location.ptr_data[0]);
00208 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;SM.isInSystemHeader(Loc);
00209 }
00210 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00211"/><link linkend="__c_x_source_location_8cpp_1a6b1862b5fb8107dc47dcf8c96c19376a">00211</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a6b1862b5fb8107dc47dcf8c96c19376a">clang_Location_isFromMainFile</link>(CXSourceLocation&#32;location)&#32;{
00212 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceLocation&#32;Loc&#32;=
00213 &#32;&#32;&#32;&#32;SourceLocation::getFromRawEncoding(location.int_data);
00214 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Loc.isInvalid())
00215 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00216 
00217 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceManager&#32;&amp;SM&#32;=
00218 &#32;&#32;&#32;&#32;*<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>SourceManager*<emphasis role="keyword">&gt;</emphasis>(location.ptr_data[0]);
00219 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;SM.isWrittenInMainFile(Loc);
00220 }
00221 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00222"/><link linkend="__c_x_source_location_8cpp_1ab2dea99bd78deea3e50564414208687b">00222</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1ab2dea99bd78deea3e50564414208687b">clang_getExpansionLocation</link>(CXSourceLocation&#32;location,
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXFile&#32;*file,
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column,
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*offset)&#32;{
00227 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isASTUnitSourceLocation(location))&#32;{
00228 &#32;&#32;&#32;&#32;<link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a62abf6e0788b0c0656a3054fd7c3b82d">CXLoadedDiagnostic::decodeLocation</link>(location,&#32;file,&#32;line,&#32;column,&#32;offset);
00229 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00230 &#32;&#32;}
00231 
00232 &#32;&#32;SourceLocation&#32;Loc&#32;=&#32;SourceLocation::getFromRawEncoding(location.int_data);
00233 
00234 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!location.ptr_data[0]&#32;||&#32;Loc.isInvalid())&#32;{
00235 &#32;&#32;&#32;&#32;createNullLocation(file,&#32;line,&#32;column,&#32;offset);
00236 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00237 &#32;&#32;}
00238 
00239 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceManager&#32;&amp;SM&#32;=
00240 &#32;&#32;*<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>SourceManager*<emphasis role="keyword">&gt;</emphasis>(location.ptr_data[0]);
00241 &#32;&#32;SourceLocation&#32;ExpansionLoc&#32;=&#32;SM.getExpansionLoc(Loc);
00242 &#32;&#32;
00243 &#32;&#32;<emphasis role="comment">//&#32;Check&#32;that&#32;the&#32;FileID&#32;is&#32;invalid&#32;on&#32;the&#32;expansion&#32;location.</emphasis>
00244 &#32;&#32;<emphasis role="comment">//&#32;This&#32;can&#32;manifest&#32;in&#32;invalid&#32;code.</emphasis>
00245 &#32;&#32;FileID&#32;fileID&#32;=&#32;SM.getFileID(ExpansionLoc);
00246 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Invalid&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00247 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SrcMgr::SLocEntry&#32;&amp;sloc&#32;=&#32;SM.getSLocEntry(fileID,&#32;&amp;Invalid);
00248 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Invalid&#32;||&#32;!sloc.isFile())&#32;{
00249 &#32;&#32;&#32;&#32;createNullLocation(file,&#32;line,&#32;column,&#32;offset);
00250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00251 &#32;&#32;}
00252 &#32;&#32;
00253 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file)
00254 &#32;&#32;&#32;&#32;*file&#32;=&#32;<emphasis role="keyword">const_cast&lt;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(SM.getFileEntryForSLocEntry(sloc));
00255 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line)
00256 &#32;&#32;&#32;&#32;*line&#32;=&#32;SM.getExpansionLineNumber(ExpansionLoc);
00257 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(column)
00258 &#32;&#32;&#32;&#32;*column&#32;=&#32;SM.getExpansionColumnNumber(ExpansionLoc);
00259 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset)
00260 &#32;&#32;&#32;&#32;*offset&#32;=&#32;SM.getDecomposedLoc(ExpansionLoc).second;
00261 }
00262 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00263"/><link linkend="__c_x_source_location_8cpp_1af4172cd89a27638f7aa41a079fa10ff3">00263</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1af4172cd89a27638f7aa41a079fa10ff3">clang_getPresumedLocation</link>(CXSourceLocation&#32;location,
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXString&#32;*filename,
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column)&#32;{
00267 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isASTUnitSourceLocation(location))&#32;{
00268 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Other&#32;SourceLocation&#32;implementations&#32;do&#32;not&#32;support&#32;presumed&#32;locations</emphasis>
00269 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;at&#32;this&#32;time.</emphasis>
00270 &#32;&#32;&#32;&#32;createNullLocation(filename,&#32;line,&#32;column);
00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00272 &#32;&#32;}
00273 
00274 &#32;&#32;SourceLocation&#32;Loc&#32;=&#32;SourceLocation::getFromRawEncoding(location.int_data);
00275 
00276 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!location.ptr_data[0]&#32;||&#32;Loc.isInvalid())&#32;{
00277 &#32;&#32;&#32;&#32;createNullLocation(filename,&#32;line,&#32;column);
00278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00279 &#32;&#32;}
00280 
00281 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceManager&#32;&amp;SM&#32;=
00282 &#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>SourceManager&#32;*<emphasis role="keyword">&gt;</emphasis>(location.ptr_data[0]);
00283 &#32;&#32;PresumedLoc&#32;PreLoc&#32;=&#32;SM.getPresumedLoc(Loc);
00284 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PreLoc.isInvalid())&#32;{
00285 &#32;&#32;&#32;&#32;createNullLocation(filename,&#32;line,&#32;column);
00286 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00287 &#32;&#32;}
00288 
00289 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(filename)&#32;*filename&#32;=&#32;<link linkend="_namespaceclang_1_1cxstring_1abc91e0841937d19cfc9e1801ac00b3c4">cxstring::createRef</link>(PreLoc.getFilename());
00290 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line)&#32;*line&#32;=&#32;PreLoc.getLine();
00291 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(column)&#32;*column&#32;=&#32;PreLoc.getColumn();
00292 }
00293 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00294"/><link linkend="__c_x_source_location_8cpp_1aa52a3cfa6fa63ad1fd738c51d228dcf1">00294</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1aa52a3cfa6fa63ad1fd738c51d228dcf1">clang_getInstantiationLocation</link>(CXSourceLocation&#32;location,
00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXFile&#32;*file,
00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column,
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*offset)&#32;{
00299 &#32;&#32;<emphasis role="comment">//&#32;Redirect&#32;to&#32;new&#32;API.</emphasis>
00300 &#32;&#32;<link linkend="__c_x_source_location_8cpp_1ab2dea99bd78deea3e50564414208687b">clang_getExpansionLocation</link>(location,&#32;file,&#32;line,&#32;column,&#32;offset);
00301 }
00302 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00303"/><link linkend="__c_x_source_location_8cpp_1ae2d805527135aac587ca5c8017bde0ef">00303</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1ae2d805527135aac587ca5c8017bde0ef">clang_getSpellingLocation</link>(CXSourceLocation&#32;location,
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXFile&#32;*file,
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column,
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*offset)&#32;{
00308 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isASTUnitSourceLocation(location))&#32;{
00309 &#32;&#32;&#32;&#32;<link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a62abf6e0788b0c0656a3054fd7c3b82d">CXLoadedDiagnostic::decodeLocation</link>(location,&#32;file,&#32;line,
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;column,&#32;offset);
00311 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00312 &#32;&#32;}
00313 &#32;&#32;
00314 &#32;&#32;SourceLocation&#32;Loc&#32;=&#32;SourceLocation::getFromRawEncoding(location.int_data);
00315 &#32;&#32;
00316 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!location.ptr_data[0]&#32;||&#32;Loc.isInvalid())
00317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;createNullLocation(file,&#32;line,&#32;column,&#32;offset);
00318 &#32;&#32;
00319 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceManager&#32;&amp;SM&#32;=
00320 &#32;&#32;*<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>SourceManager*<emphasis role="keyword">&gt;</emphasis>(location.ptr_data[0]);
00321 &#32;&#32;<emphasis role="comment">//&#32;FIXME:&#32;This&#32;should&#32;call&#32;SourceManager::getSpellingLoc().</emphasis>
00322 &#32;&#32;SourceLocation&#32;SpellLoc&#32;=&#32;SM.getFileLoc(Loc);
00323 &#32;&#32;std::pair&lt;FileID,&#32;unsigned&gt;&#32;LocInfo&#32;=&#32;SM.getDecomposedLoc(SpellLoc);
00324 &#32;&#32;FileID&#32;FID&#32;=&#32;LocInfo.first;
00325 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;FileOffset&#32;=&#32;LocInfo.second;
00326 &#32;&#32;
00327 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FID.isInvalid())
00328 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;createNullLocation(file,&#32;line,&#32;column,&#32;offset);
00329 &#32;&#32;
00330 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file)
00331 &#32;&#32;&#32;&#32;*file&#32;=&#32;<emphasis role="keyword">const_cast&lt;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(SM.getFileEntryForID(FID));
00332 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line)
00333 &#32;&#32;&#32;&#32;*line&#32;=&#32;SM.getLineNumber(FID,&#32;FileOffset);
00334 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(column)
00335 &#32;&#32;&#32;&#32;*column&#32;=&#32;SM.getColumnNumber(FID,&#32;FileOffset);
00336 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset)
00337 &#32;&#32;&#32;&#32;*offset&#32;=&#32;FileOffset;
00338 }
00339 
<anchor xml:id="__c_x_source_location_8cpp_source_1l00340"/><link linkend="__c_x_source_location_8cpp_1a35b4c0e781e65d746666e3d263b000e8">00340</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__c_x_source_location_8cpp_1a35b4c0e781e65d746666e3d263b000e8">clang_getFileLocation</link>(CXSourceLocation&#32;location,
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXFile&#32;*file,
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*line,
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*column,
00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;*offset)&#32;{
00345 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isASTUnitSourceLocation(location))&#32;{
00346 &#32;&#32;&#32;&#32;<link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a62abf6e0788b0c0656a3054fd7c3b82d">CXLoadedDiagnostic::decodeLocation</link>(location,&#32;file,&#32;line,
00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;column,&#32;offset);
00348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00349 &#32;&#32;}
00350 
00351 &#32;&#32;SourceLocation&#32;Loc&#32;=&#32;SourceLocation::getFromRawEncoding(location.int_data);
00352 
00353 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!location.ptr_data[0]&#32;||&#32;Loc.isInvalid())
00354 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;createNullLocation(file,&#32;line,&#32;column,&#32;offset);
00355 
00356 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SourceManager&#32;&amp;SM&#32;=
00357 &#32;&#32;*<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis>SourceManager*<emphasis role="keyword">&gt;</emphasis>(location.ptr_data[0]);
00358 &#32;&#32;SourceLocation&#32;FileLoc&#32;=&#32;SM.getFileLoc(Loc);
00359 &#32;&#32;std::pair&lt;FileID,&#32;unsigned&gt;&#32;LocInfo&#32;=&#32;SM.getDecomposedLoc(FileLoc);
00360 &#32;&#32;FileID&#32;FID&#32;=&#32;LocInfo.first;
00361 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;FileOffset&#32;=&#32;LocInfo.second;
00362 
00363 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(FID.isInvalid())
00364 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;createNullLocation(file,&#32;line,&#32;column,&#32;offset);
00365 
00366 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file)
00367 &#32;&#32;&#32;&#32;*file&#32;=&#32;<emphasis role="keyword">const_cast&lt;</emphasis>FileEntry&#32;*<emphasis role="keyword">&gt;</emphasis>(SM.getFileEntryForID(FID));
00368 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(line)
00369 &#32;&#32;&#32;&#32;*line&#32;=&#32;SM.getLineNumber(FID,&#32;FileOffset);
00370 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(column)
00371 &#32;&#32;&#32;&#32;*column&#32;=&#32;SM.getColumnNumber(FID,&#32;FileOffset);
00372 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(offset)
00373 &#32;&#32;&#32;&#32;*offset&#32;=&#32;FileOffset;
00374 }
</programlisting></section>
