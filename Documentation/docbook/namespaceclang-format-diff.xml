<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespaceclang-format-diff" xml:lang="en-US">
<title>clang-format-diff Namespace Reference</title>
<indexterm><primary>clang-format-diff</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_namespaceclang-format-diff_1a553c862e1db275c4ea38057eb3283b46">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespaceclang-format-diff_1a553c862e1db275c4ea38057eb3283b46"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>clang-format-diff</secondary></indexterm>
<indexterm><primary>clang-format-diff</primary><secondary>main</secondary></indexterm>
<para><computeroutput>def clang-format-diff.main (void )</computeroutput></para><para>
Definition at line <link linkend="_clang-format-diff_8py_source_1l00038">38</link> of file <link linkend="_clang-format-diff_8py_source">clang-format-diff.py</link>.</para>
<programlisting>00038 <emphasis role="keyword">def&#32;</emphasis><link linkend="_namespaceclang-format-diff_1a553c862e1db275c4ea38057eb3283b46">main</link>():
00039 &#32;&#32;parser&#32;=&#32;argparse.ArgumentParser(description=__doc__,
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;formatter_class=
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;argparse.RawDescriptionHelpFormatter)
00042 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-i&apos;</emphasis>,&#32;action=<emphasis role="stringliteral">&apos;store_true&apos;</emphasis>,&#32;default=<emphasis role="keyword">False</emphasis>,
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;apply&#32;edits&#32;to&#32;files&#32;instead&#32;of&#32;displaying&#32;a&#32;diff&apos;</emphasis>)
00044 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-p&apos;</emphasis>,&#32;metavar=<emphasis role="stringliteral">&apos;NUM&apos;</emphasis>,&#32;default=0,
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;strip&#32;the&#32;smallest&#32;prefix&#32;containing&#32;P&#32;slashes&apos;</emphasis>)
00046 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-regex&apos;</emphasis>,&#32;metavar=<emphasis role="stringliteral">&apos;PATTERN&apos;</emphasis>,&#32;default=<emphasis role="keywordtype">None</emphasis>,
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;custom&#32;pattern&#32;selecting&#32;file&#32;paths&#32;to&#32;reformat&#32;&apos;</emphasis>
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;(case&#32;sensitive,&#32;overrides&#32;-iregex)&apos;</emphasis>)
00049 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-iregex&apos;</emphasis>,&#32;metavar=<emphasis role="stringliteral">&apos;PATTERN&apos;</emphasis>,&#32;default=
00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">r&apos;.*\.(cpp|cc|c\+\+|cxx|c|cl|h|hh|hpp|hxx|m|mm|inc|js|ts&apos;</emphasis>
00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">r&apos;|proto|protodevel|java|cs|json)&apos;</emphasis>,
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;custom&#32;pattern&#32;selecting&#32;file&#32;paths&#32;to&#32;reformat&#32;&apos;</emphasis>
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;(case&#32;insensitive,&#32;overridden&#32;by&#32;-regex)&apos;</emphasis>)
00054 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-sort-includes&apos;</emphasis>,&#32;action=<emphasis role="stringliteral">&apos;store_true&apos;</emphasis>,&#32;default=<emphasis role="keyword">False</emphasis>,
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;let&#32;clang-format&#32;sort&#32;include&#32;blocks&apos;</emphasis>)
00056 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-v&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--verbose&apos;</emphasis>,&#32;action=<emphasis role="stringliteral">&apos;store_true&apos;</emphasis>,
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;be&#32;more&#32;verbose,&#32;ineffective&#32;without&#32;-i&apos;</emphasis>)
00058 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-style&apos;</emphasis>,
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;formatting&#32;style&#32;to&#32;apply&#32;(LLVM,&#32;GNU,&#32;Google,&#32;Chromium,&#32;&apos;</emphasis>
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;Microsoft,&#32;Mozilla,&#32;WebKit)&apos;</emphasis>)
00061 &#32;&#32;parser.add_argument(<emphasis role="stringliteral">&apos;-binary&apos;</emphasis>,&#32;default=<emphasis role="stringliteral">&apos;clang-format&apos;</emphasis>,
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;help=<emphasis role="stringliteral">&apos;location&#32;of&#32;binary&#32;to&#32;use&#32;for&#32;clang-format&apos;</emphasis>)
00063 &#32;&#32;args&#32;=&#32;parser.parse_args()
00064 
00065 &#32;&#32;<emphasis role="comment">#&#32;Extract&#32;changed&#32;lines&#32;for&#32;each&#32;file.</emphasis>
00066 &#32;&#32;filename&#32;=&#32;<emphasis role="keywordtype">None</emphasis>
00067 &#32;&#32;lines_by_file&#32;=&#32;{}
00068 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;line&#32;<emphasis role="keywordflow">in</emphasis>&#32;sys.stdin:
00069 &#32;&#32;&#32;&#32;match&#32;=&#32;re.search(<emphasis role="stringliteral">r&apos;^\+\+\+\&#32;(.*?/){%s}(\S*)&apos;</emphasis>&#32;%&#32;args.p,&#32;line)
00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;match:
00071 &#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;match.group(2)
00072 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;filename&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
00073 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
00074 
00075 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;args.regex&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
00076 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;re.match(<emphasis role="stringliteral">&apos;^%s$&apos;</emphasis>&#32;%&#32;args.regex,&#32;filename):
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
00079 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;re.match(<emphasis role="stringliteral">&apos;^%s$&apos;</emphasis>&#32;%&#32;args.iregex,&#32;filename,&#32;re.IGNORECASE):
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
00081 
00082 &#32;&#32;&#32;&#32;match&#32;=&#32;re.search(<emphasis role="stringliteral">r&apos;^@@.*\+(\d+)(,(\d+))?&apos;</emphasis>,&#32;line)
00083 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;match:
00084 &#32;&#32;&#32;&#32;&#32;&#32;start_line&#32;=&#32;int(match.group(1))
00085 &#32;&#32;&#32;&#32;&#32;&#32;line_count&#32;=&#32;1
00086 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;match.group(3):
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;line_count&#32;=&#32;int(match.group(3))
00088 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;line_count&#32;==&#32;0:
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>
00090 &#32;&#32;&#32;&#32;&#32;&#32;end_line&#32;=&#32;start_line&#32;+&#32;line_count&#32;-&#32;1
00091 &#32;&#32;&#32;&#32;&#32;&#32;lines_by_file.setdefault(filename,&#32;[]).extend(
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;-lines&apos;</emphasis>,&#32;str(start_line)&#32;+&#32;<emphasis role="stringliteral">&apos;:&apos;</emphasis>&#32;+&#32;str(end_line)])
00093 
00094 &#32;&#32;<emphasis role="comment">#&#32;Reformat&#32;files&#32;containing&#32;changes&#32;in&#32;place.</emphasis>
00095 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;filename,&#32;lines&#32;<emphasis role="keywordflow">in</emphasis>&#32;lines_by_file.items():
00096 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;args.i&#32;<emphasis role="keywordflow">and</emphasis>&#32;args.verbose:
00097 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__function_call_decl_8cpp_1a388f572c62279f839ee138a9afbdeeb5">print</link>(<emphasis role="stringliteral">&apos;Formatting&#32;{}&apos;</emphasis>.format(filename))
00098 &#32;&#32;&#32;&#32;command&#32;=&#32;[args.binary,&#32;filename]
00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;args.i:
00100 &#32;&#32;&#32;&#32;&#32;&#32;command.append(<emphasis role="stringliteral">&apos;-i&apos;</emphasis>)
00101 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;args.sort_includes:
00102 &#32;&#32;&#32;&#32;&#32;&#32;command.append(<emphasis role="stringliteral">&apos;-sort-includes&apos;</emphasis>)
00103 &#32;&#32;&#32;&#32;command.extend(lines)
00104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;args.style:
00105 &#32;&#32;&#32;&#32;&#32;&#32;command.extend([<emphasis role="stringliteral">&apos;-style&apos;</emphasis>,&#32;args.style])
00106 
00107 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">try</emphasis>:
00108 &#32;&#32;&#32;&#32;&#32;&#32;p&#32;=&#32;subprocess.Popen(command,
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stdout=subprocess.PIPE,
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stderr=<emphasis role="keywordtype">None</emphasis>,
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stdin=subprocess.PIPE,
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;universal_newlines=<emphasis role="keyword">True</emphasis>)
00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">except</emphasis>&#32;OSError&#32;<emphasis role="keyword">as</emphasis>&#32;e:
00114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;Give&#32;the&#32;user&#32;more&#32;context&#32;when&#32;clang-format&#32;isn&apos;t</emphasis>
00115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;found/isn&apos;t&#32;executable,&#32;etc.</emphasis>
00116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">raise</emphasis>&#32;RuntimeError(
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;Failed&#32;to&#32;run&#32;&quot;%s&quot;&#32;-&#32;%s&quot;&apos;</emphasis>&#32;%&#32;(<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>.join(command),&#32;e.strerror))
00118 
00119 &#32;&#32;&#32;&#32;stdout,&#32;stderr&#32;=&#32;p.communicate()
00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;p.returncode&#32;!=&#32;0:
00121 &#32;&#32;&#32;&#32;&#32;&#32;sys.exit(p.returncode)
00122 
00123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;args.i:
00124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename)&#32;<emphasis role="keyword">as</emphasis>&#32;f:
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;code&#32;=&#32;f.readlines()
00126 &#32;&#32;&#32;&#32;&#32;&#32;formatted_code&#32;=&#32;StringIO(stdout).readlines()
00127 &#32;&#32;&#32;&#32;&#32;&#32;diff&#32;=&#32;difflib.unified_diff(code,&#32;formatted_code,
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename,&#32;filename,
00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;(before&#32;formatting)&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;(after&#32;formatting)&apos;</emphasis>)
00130 &#32;&#32;&#32;&#32;&#32;&#32;diff_string&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>.join(diff)
00131 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;len(diff_string)&#32;&gt;&#32;0:
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sys.stdout.write(diff_string)
00133 
</programlisting><para>
References <link linkend="_startfile_8py_source_1l00206">startfile.open()</link>, and <link linkend="__function_call_decl_8cpp_source_1l00003">print()</link>.</para>
</section>
</section>
</section>
