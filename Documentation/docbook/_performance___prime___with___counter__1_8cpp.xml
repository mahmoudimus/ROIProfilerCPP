<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__performance___prime___with___counter__1_8cpp" xml:lang="en-US">
<title>Tests/Prime Tests Cases/Performance_Prime_With_Counter_1.cpp File Reference</title>
<indexterm><primary>Tests/Prime Tests Cases/Performance_Prime_With_Counter_1.cpp</primary></indexterm>
<programlisting>#include &lt;chrono&gt;
#include &lt;ctime&gt;
#include &lt;iostream&gt;
#include &lt;bitset&gt;
#include &lt;map&gt;
#include &lt;cstring&gt;
#include &lt;cmath&gt;
#include &lt;fstream&gt;
#include &quot;../lib/DataStorage.cpp&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_bit_array">BitArray</link></para>
</listitem>
            <listitem><para>class <link linkend="_classprime__sieve">prime_sieve</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_data_storage">DataStorage</link> <link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link> (&quot;Runtime,Scope,CustomCompoundStmt i000002,WhileStmt 2876156&quot;)</para>
</listitem>
            <listitem><para>int <link linkend="__performance___prime___with___counter__1_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7"/>    <section>
    <title>dataStorage()</title>
<indexterm><primary>dataStorage</primary><secondary>Performance_Prime_With_Counter_1.cpp</secondary></indexterm>
<indexterm><primary>Performance_Prime_With_Counter_1.cpp</primary><secondary>dataStorage</secondary></indexterm>
<para><computeroutput><link linkend="_class_data_storage">DataStorage</link> dataStorage (&quot; Runtime, Scope , CustomCompoundStmt i000002, WhileStmt 2876156&quot; )</computeroutput></para><para>
Referenced by <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00174">main()</link>.</para>
    </section><anchor xml:id="__performance___prime___with___counter__1_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>Performance_Prime_With_Counter_1.cpp</secondary></indexterm>
<indexterm><primary>Performance_Prime_With_Counter_1.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>
Definition at line <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00174">174</link> of file <link linkend="__performance___prime___with___counter__1_8cpp_source">Performance_Prime_With_Counter_1.cpp</link>.</para>
<programlisting>00175 {
00176 <link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(0);
00177 &#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(2);
00178 <emphasis role="keyword">auto</emphasis>&#32;passes&#32;=&#32;0;
00179 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;tStart&#32;=&#32;steady_clock::now();
00180 
00181 &#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(2);
00182 <link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(3);
00183 <emphasis role="keywordflow">while</emphasis>&#32;(<emphasis role="keyword">true</emphasis>)
00184 &#32;&#32;&#32;&#32;{
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classprime__sieve">prime_sieve</link>&#32;sieve(1000000L);
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sieve.runSieve();
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;passes++;
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(duration_cast&lt;seconds&gt;(steady_clock::now()&#32;-&#32;tStart).count()&#32;&gt;=&#32;5)
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sieve.printResults(<emphasis role="keyword">false</emphasis>,&#32;duration_cast&lt;microseconds&gt;(steady_clock::now()&#32;-&#32;tStart).count()&#32;/&#32;1000000.0,&#32;passes);
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00193 &#32;&#32;&#32;&#32;}
00194 <link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(3);
00195 
00196 &#32;&#32;&#32;&#32;<link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(0);
00197 <link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage</link>.<link linkend="_class_data_storage_1a94ef68ba0c97efa1c78b6f6909eb133c">print</link>();<emphasis role="keywordflow">return</emphasis>&#32;0;
00198 }
</programlisting><para>
References <link linkend="__performance___prime___with___counter__1_8cpp_1a360f9e2b15333dec5bf817c962387bb7">dataStorage()</link>, <link linkend="__data_storage_8cpp_source_1l00046">DataStorage::endEvent()</link>, <link linkend="__data_storage_8cpp_source_1l00052">DataStorage::print()</link>, <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00114">prime_sieve::printResults()</link>, <link linkend="__performance___prime___with___counter__1_8cpp_source_1l00093">prime_sieve::runSieve()</link>, and <link linkend="__data_storage_8cpp_source_1l00028">DataStorage::startEvent()</link>.</para>
</section>
</section>
</section>
