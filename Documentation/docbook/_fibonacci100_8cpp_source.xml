<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__fibonacci100_8cpp_source" xml:lang="en-US">
<title>Fibonacci100.cpp</title>
<indexterm><primary>Tests/Examples/Fibonacci100.cpp</primary></indexterm>
<programlisting>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
00002 
<anchor xml:id="__fibonacci100_8cpp_source_1l00003"/><link linkend="__fibonacci100_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">00003</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__fibonacci100_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">main</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
00004 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;n,&#32;t1&#32;=&#32;0,&#32;t2&#32;=&#32;1,&#32;nextTerm&#32;=&#32;0;
00005 &#32;&#32;&#32;&#32;n&#32;=&#32;100;
00006 
00007 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Fibonacci&#32;Series:&#32;&quot;</emphasis>;
00008 
00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;n;&#32;++i)&#32;{
00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;1)&#32;{
00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;t1;
00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;2)&#32;{
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;t2;
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTerm&#32;=&#32;t1&#32;+&#32;t2;
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;t2;
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t2&#32;=&#32;nextTerm;
00021 
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;nextTerm&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00023 &#32;&#32;&#32;&#32;}
00024 
00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00026 }
</programlisting></section>
