<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test_performance_8cpp_source" xml:lang="en-US">
<title>testPerformance.cpp</title>
<indexterm><primary>Tests/testPerformance.cpp</primary></indexterm>
<programlisting>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
00002 <emphasis role="preprocessor">#include&#32;&quot;../lib/DataStorage.cpp&quot;</emphasis>
<anchor xml:id="_test_performance_8cpp_source_1l00003"/><link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">00003</link> <link linkend="_class_data_storage">DataStorage</link>&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>;
00004 
<anchor xml:id="_test_performance_8cpp_source_1l00005"/><link linkend="_test_performance_8cpp_1a2f2fa66f25afb8fe68abadc72b18ad8e">00005</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_test_performance_8cpp_1a2f2fa66f25afb8fe68abadc72b18ad8e">fibonacci</link>()&#32;{
00006 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;DeclStmt&#32;2082482&quot;</emphasis>);
00007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;n,&#32;t1&#32;=&#32;0,&#32;t2&#32;=&#32;1,&#32;nextTerm&#32;=&#32;0;
00008 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;DeclStmt&#32;2082482&quot;</emphasis>);
00009 
00010 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;BinaryOperator&#32;2082496&quot;</emphasis>);
00011 &#32;&#32;&#32;&#32;n&#32;=&#32;50;
00012 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;BinaryOperator&#32;2082496&quot;</emphasis>);
00013 
00014 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;CXXOperatorCallExpr&#32;2083688&quot;</emphasis>);
00015 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Fibonacci&#32;Series:&#32;&quot;</emphasis>;
00016 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;CXXOperatorCallExpr&#32;2083688&quot;</emphasis>);
00017 
00018 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;ForStmt&#32;2086448&quot;</emphasis>);
00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;n;&#32;++i)&#32;{
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;1)&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;t1&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;2)&#32;{
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;t2&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">continue</emphasis>;
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nextTerm&#32;=&#32;t1&#32;+&#32;t2;
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t1&#32;=&#32;t2;
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t2&#32;=&#32;nextTerm;
00031 
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;nextTerm&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>;
00033 &#32;&#32;&#32;&#32;}
00034 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;ForStmt&#32;2086448&quot;</emphasis>);
00035 }
00036 
<anchor xml:id="_test_performance_8cpp_source_1l00037"/><link linkend="_test_performance_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">00037</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_test_performance_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">main</link>(<emphasis role="keywordtype">void</emphasis>)&#32;{
00038 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;Runtime&quot;</emphasis>);
00039 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;10;
00040 &#32;&#32;&#32;&#32;i++;
00041 &#32;&#32;&#32;&#32;i++;
00042 &#32;&#32;&#32;&#32;i++;
00043 &#32;&#32;&#32;&#32;i++;
00044 &#32;&#32;&#32;&#32;i++;
00045 
00046 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a2f2fa66f25afb8fe68abadc72b18ad8e">fibonacci</link>();
00047 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(<emphasis role="stringliteral">&quot;Runtime&quot;</emphasis>);
00048 &#32;&#32;&#32;&#32;<link linkend="_test_performance_8cpp_1a9c8634583aaa8f3158a2ab5059741a6a">dataStorage</link>.<link linkend="_class_data_storage_1a94ef68ba0c97efa1c78b6f6909eb133c">print</link>();
00049 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
00050 
00051 }
</programlisting></section>
