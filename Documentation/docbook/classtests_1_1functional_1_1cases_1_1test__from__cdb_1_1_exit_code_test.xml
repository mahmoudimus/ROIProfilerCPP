<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test" xml:lang="en-US">
<title>tests.functional.cases.test_from_cdb.ExitCodeTest Class Reference</title>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary></indexterm>
<para>Inheritance diagram for tests.functional.cases.test_from_cdb.ExitCodeTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a2dff7a3aa7d954f1132890e872acbef3">test_regular_does_not_set_exit_code</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1af4dd1ad28d7cbdf469f5d9362c2bbc16">test_clear_does_not_set_exit_code</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a6a8ea5edfb846af5043ee3e35a6f797a">test_regular_sets_exit_code_if_asked</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a1633256d009b14db67ee1e8ea861bcb7">test_clear_does_not_set_exit_code_if_asked</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a2edd3f5fc49b81ea255453c270548e7c">test_regular_sets_exit_code_if_asked_from_plist</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a045e3cc0a24b2311721f07469df045ff">test_clear_does_not_set_exit_code_if_asked_from_plist</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00056">56</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1af4dd1ad28d7cbdf469f5d9362c2bbc16"/>    <section>
    <title>test_clear_does_not_set_exit_code()</title>
<indexterm><primary>test_clear_does_not_set_exit_code</primary><secondary>tests.functional.cases.test_from_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary><secondary>test_clear_does_not_set_exit_code</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.ExitCodeTest.test_clear_does_not_set_exit_code ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00063">63</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00063 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_clear_does_not_set_exit_code(self):
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;clean&apos;</emphasis>,&#32;tmpdir)
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;__&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[])
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(exit_code)
00068 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a1633256d009b14db67ee1e8ea861bcb7"/>    <section>
    <title>test_clear_does_not_set_exit_code_if_asked()</title>
<indexterm><primary>test_clear_does_not_set_exit_code_if_asked</primary><secondary>tests.functional.cases.test_from_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary><secondary>test_clear_does_not_set_exit_code_if_asked</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.ExitCodeTest.test_clear_does_not_set_exit_code_if_asked ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00075">75</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00075 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_clear_does_not_set_exit_code_if_asked(self):
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;clean&apos;</emphasis>,&#32;tmpdir)
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;__&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--status-bugs&apos;</emphasis>])
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(exit_code)
00080 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a045e3cc0a24b2311721f07469df045ff"/>    <section>
    <title>test_clear_does_not_set_exit_code_if_asked_from_plist()</title>
<indexterm><primary>test_clear_does_not_set_exit_code_if_asked_from_plist</primary><secondary>tests.functional.cases.test_from_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary><secondary>test_clear_does_not_set_exit_code_if_asked_from_plist</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.ExitCodeTest.test_clear_does_not_set_exit_code_if_asked_from_plist ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00088">88</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00088 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_clear_does_not_set_exit_code_if_asked_from_plist(self):
00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;clean&apos;</emphasis>,&#32;tmpdir)
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;__&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--status-bugs&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>])
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(exit_code)
00094 
00095 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a2dff7a3aa7d954f1132890e872acbef3"/>    <section>
    <title>test_regular_does_not_set_exit_code()</title>
<indexterm><primary>test_regular_does_not_set_exit_code</primary><secondary>tests.functional.cases.test_from_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary><secondary>test_regular_does_not_set_exit_code</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.ExitCodeTest.test_regular_does_not_set_exit_code ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00057">57</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_regular_does_not_set_exit_code(self):
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;__&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[])
00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(exit_code)
00062 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a6a8ea5edfb846af5043ee3e35a6f797a"/>    <section>
    <title>test_regular_sets_exit_code_if_asked()</title>
<indexterm><primary>test_regular_sets_exit_code_if_asked</primary><secondary>tests.functional.cases.test_from_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary><secondary>test_regular_sets_exit_code_if_asked</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.ExitCodeTest.test_regular_sets_exit_code_if_asked ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00069">69</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_regular_sets_exit_code_if_asked(self):
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;__&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--status-bugs&apos;</emphasis>])
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(exit_code)
00074 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__from__cdb_1_1_exit_code_test_1a2edd3f5fc49b81ea255453c270548e7c"/>    <section>
    <title>test_regular_sets_exit_code_if_asked_from_plist()</title>
<indexterm><primary>test_regular_sets_exit_code_if_asked_from_plist</primary><secondary>tests.functional.cases.test_from_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_from_cdb.ExitCodeTest</primary><secondary>test_regular_sets_exit_code_if_asked_from_plist</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_from_cdb.ExitCodeTest.test_regular_sets_exit_code_if_asked_from_plist ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__from__cdb_8py_source_1l00081">81</link> of file <link linkend="_test__from__cdb_8py_source">test_from_cdb.py</link>.</para>
<programlisting>00081 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_regular_sets_exit_code_if_asked_from_plist(self):
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a77349878c4b5639d79669f2526f3c78f">prepare_cdb</link>(<emphasis role="stringliteral">&apos;regular&apos;</emphasis>,&#32;tmpdir)
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit_code,&#32;__&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1_1test__from__cdb_1a8a6bd5e616e5a098453d7b1c39dc8d95">run_analyzer</link>(
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmpdir,&#32;cdb,&#32;[<emphasis role="stringliteral">&apos;--status-bugs&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--plist&apos;</emphasis>])
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(exit_code)
00087 
</programlisting><para>
References <link linkend="_test__from__cdb_8py_source_1l00015">tests.functional.cases.test_from_cdb.prepare_cdb()</link>, <link linkend="_test__from__cdb_8py_source_1l00030">tests.functional.cases.test_from_cdb.run_analyzer()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/<link linkend="_test__from__cdb_8py">test_from_cdb.py</link></section>
</section>
