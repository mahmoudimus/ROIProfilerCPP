<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test" xml:lang="en-US">
<title>tests.unit.test_analyze.FilteringFlagsTest Class Reference</title>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary></indexterm>
<para>Inheritance diagram for tests.unit.test_analyze.FilteringFlagsTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a51700863710d60ffb5f1618dc15bc8e2">test_language_captured</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1af37807c49fcc66b23f6c31a86068a366">test_arch</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1aa8efdedbf9b3abfacb1c37516f35ba82">assertFlagsChanged</link> (self, expected, flags)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a940f4b309fa9c71aa74fb4b11e268cfa">assertFlagsUnchanged</link> (self, flags)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a921f78fe09e73e4563bca61b961d397c">assertFlagsFiltered</link> (self, flags)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1ad3ef9c1de8648c35bd6c779bc4e49caf">test_optimalizations_pass</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a6d99c9135201bcd40482b4b3c9cbedd1">test_include_pass</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1adb9ff2ec93d5db92b7a3255fd7eeebbf">test_define_pass</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a6984ce4e5108ab8f0eb69895bd44b4e3">test_output_filtered</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1aab6b7021c5fd3c303bb89ade7291061d">test_some_warning_filtered</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1acc16850d684d7670684ce2caaf9239b8">test_compile_only_flags_pass</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1abe37295580fa660f8f7fdce2de59dc42">test_compile_and_link_flags_pass</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a4366344ed838bb861ee31163f056806e">test_some_flags_filtered</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__analyze_8py_source_1l00028">28</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1aa8efdedbf9b3abfacb1c37516f35ba82"/>    <section>
    <title>assertFlagsChanged()</title>
<indexterm><primary>assertFlagsChanged</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>assertFlagsChanged</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.assertFlagsChanged ( self,  expected,  flags)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00051">51</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00051 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>assertFlagsChanged(self,&#32;expected,&#32;flags):
00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd&#32;=&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;source.c&apos;</emphasis>]&#32;+&#32;flags
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opts&#32;=&#32;sut.classify_parameters(cmd)
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(expected,&#32;opts[<emphasis role="stringliteral">&apos;flags&apos;</emphasis>])
00055 
</programlisting><para>
Referenced by <link linkend="_test__analyze_8py_source_1l00059">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsFiltered()</link>, and <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a921f78fe09e73e4563bca61b961d397c"/>    <section>
    <title>assertFlagsFiltered()</title>
<indexterm><primary>assertFlagsFiltered</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>assertFlagsFiltered</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.assertFlagsFiltered ( self,  flags)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00059">59</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00059 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>assertFlagsFiltered(self,&#32;flags):
00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsChanged([],&#32;flags)
00061 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00051">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsChanged()</link>.</para>
<para>
Referenced by <link linkend="_test__analyze_8py_source_1l00086">tests.unit.test_analyze.FilteringFlagsTest.test_output_filtered()</link>, <link linkend="_test__analyze_8py_source_1l00110">tests.unit.test_analyze.FilteringFlagsTest.test_some_flags_filtered()</link>, and <link linkend="_test__analyze_8py_source_1l00089">tests.unit.test_analyze.FilteringFlagsTest.test_some_warning_filtered()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a940f4b309fa9c71aa74fb4b11e268cfa"/>    <section>
    <title>assertFlagsUnchanged()</title>
<indexterm><primary>assertFlagsUnchanged</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>assertFlagsUnchanged</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged ( self,  flags)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00056">56</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00056 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>assertFlagsUnchanged(self,&#32;flags):
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsChanged(flags,&#32;flags)
00058 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00051">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsChanged()</link>.</para>
<para>
Referenced by <link linkend="_test__analyze_8py_source_1l00103">tests.unit.test_analyze.FilteringFlagsTest.test_compile_and_link_flags_pass()</link>, <link linkend="_test__analyze_8py_source_1l00095">tests.unit.test_analyze.FilteringFlagsTest.test_compile_only_flags_pass()</link>, <link linkend="_test__analyze_8py_source_1l00080">tests.unit.test_analyze.FilteringFlagsTest.test_define_pass()</link>, <link linkend="_test__analyze_8py_source_1l00069">tests.unit.test_analyze.FilteringFlagsTest.test_include_pass()</link>, <link linkend="_test__analyze_8py_source_1l00062">tests.unit.test_analyze.FilteringFlagsTest.test_optimalizations_pass()</link>, and <link linkend="_test__analyze_8py_source_1l00089">tests.unit.test_analyze.FilteringFlagsTest.test_some_warning_filtered()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1af37807c49fcc66b23f6c31a86068a366"/>    <section>
    <title>test_arch()</title>
<indexterm><primary>test_arch</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_arch</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_arch ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00040">40</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00040 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_arch(self):
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>(flags):
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd&#32;=&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;source.c&apos;</emphasis>]&#32;+&#32;flags
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opts&#32;=&#32;sut.classify_parameters(cmd)
00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opts[<emphasis role="stringliteral">&apos;arch_list&apos;</emphasis>]
00045 
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual([],&#32;<link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>([]))
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual([<emphasis role="stringliteral">&apos;mips&apos;</emphasis>],&#32;<link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>([<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;mips&apos;</emphasis>]))
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual([<emphasis role="stringliteral">&apos;mips&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;i386&apos;</emphasis>],
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>([<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;mips&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;i386&apos;</emphasis>]))
00050 
</programlisting><para>
References <link linkend="__function_call_decls_8cpp_source_1l00003">test()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1abe37295580fa660f8f7fdce2de59dc42"/>    <section>
    <title>test_compile_and_link_flags_pass()</title>
<indexterm><primary>test_compile_and_link_flags_pass</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_compile_and_link_flags_pass</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_compile_and_link_flags_pass ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00103">103</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00103 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_compile_and_link_flags_pass(self):
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-fsinged-char&apos;</emphasis>])
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-fPIC&apos;</emphasis>])
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-stdlib=libc++&apos;</emphasis>])
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;--sysroot&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/&apos;</emphasis>])
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-isysroot&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/&apos;</emphasis>])
00109 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1acc16850d684d7670684ce2caaf9239b8"/>    <section>
    <title>test_compile_only_flags_pass()</title>
<indexterm><primary>test_compile_only_flags_pass</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_compile_only_flags_pass</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_compile_only_flags_pass ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00095">95</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00095 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_compile_only_flags_pass(self):
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-std=C99&apos;</emphasis>])
00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-nostdinc&apos;</emphasis>])
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-isystem&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/image/debian&apos;</emphasis>])
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-iprefix&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/usr/local&apos;</emphasis>])
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-iquote=me&apos;</emphasis>])
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-iquote&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;me&apos;</emphasis>])
00102 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1adb9ff2ec93d5db92b7a3255fd7eeebbf"/>    <section>
    <title>test_define_pass()</title>
<indexterm><primary>test_define_pass</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_define_pass</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_define_pass ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00080">80</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00080 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_define_pass(self):
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-DNDEBUG&apos;</emphasis>])
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-UNDEBUG&apos;</emphasis>])
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-Dvar1=val1&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-Dvar2=val2&apos;</emphasis>])
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-Dvar=&quot;val&#32;ues&quot;&apos;</emphasis>])
00085 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a6d99c9135201bcd40482b4b3c9cbedd1"/>    <section>
    <title>test_include_pass()</title>
<indexterm><primary>test_include_pass</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_include_pass</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_include_pass ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00069">69</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00069 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_include_pass(self):
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([])
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-include&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/usr/local/include&apos;</emphasis>])
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-I.&apos;</emphasis>])
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-I&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;.&apos;</emphasis>])
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-I/usr/local/include&apos;</emphasis>])
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-I&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/usr/local/include&apos;</emphasis>])
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-I/opt&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-I&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/opt/otp/include&apos;</emphasis>])
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-isystem&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/path&apos;</emphasis>])
00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-isystem=/path&apos;</emphasis>])
00079 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a51700863710d60ffb5f1618dc15bc8e2"/>    <section>
    <title>test_language_captured()</title>
<indexterm><primary>test_language_captured</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_language_captured</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_language_captured ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00030">30</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00030 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_language_captured(self):
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>(flags):
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd&#32;=&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;source.c&apos;</emphasis>]&#32;+&#32;flags
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opts&#32;=&#32;sut.classify_parameters(cmd)
00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;opts[<emphasis role="stringliteral">&apos;language&apos;</emphasis>]
00035 
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="keywordtype">None</emphasis>,&#32;<link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>([]))
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="stringliteral">&apos;c&apos;</emphasis>,&#32;<link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>([<emphasis role="stringliteral">&apos;-x&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;c&apos;</emphasis>]))
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="stringliteral">&apos;cpp&apos;</emphasis>,&#32;<link linkend="__function_call_decls_8cpp_1ae1a3968e7947464bee7714f6d43b7002">test</link>([<emphasis role="stringliteral">&apos;-x&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;cpp&apos;</emphasis>]))
00039 
</programlisting><para>
References <link linkend="__function_call_decls_8cpp_source_1l00003">test()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1ad3ef9c1de8648c35bd6c779bc4e49caf"/>    <section>
    <title>test_optimalizations_pass()</title>
<indexterm><primary>test_optimalizations_pass</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_optimalizations_pass</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_optimalizations_pass ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00062">62</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00062 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_optimalizations_pass(self):
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-O&apos;</emphasis>])
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-O1&apos;</emphasis>])
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-Os&apos;</emphasis>])
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-O2&apos;</emphasis>])
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-O3&apos;</emphasis>])
00068 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a6984ce4e5108ab8f0eb69895bd44b4e3"/>    <section>
    <title>test_output_filtered()</title>
<indexterm><primary>test_output_filtered</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_output_filtered</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_output_filtered ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00086">86</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00086 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_output_filtered(self):
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-o&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;source.o&apos;</emphasis>])
00088 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00059">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsFiltered()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1a4366344ed838bb861ee31163f056806e"/>    <section>
    <title>test_some_flags_filtered()</title>
<indexterm><primary>test_some_flags_filtered</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_some_flags_filtered</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_some_flags_filtered ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00110">110</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00110 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_some_flags_filtered(self):
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-g&apos;</emphasis>])
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-fsyntax-only&apos;</emphasis>])
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-save-temps&apos;</emphasis>])
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-init&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;my_init&apos;</emphasis>])
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-sectorder&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;a&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;b&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;c&apos;</emphasis>])
00116 
00117 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00059">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsFiltered()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_filtering_flags_test_1aab6b7021c5fd3c303bb89ade7291061d"/>    <section>
    <title>test_some_warning_filtered()</title>
<indexterm><primary>test_some_warning_filtered</primary><secondary>tests.unit.test_analyze.FilteringFlagsTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.FilteringFlagsTest</primary><secondary>test_some_warning_filtered</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.FilteringFlagsTest.test_some_warning_filtered ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00089">89</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00089 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_some_warning_filtered(self):
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-Wall&apos;</emphasis>])
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-Wnoexcept&apos;</emphasis>])
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsFiltered([<emphasis role="stringliteral">&apos;-Wreorder&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-Wunused&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-Wundef&apos;</emphasis>])
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFlagsUnchanged([<emphasis role="stringliteral">&apos;-Wno-reorder&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-Wno-unused&apos;</emphasis>])
00094 
</programlisting><para>
References <link linkend="_test__analyze_8py_source_1l00059">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsFiltered()</link>, and <link linkend="_test__analyze_8py_source_1l00056">tests.unit.test_analyze.FilteringFlagsTest.assertFlagsUnchanged()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/unit/<link linkend="_test__analyze_8py">test_analyze.py</link></section>
</section>
