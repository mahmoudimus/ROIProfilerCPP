<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__performance___for_loops___with___counter_8cpp" xml:lang="en-US">
<title>Tests/CleanTime Test Cases/Performance_ForLoops_With_Counter.cpp File Reference</title>
<indexterm><primary>Tests/CleanTime Test Cases/Performance_ForLoops_With_Counter.cpp</primary></indexterm>
<programlisting>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &quot;../lib/DataStorage.cpp&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_data_storage">DataStorage</link> <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link> (&quot;Runtime,Scope,ForStmt 2192956,ForStmt 2193096,ForStmt 2225085&quot;)</para>
</listitem>
            <listitem><para>int <link linkend="__performance___for_loops___with___counter_8cpp_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6"/>    <section>
    <title>dataStorage()</title>
<indexterm><primary>dataStorage</primary><secondary>Performance_ForLoops_With_Counter.cpp</secondary></indexterm>
<indexterm><primary>Performance_ForLoops_With_Counter.cpp</primary><secondary>dataStorage</secondary></indexterm>
<para><computeroutput><link linkend="_class_data_storage">DataStorage</link> dataStorage (&quot; Runtime, Scope , ForStmt 2192956, ForStmt 2193096, ForStmt 2225085&quot; )</computeroutput></para><para>
Referenced by <link linkend="__performance___for_loops___with___counter_8cpp_source_1l00005">main()</link>.</para>
    </section><anchor xml:id="__performance___for_loops___with___counter_8cpp_1a840291bc02cba5474a4cb46a9b9566fe"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>Performance_ForLoops_With_Counter.cpp</secondary></indexterm>
<indexterm><primary>Performance_ForLoops_With_Counter.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>
Definition at line <link linkend="__performance___for_loops___with___counter_8cpp_source_1l00005">5</link> of file <link linkend="__performance___for_loops___with___counter_8cpp_source">Performance_ForLoops_With_Counter.cpp</link>.</para>
<programlisting>00005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00006 <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(0);
00007 &#32;&#32;&#32;&#32;<link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(2);
00008 <emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;1000;&#32;i++&#32;)&#32;{
00009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Hello&#32;World&quot;</emphasis>;
00010 &#32;&#32;&#32;&#32;}
00011 <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(2);
00012 &#32;&#32;&#32;&#32;<link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(3);
00013 <emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;1000;&#32;i++&#32;)&#32;{
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numberA&#32;=&#32;892346;
00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numberB&#32;=&#32;384378;
00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;numberC&#32;=&#32;numberA&#32;*&#32;numberB;
00017 &#32;&#32;&#32;&#32;}
00018 <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(3);
00019 &#32;&#32;&#32;&#32;<link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1a927960040591eba171b0dbbfa4b9b5bd">startEvent</link>(4);
00020 <emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;=&#32;1000;&#32;i++&#32;)&#32;{
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;shoppingList;
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Milk&quot;</emphasis>);
00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Eggs&quot;</emphasis>);
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Meat&quot;</emphasis>);
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Water&quot;</emphasis>);
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Sugar&quot;</emphasis>);
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Flour&quot;</emphasis>);
00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shoppingList.push_back(<emphasis role="stringliteral">&quot;Salt&quot;</emphasis>);
00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sort(&#32;shoppingList.begin(&#32;),&#32;shoppingList.end(&#32;));
00030 &#32;&#32;&#32;&#32;}
00031 <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(4);
00032 &#32;&#32;&#32;&#32;<link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1ade8287e335af60ba18c8455d4485094c">endEvent</link>(0);
00033 <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage</link>.<link linkend="_class_data_storage_1a94ef68ba0c97efa1c78b6f6909eb133c">print</link>();<emphasis role="keywordflow">return</emphasis>&#32;0;
00034 }
</programlisting><para>
References <link linkend="__performance___for_loops___with___counter_8cpp_1a0cd1dd1bf69fabdc2f460aef239019d6">dataStorage()</link>, <link linkend="__data_storage_8cpp_source_1l00046">DataStorage::endEvent()</link>, <link linkend="__data_storage_8cpp_source_1l00052">DataStorage::print()</link>, and <link linkend="__data_storage_8cpp_source_1l00028">DataStorage::startEvent()</link>.</para>
</section>
</section>
</section>
