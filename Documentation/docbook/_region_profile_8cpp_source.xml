<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__region_profile_8cpp_source" xml:lang="en-US">
<title>RegionProfile.cpp</title>
<programlisting>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__region_profile_8h">RegionProfile.h</link>&quot;</emphasis>
00002 <emphasis role="preprocessor">#include&#32;&lt;iomanip&gt;</emphasis>
00003 <emphasis role="comment">/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00010"/><link linkend="__region_profile_8cpp_1adfd72dc10aea9a01b5e9c1785033949d">00010</link> SourceLocation&#32;<link linkend="__region_profile_8cpp_1adfd72dc10aea9a01b5e9c1785033949d">getLocationAfterToken</link>(&#32;SourceLocation&#32;sourceLocation,&#32;ASTContext&#32;*localContext&#32;)&#32;{
00011 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;the&#32;current&#32;token&#32;at&#32;the&#32;specified&#32;location</emphasis>
00012 &#32;&#32;&#32;&#32;Optional&#32;&lt;Token&gt;&#32;currentToken(&#32;clang::Lexer::findNextToken(
00013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation,&#32;localContext-&gt;getSourceManager(&#32;),
00014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localContext-&gt;getLangOpts(&#32;)));
00015 
00016 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;token&#32;is&#32;raw&#32;identifier&#32;return&#32;last&#32;token</emphasis>
00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentToken-&gt;getKind(&#32;)&#32;==&#32;clang::tok::raw_identifier&#32;)&#32;{
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation&#32;=&#32;sourceLocation.getLocWithOffset(&#32;-1&#32;);
00019 &#32;&#32;&#32;&#32;}
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;token&#32;is&#32;semi&#32;return&#32;this&#32;token</emphasis>
00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentToken-&gt;getKind(&#32;)&#32;==&#32;clang::tok::semi&#32;)&#32;{
00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation&#32;=&#32;sourceLocation.getLocWithOffset(&#32;0&#32;);
00023 &#32;&#32;&#32;&#32;}
00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;token&#32;is&#32;brace&#32;return&#32;next&#32;token</emphasis>
00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentToken-&gt;getKind(&#32;)&#32;==&#32;clang::tok::r_brace&#32;)&#32;{
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation&#32;=&#32;sourceLocation.getLocWithOffset(&#32;1&#32;);
00027 &#32;&#32;&#32;&#32;}
00028 
00029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;location&#32;after&#32;semicolon</emphasis>
00030 &#32;&#32;&#32;&#32;SourceLocation&#32;locAfterSemi(&#32;clang::Lexer::findLocationAfterToken(
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation,&#32;clang::tok::semi,
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localContext-&gt;getSourceManager(&#32;),
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localContext-&gt;getLangOpts(&#32;),&#32;<emphasis role="keyword">true</emphasis>&#32;));
00034 
00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;location&#32;after&#32;brace</emphasis>
00036 &#32;&#32;&#32;&#32;SourceLocation&#32;locAfterBrace(&#32;clang::Lexer::findLocationAfterToken(
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation,&#32;clang::tok::r_brace,
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localContext-&gt;getSourceManager(&#32;),
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;localContext-&gt;getLangOpts(&#32;),&#32;<emphasis role="keyword">true</emphasis>&#32;));
00040 
00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;loc&#32;after&#32;semi&#32;is&#32;valid&#32;return&#32;locAfterSemi</emphasis>
00042 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentToken-&gt;getKind(&#32;)&#32;!=&#32;clang::tok::r_brace&#32;&amp;&amp;&#32;locAfterSemi.isValid(&#32;))&#32;{
00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation&#32;=&#32;locAfterSemi;
00044 &#32;&#32;&#32;&#32;}
00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;loc&#32;after&#32;brace&#32;is&#32;valid&#32;return&#32;locAfterBrace</emphasis>
00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentToken-&gt;getKind(&#32;)&#32;!=&#32;clang::tok::r_brace&#32;&amp;&amp;&#32;locAfterBrace.isValid(&#32;))&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sourceLocation&#32;=&#32;locAfterBrace;
00048 &#32;&#32;&#32;&#32;}
00049 
00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;token&#32;is&#32;brace&#32;return&#32;current&#32;location</emphasis>
00051 
00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sourceLocation;
00053 }
00054 
00055 <emphasis role="comment">/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00060"/><link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">00060</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;Stmt&#32;*funcBody,&#32;ASTContext&#32;*localContext&#32;)&#32;{
00061 
00062 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;count&#32;statements&#32;in&#32;body&#32;and&#32;search&#32;for&#32;parent&#32;statements</emphasis>
00063 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;childrenSize&#32;=&#32;0;
00064 &#32;&#32;&#32;&#32;Stmt&#32;*parentStmt&#32;=&#32;NULL;
00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;Stmt::child_iterator&#32;i&#32;=&#32;funcBody-&gt;child_begin(&#32;),&#32;e&#32;=&#32;funcBody-&gt;child_end(&#32;);&#32;i&#32;!=&#32;e;&#32;++i&#32;)&#32;{
00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*currStmt&#32;=&#32;*i;
00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::ReturnStmtClass&#32;)&#32;{
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;childrenSize++;
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CallExprClass
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ForStmtClass
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::WhileStmtClass
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::IfStmtClass
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CXXMemberCallExprClass
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;parentStmt&#32;=&#32;currStmt;
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00078 &#32;&#32;&#32;&#32;}
00079 
00080 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;body&#32;has&#32;multiple&#32;children,&#32;annotate&#32;all&#32;statements&#32;with&#32;performance&#32;counter</emphasis>
00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;childrenSize&#32;&gt;&#32;1&#32;)&#32;{
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isCompoundedStatement&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;lastEventEndLocation;
00084 
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;Stmt::child_iterator&#32;i&#32;=&#32;funcBody-&gt;child_begin(&#32;),&#32;e&#32;=&#32;funcBody-&gt;child_end(&#32;);
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;!=&#32;e;&#32;++i&#32;)&#32;{
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*currStmt&#32;=&#32;*i;
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClassName(&#32;);
00089 
00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::ReturnStmtClass&#32;)&#32;{
00091 
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;beginLoc&#32;=&#32;currStmt-&gt;getBeginLoc(&#32;);
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;endLoc&#32;=&#32;<link linkend="__region_profile_8cpp_1adfd72dc10aea9a01b5e9c1785033949d">getLocationAfterToken</link>(&#32;currStmt-&gt;getEndLoc(&#32;),&#32;localContext&#32;);
00094 
00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;statement&#32;runtime&#32;is&#32;not&#32;merged</emphasis>
00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!isCompoundedStatement&#32;)&#32;{
00097 
00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;start&#32;time&#32;always</emphasis>
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;beginLoc,
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.startEvent(&quot;</emphasis>&#32;+&#32;std::to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>&#32;)&#32;+&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>&#32;);
00101 
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;statement&#32;is&#32;not&#32;parent,&#32;wait&#32;for&#32;next&#32;statement</emphasis>
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::CallExprClass&#32;&amp;&amp;
00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::ForStmtClass&#32;&amp;&amp;
00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::WhileStmtClass&#32;&amp;&amp;
00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::IfStmtClass&#32;&amp;&amp;
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;!=&#32;Stmt::CXXMemberCallExprClass
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
00109 
00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastEventEndLocation&#32;=&#32;endLoc;
00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompoundedStatement&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00112 
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;statement&#32;is&#32;parent,&#32;do&#32;not&#32;merge&#32;runtime</emphasis>
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;endLoc,
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(&quot;</emphasis>&#32;+&#32;std::to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>&#32;)&#32;+&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>&#32;);
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concat&#32;stmtclass&#32;and&#32;stmtid&#32;and&#32;add&#32;to&#32;identifierString</emphasis>
00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int64_t&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;currStmt-&gt;getID(&#32;*localContext&#32;);
00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;idString&#32;=
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClassName(&#32;)&#32;+&#32;std::string(&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;)&#32;+&#32;std::to_string(&#32;<emphasis role="keywordtype">id</emphasis>&#32;);
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1ae32c9fb32bce38a59a96888d88486084">identifierString</link>&#32;+=&#32;idString&#32;+&#32;<emphasis role="stringliteral">&quot;,&quot;</emphasis>;
00122 
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompoundedStatement&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>++;
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00126 
00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;waiting&#32;for&#32;next&#32;statement</emphasis>
00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00129 
00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;statement&#32;is&#32;parent,&#32;stop&#32;last&#32;merge&#32;and&#32;annotate&#32;this&#32;statement</emphasis>
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CallExprClass&#32;||
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ForStmtClass&#32;||
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::WhileStmtClass&#32;||
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::IfStmtClass&#32;||
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CXXMemberCallExprClass
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
00137 
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;end&#32;old&#32;event</emphasis>
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;beginLoc,
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(&quot;</emphasis>&#32;+&#32;std::to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>&#32;)&#32;+
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>&#32;);
00142 
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;compound&#32;description&#32;to&#32;identifier&#32;string</emphasis>
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1ae32c9fb32bce38a59a96888d88486084">identifierString</link>&#32;+=&#32;<emphasis role="stringliteral">&quot;CustomCompoundStmt&#32;i00000&quot;</emphasis>&#32;+&#32;to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>++&#32;)&#32;+&#32;<emphasis role="stringliteral">&quot;,&quot;</emphasis>;
00145 
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;start&#32;and&#32;end&#32;new&#32;event&#32;around&#32;parent&#32;function</emphasis>
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;beginLoc,
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.startEvent(&quot;</emphasis>&#32;+&#32;std::to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>&#32;)&#32;+
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>&#32;);
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;endLoc,
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(&quot;</emphasis>&#32;+&#32;std::to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>++&#32;)&#32;+
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>&#32;);
00153 
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;concat&#32;stmtclass&#32;and&#32;stmtid&#32;and&#32;add&#32;to&#32;identifierString</emphasis>
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int64_t&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;currStmt-&gt;getID(&#32;*localContext&#32;);
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;idString&#32;=
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;currStmt-&gt;getStmtClassName(&#32;)&#32;+&#32;std::string(&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;)&#32;+&#32;std::to_string(&#32;<emphasis role="keywordtype">id</emphasis>&#32;);
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1ae32c9fb32bce38a59a96888d88486084">identifierString</link>&#32;+=&#32;idString&#32;+&#32;<emphasis role="stringliteral">&quot;,&quot;</emphasis>;
00159 
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompoundedStatement&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00161 
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;wait&#32;for&#32;next&#32;statement&#32;again</emphasis>
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastEventEndLocation&#32;=&#32;endLoc;
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCompoundedStatement&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00170 
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;end&#32;last&#32;event</emphasis>
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;isCompoundedStatement&#32;&amp;&amp;&#32;lastEventEndLocation.isValid(&#32;))&#32;{
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;lastEventEndLocation,
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(&quot;</emphasis>&#32;+&#32;std::to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>++&#32;)&#32;+&#32;<emphasis role="stringliteral">&quot;);\n&quot;</emphasis>&#32;);
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1ae32c9fb32bce38a59a96888d88486084">identifierString</link>&#32;+=&#32;<emphasis role="stringliteral">&quot;CustomCompoundStmt&#32;i00000&quot;</emphasis>&#32;+&#32;to_string(&#32;<link linkend="__region_profile_8h_1a192cb4171d7738dc4bcd720dd2d3509f">internalIdentifier</link>&#32;)&#32;+&#32;<emphasis role="stringliteral">&quot;,&quot;</emphasis>;
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00177 
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;transformation&#32;successful</emphasis>
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a15ae25a94346899ec5715517ec03bd4f">transformationSuccess</link>&#32;=&#32;<emphasis role="keyword">true</emphasis>;
00180 
00181 &#32;&#32;&#32;&#32;}
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;body&#32;has&#32;zero&#32;or&#32;one&#32;statements</emphasis>
00183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;one&#32;child&#32;is&#32;parent&#32;of&#32;another&#32;set&#32;of&#32;statements</emphasis>
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;call&#32;traverseChildren&#32;recursively</emphasis>
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentStmt&#32;!=&#32;NULL&#32;)&#32;{
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CallExprClass&#32;)&#32;{
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CallExpr&#32;*expr&#32;=&#32;cast&lt;CallExpr&gt;(&#32;parentStmt&#32;);
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;expr-&gt;getDirectCallee(&#32;)-&gt;getBody(&#32;);
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;localContext&#32;);
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ForStmtClass&#32;)&#32;{
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ForStmt&#32;*forStmt&#32;=&#32;cast&lt;ForStmt&gt;(&#32;parentStmt&#32;);
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;forStmt-&gt;getBody(&#32;);
00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;localContext&#32;);
00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::WhileStmtClass&#32;)&#32;{
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WhileStmt&#32;*whileStmt&#32;=&#32;cast&lt;WhileStmt&gt;(&#32;parentStmt&#32;);
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;whileStmt-&gt;getBody(&#32;);
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;localContext&#32;);
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::IfStmtClass&#32;)&#32;{
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IfStmt&#32;*ifStmt&#32;=&#32;cast&lt;IfStmt&gt;(&#32;parentStmt&#32;);
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;ifStmt-&gt;getThen(&#32;);
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;localContext&#32;);
00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;parentStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CXXMemberCallExprClass&#32;)&#32;{
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXXMemberCallExpr&#32;*cxxMemberCallExpr&#32;=&#32;cast&lt;CXXMemberCallExpr&gt;(&#32;parentStmt&#32;);
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;cxxMemberCallExpr-&gt;getDirectCallee(&#32;)-&gt;getBody();
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;localContext&#32;);
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;return&#32;is&#32;the&#32;only&#32;statement&#32;annotate&#32;nothing</emphasis>
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cout&#32;&lt;&lt;&#32;&quot;hagn-tool&#32;hasn&apos;t&#32;found&#32;any&#32;statements!\n&quot;;</emphasis>
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00216 &#32;&#32;&#32;&#32;}
00217 }
00218 
00219 <emphasis role="comment">//&#32;AST&#32;Tree&#32;MyVisitor</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00220"/><link linkend="_class_my_visitor">00220</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_my_visitor">MyVisitor</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;RecursiveASTVisitor&lt;MyVisitor&gt;&#32;{
00221 <emphasis role="keyword">private</emphasis>:
00222 &#32;&#32;&#32;&#32;ASTContext&#32;*astContext;&#32;<emphasis role="comment">//&#32;used&#32;for&#32;getting&#32;additional&#32;AST&#32;info</emphasis>
00223 
00224 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__region_profile_8cpp_source_1l00225"/><link linkend="_class_my_visitor_1afab9df8fa7742a0a9cfda933a45c651a">00225</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_my_visitor_1afab9df8fa7742a0a9cfda933a45c651a">MyVisitor</link>(&#32;ASTContext&#32;*Context&#32;)
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;astContext(&#32;Context&#32;)&#32;<emphasis role="comment">//&#32;initialize&#32;private&#32;members</emphasis>
00227 &#32;&#32;&#32;&#32;{
00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.setSourceMgr(&#32;astContext-&gt;getSourceManager(&#32;),
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getLangOpts(&#32;));
00230 &#32;&#32;&#32;&#32;}
00231 
00232 <emphasis role="comment">&#32;&#32;&#32;&#32;/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00240"/><link linkend="_class_my_visitor_1ab5c4851ff0dc8b8258761a39dca7069d">00240</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_my_visitor_1ab5c4851ff0dc8b8258761a39dca7069d">VisitStmt</link>(&#32;Stmt&#32;*stmt&#32;)&#32;{
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;only&#32;statements&#32;in&#32;main&#32;file</emphasis>
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;stmt-&gt;getBeginLoc(&#32;)))&#32;{
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;when&#32;stmt&#32;identifier&#32;is&#32;specified</emphasis>
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;!=&#32;<emphasis role="stringliteral">&quot;start&quot;</emphasis>&#32;)&#32;{
00245 
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;get&#32;statement&#32;identifier&#32;and&#32;cast&#32;to&#32;string</emphasis>
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int64_t&#32;currentId&#32;=&#32;stmt-&gt;getID(&#32;*astContext&#32;);
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;currentIdString&#32;=&#32;std::to_string(&#32;currentId&#32;);
00249 
00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;statement&#32;with&#32;matching&#32;id</emphasis>
00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currentIdString&#32;==&#32;<link linkend="__region_profile_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;)&#32;{
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;stmt-&gt;getBeginLoc(&#32;),&#32;<emphasis role="stringliteral">&quot;dataStorage.startEvent(1);\n&quot;</emphasis>&#32;);
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;<link linkend="__region_profile_8cpp_1adfd72dc10aea9a01b5e9c1785033949d">getLocationAfterToken</link>(&#32;stmt-&gt;getEndLoc(&#32;),&#32;astContext&#32;),
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(1);\n&quot;</emphasis>&#32;);
00255 
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CallExprClass&#32;)&#32;{
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CallExpr&#32;*expr&#32;=&#32;cast&lt;CallExpr&gt;(&#32;stmt&#32;);
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;expr-&gt;getDirectCallee(&#32;)-&gt;getBody(&#32;);
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ForStmtClass&#32;)&#32;{
00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ForStmt&#32;*forStmt&#32;=&#32;cast&lt;ForStmt&gt;(&#32;stmt&#32;);
00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;forStmt-&gt;getBody(&#32;);
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::WhileStmtClass&#32;)&#32;{
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WhileStmt&#32;*whileStmt&#32;=&#32;cast&lt;WhileStmt&gt;(&#32;stmt&#32;);
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;whileStmt-&gt;getBody(&#32;);
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::IfStmtClass&#32;)&#32;{
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;IfStmt&#32;*ifStmt&#32;=&#32;cast&lt;IfStmt&gt;(&#32;stmt&#32;);
00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;ifStmt-&gt;getThen(&#32;);
00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::CXXMemberCallExprClass&#32;)&#32;{
00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CXXMemberCallExpr&#32;*cxxMemberCallExpr&#32;=&#32;cast&lt;CXXMemberCallExpr&gt;(&#32;stmt&#32;);
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*nextBody&#32;=&#32;cxxMemberCallExpr-&gt;getDirectCallee(&#32;)-&gt;getBody();
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;nextBody,&#32;astContext&#32;);
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00285 &#32;&#32;&#32;&#32;}
00286 
00287 <emphasis role="comment">&#32;&#32;&#32;&#32;/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00295"/><link linkend="_class_my_visitor_1a6dd9309db480b31eae36f7e56db89cc6">00295</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_my_visitor_1a6dd9309db480b31eae36f7e56db89cc6">VisitFunctionDecl</link>(&#32;FunctionDecl&#32;*func&#32;)&#32;{
00296 
00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;initialization&#32;location&#32;for&#32;includes&#32;and&#32;initialization&#32;of&#32;hagn&#32;lib</emphasis>
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a824216c5325518b8eec871b8174fec3f">initializationLocation</link>.isInvalid(&#32;)&#32;&amp;&amp;
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00300 
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;lastLocation;
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keyword">auto</emphasis>&#32;it&#32;=&#32;astContext-&gt;getSourceManager(&#32;).fileinfo_begin(&#32;);
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;!=&#32;astContext-&gt;getSourceManager(&#32;).fileinfo_end(&#32;);&#32;it++&#32;)&#32;{
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;currentLocation&#32;=&#32;astContext-&gt;getSourceManager(&#32;).getIncludeLoc(
00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).translateFile(&#32;it-&gt;first&#32;));
00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(currentLocation.isValid()&#32;&amp;&amp;&#32;astContext-&gt;getSourceManager().isInFileID(currentLocation,&#32;astContext-&gt;getSourceManager(&#32;).getMainFileID(&#32;)))&#32;{
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;astContext-&gt;getSourceManager(&#32;).getSpellingLineNumber(&#32;lastLocation&#32;)&#32;&lt;=&#32;astContext-&gt;getSourceManager(&#32;).getSpellingLineNumber(&#32;currentLocation&#32;)&#32;)&#32;{
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lastLocation&#32;=&#32;currentLocation;
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00312 
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a824216c5325518b8eec871b8174fec3f">initializationLocation</link>&#32;=&#32;astContext-&gt;getSourceManager(&#32;).translateFileLineCol(
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).getFileEntryForID(&#32;astContext-&gt;getSourceManager(&#32;).getMainFileID(&#32;)&#32;),
00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).getSpellingLineNumber(&#32;lastLocation&#32;)+1,&#32;1&#32;);
00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00317 
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;first&#32;location&#32;in&#32;main&#32;class&#32;for&#32;runtime&#32;measurement</emphasis>
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a6a7a6f87a39ed5405e4f4df9e1205530">runtimeStartLocation</link>.isInvalid(&#32;)&#32;&amp;&amp;
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;func-&gt;isMain(&#32;))&#32;{
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SourceLocation&#32;locAfterBrace(&#32;clang::Lexer::findLocationAfterToken(
00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;func-&gt;getBody(&#32;)-&gt;getBeginLoc(&#32;).getLocWithOffset(&#32;-1&#32;),&#32;clang::tok::l_brace,
00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;),
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getLangOpts(&#32;),&#32;<emphasis role="keyword">true</emphasis>&#32;));
00326 
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a6a7a6f87a39ed5405e4f4df9e1205530">runtimeStartLocation</link>&#32;=&#32;locAfterBrace;
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00330 
00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;summary&#32;location&#32;in&#32;main&#32;class&#32;for&#32;ending&#32;runtime&#32;event&#32;and&#32;print&#32;event</emphasis>
00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a4d00baee5074510abc5b5853de403290">summaryLocation</link>.isInvalid(&#32;)&#32;&amp;&amp;
00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;func-&gt;isMain(&#32;))&#32;{
00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;Stmt::child_iterator&#32;i&#32;=&#32;func-&gt;getBody(&#32;)-&gt;child_begin(&#32;),&#32;e&#32;=&#32;func-&gt;getBody(&#32;)-&gt;child_end(&#32;);
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i&#32;!=&#32;e;&#32;++i&#32;)&#32;{
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Stmt&#32;*currStmt&#32;=&#32;*i;
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;currStmt-&gt;getStmtClass(&#32;)&#32;==&#32;Stmt::ReturnStmtClass&#32;)&#32;{
00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a4d00baee5074510abc5b5853de403290">summaryLocation</link>&#32;=&#32;currStmt-&gt;getBeginLoc(&#32;);
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00344 
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;annotate&#32;only&#32;main&#32;function&#32;if&#32;statement&#32;option&#32;is&#32;start</emphasis>
00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;astContext-&gt;getSourceManager(&#32;).isInMainFile(&#32;func-&gt;getLocation(&#32;)))&#32;{
00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;==&#32;<emphasis role="stringliteral">&quot;start&quot;</emphasis>&#32;)&#32;{
00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;func-&gt;isMain(&#32;))&#32;{
00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8cpp_1a19133d8d4f04cd2fa902dd1f8bc7426f">traverseChildren</link>(&#32;func-&gt;getBody(&#32;),&#32;astContext&#32;);
00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00353 
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00355 &#32;&#32;&#32;&#32;}
00356 
<anchor xml:id="__region_profile_8cpp_source_1l00357"/><link linkend="_class_my_visitor_1aa305f8bc085472a15051222a3626897e">00357</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_class_my_visitor_1aa305f8bc085472a15051222a3626897e">~MyVisitor</link>(&#32;)&#32;{&#32;}
00358 };
00359 
00360 <emphasis role="comment">/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00365"/><link linkend="_class_consumer">00365</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_consumer">Consumer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;ASTConsumer&#32;{
00366 <emphasis role="keyword">private</emphasis>:
00367 &#32;&#32;&#32;&#32;<link linkend="_class_my_visitor">MyVisitor</link>&#32;Visitor;
00368 
00369 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__region_profile_8cpp_source_1l00370"/><link linkend="_class_consumer_1a3f0f9e74310f240e42b08525a2cf1e2c">00370</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_class_consumer_1a3f0f9e74310f240e42b08525a2cf1e2c">Consumer</link>(&#32;ASTContext&#32;*Context&#32;)
00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;Visitor(&#32;Context&#32;)&#32;{&#32;}
00372 
<anchor xml:id="__region_profile_8cpp_source_1l00373"/><link linkend="_class_consumer_1aa8b6e2aaeb18b2b02040359af7605b8c">00373</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_consumer_1aa8b6e2aaeb18b2b02040359af7605b8c">HandleTranslationUnit</link>(&#32;ASTContext&#32;&amp;Context&#32;)<emphasis role="keyword">&#32;override&#32;</emphasis>{
00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Visitor.TraverseDecl(&#32;Context.getTranslationUnitDecl(&#32;));
00375 &#32;&#32;&#32;&#32;}
00376 };
00377 
00378 <emphasis role="comment">/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00384"/><link linkend="_class_clang_frontend_action">00384</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_clang_frontend_action">ClangFrontendAction</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;clang::ASTFrontendAction&#32;{
00385 <emphasis role="keyword">public</emphasis>:
00386 &#32;&#32;&#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;std::unique_ptr&#32;&lt;clang::ASTConsumer&gt;
<anchor xml:id="__region_profile_8cpp_source_1l00387"/><link linkend="_class_clang_frontend_action_1a220af6099976eb40a1351d73e9684908">00387</link> &#32;&#32;&#32;&#32;<link linkend="_class_clang_frontend_action_1a220af6099976eb40a1351d73e9684908">CreateASTConsumer</link>(&#32;clang::CompilerInstance&#32;&amp;Compiler,&#32;llvm::StringRef&#32;InFile&#32;)<emphasis role="keyword">&#32;override&#32;</emphasis>{
00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::make_unique&lt;Consumer&gt;(&#32;&amp;Compiler.getASTContext(&#32;));
00389 &#32;&#32;&#32;&#32;}
00390 };
00391 
00392 <emphasis role="comment">/********************************************/</emphasis>
<anchor xml:id="__region_profile_8cpp_source_1l00400"/><link linkend="__region_profile_8cpp_1a217dbf8b442f20279ea00b898af96f52">00400</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__region_profile_8cpp_1a217dbf8b442f20279ea00b898af96f52">main</link>(&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv&#32;)&#32;{
00401 
00402 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;runtime&#32;start</emphasis>
00403 &#32;&#32;&#32;&#32;std::chrono::system_clock::time_point&#32;startTime&#32;=&#32;std::chrono::system_clock::now(&#32;);
00404 
00405 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;create&#32;Common&#32;Option&#32;Parser</emphasis>
00406 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;ExpectedParser&#32;=&#32;CommonOptionsParser::create(&#32;argc,&#32;argv,&#32;MyToolCategory,&#32;llvm::cl::Required&#32;);
00407 
00408 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;terminate&#32;if&#32;specified&#32;options&#32;are&#32;not&#32;expected</emphasis>
00409 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;!ExpectedParser&#32;)&#32;{
00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;llvm::errs(&#32;)&#32;&lt;&lt;&#32;ExpectedParser.takeError(&#32;);
00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
00412 &#32;&#32;&#32;&#32;}
00413 
00414 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;create&#32;local&#32;parameter&#32;variables</emphasis>
00415 &#32;&#32;&#32;&#32;std::string&#32;outputFilename&#32;=&#32;<emphasis role="stringliteral">&quot;output.cpp&quot;</emphasis>;
00416 &#32;&#32;&#32;&#32;std::string&#32;stmtId&#32;=&#32;<emphasis role="stringliteral">&quot;start&quot;</emphasis>;
00417 
00418 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;create&#32;the&#32;stream&#32;for&#32;output&#32;file</emphasis>
00419 &#32;&#32;&#32;&#32;std::error_code&#32;err_code;
00420 
00421 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;parse&#32;arguments</emphasis>
00422 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;argc;&#32;++i&#32;)&#32;{
00423 
00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;output&#32;file&#32;is&#32;specified</emphasis>
00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;std::string(&#32;argv[&#32;i&#32;]&#32;)&#32;==&#32;<emphasis role="stringliteral">&quot;-o&quot;</emphasis>&#32;)&#32;{
00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;outputFilename&#32;=&#32;std::string(&#32;argv[&#32;i&#32;+&#32;1&#32;]&#32;);
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00428 
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;statement&#32;id&#32;is&#32;specified</emphasis>
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;std::string(&#32;argv[&#32;i&#32;]&#32;)&#32;==&#32;<emphasis role="stringliteral">&quot;--stmt&quot;</emphasis>&#32;)&#32;{
00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stmtId&#32;=&#32;std::string(&#32;argv[&#32;i&#32;+&#32;1&#32;]&#32;);
00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00433 &#32;&#32;&#32;&#32;}
00434 
00435 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;Hagn&#32;Tool&#32;Information</emphasis>
00436 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;setw(&#32;82&#32;)&#32;&lt;&lt;&#32;setfill(&#32;<emphasis role="charliteral">&apos;=&apos;</emphasis>&#32;)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00437 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;setw(&#32;45&#32;)&#32;&lt;&lt;&#32;setfill(&#32;<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>&#32;)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Hagn&#32;Tool&quot;</emphasis>&#32;&lt;&lt;&#32;setw(&#32;25&#32;)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00438 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;setw(&#32;83&#32;)&#32;&lt;&lt;&#32;setfill(&#32;<emphasis role="charliteral">&apos;=&apos;</emphasis>&#32;)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n&quot;</emphasis>;
00439 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Input&#32;File:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;argv[&#32;1&#32;]&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00440 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Output&#32;File:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;outputFilename&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00441 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;print&#32;no&#32;statement&#32;id&#32;notification</emphasis>
00442 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;stmtId&#32;==&#32;<emphasis role="stringliteral">&quot;start&quot;</emphasis>&#32;)&#32;{
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Mode:&#32;Annotating&#32;Main&#32;Function\n&quot;</emphasis>;
00444 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Mode:&#32;Annotate&#32;specified&#32;Statement\n&quot;</emphasis>;
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Statement&#32;ID:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;stmtId&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
00447 &#32;&#32;&#32;&#32;}
00448 
00449 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;statement&#32;id&#32;to&#32;global&#32;scope</emphasis>
00450 &#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a29f40cbf56ba1c9a5d4750faccff56c6">statementOption</link>&#32;=&#32;stmtId;
00451 
00452 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;destination&#32;of&#32;output&#32;file&#32;to&#32;the&#32;specified&#32;file</emphasis>
00453 &#32;&#32;&#32;&#32;llvm::raw_fd_ostream&#32;dest(&#32;outputFilename,&#32;err_code&#32;);
00454 
00455 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Parse&#32;the&#32;options&#32;and&#32;create&#32;new&#32;ClangTool</emphasis>
00456 &#32;&#32;&#32;&#32;CommonOptionsParser&#32;&amp;OptionsParser&#32;=&#32;ExpectedParser.get(&#32;);
00457 &#32;&#32;&#32;&#32;ClangTool&#32;Tool(&#32;OptionsParser.getCompilations(&#32;),
00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;OptionsParser.getSourcePathList(&#32;));
00459 
00460 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;run&#32;the&#32;Clang&#32;Tool,&#32;creating&#32;a&#32;new&#32;FrontendAction</emphasis>
00461 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;result&#32;=&#32;Tool.run(&#32;newFrontendActionFactory&lt;ClangFrontendAction&gt;(&#32;).<link linkend="_namespacestartfile_1af8790d592af0bdf089efd317cbd70e2e">get</link>(&#32;));
00462 
00463 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;initialization&#32;and&#32;summary&#32;if&#32;transformation&#32;was&#32;successful</emphasis>
00464 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a15ae25a94346899ec5715517ec03bd4f">transformationSuccess</link>&#32;)&#32;{
00465 
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;initialization&#32;Location&#32;is&#32;valid&#32;insert&#32;includes&#32;and&#32;create&#32;DataStorage&#32;Object</emphasis>
00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1ae32c9fb32bce38a59a96888d88486084">identifierString</link>.pop_back(&#32;);
00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a824216c5325518b8eec871b8174fec3f">initializationLocation</link>.isValid(&#32;))&#32;{
00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;<link linkend="__region_profile_8h_1a824216c5325518b8eec871b8174fec3f">initializationLocation</link>,
00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;#include&#32;\&quot;../lib/DataStorage.cpp\&quot;\n&quot;</emphasis><emphasis role="stringliteral">&quot;DataStorage&#32;dataStorage(\&quot;&quot;</emphasis>&#32;+
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1ae32c9fb32bce38a59a96888d88486084">identifierString</link>&#32;+&#32;<emphasis role="stringliteral">&quot;\&quot;);&quot;</emphasis>&#32;);
00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Invalid&#32;initializationLocation,&#32;Line&#32;356&quot;</emphasis>;
00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(&#32;EXIT_FAILURE&#32;);
00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00476 
00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;start&#32;an&#32;event&#32;at&#32;the&#32;beginning&#32;of&#32;the&#32;main&#32;function</emphasis>
00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a6a7a6f87a39ed5405e4f4df9e1205530">runtimeStartLocation</link>.isValid(&#32;))&#32;{
00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;<link linkend="__region_profile_8h_1a6a7a6f87a39ed5405e4f4df9e1205530">runtimeStartLocation</link>,&#32;<emphasis role="stringliteral">&quot;dataStorage.startEvent(0);\n&quot;</emphasis>&#32;);
00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Invalid&#32;runtimeStartLocation,&#32;Line&#32;364&quot;</emphasis>;
00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(&#32;EXIT_FAILURE&#32;);
00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00484 
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;start&#32;event&#32;and&#32;insert&#32;time&#32;summery&#32;as&#32;last&#32;step&#32;in&#32;the&#32;main&#32;function</emphasis>
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;<link linkend="__region_profile_8h_1a4d00baee5074510abc5b5853de403290">summaryLocation</link>.isValid(&#32;))&#32;{
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.InsertText(&#32;<link linkend="__region_profile_8h_1a4d00baee5074510abc5b5853de403290">summaryLocation</link>,&#32;<emphasis role="stringliteral">&quot;dataStorage.endEvent(0);\ndataStorage.print();&quot;</emphasis>&#32;);
00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Invalid&#32;summaryLocation,&#32;Line&#32;372&quot;</emphasis>;
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(&#32;EXIT_FAILURE&#32;);
00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00492 
00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;runtime&#32;end</emphasis>
00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::chrono::system_clock::time_point&#32;endTime&#32;=&#32;std::chrono::system_clock::now(&#32;);
00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::chrono::duration&lt;double,&#32;std::milli&gt;&#32;ms_double&#32;=&#32;endTime&#32;-&#32;startTime;
00496 
00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;print&#32;hagn&#32;tool&#32;runtime</emphasis>
00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Runtime:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;ms_double.count(&#32;)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;ms\n&quot;</emphasis>;
00499 
00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;print&#32;program&#32;finished&#32;notification</emphasis>
00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Success:&#32;Yes\n\n&quot;</emphasis>;
00502 
00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;add&#32;transformed&#32;code&#32;to&#32;output&#32;file</emphasis>
00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.getEditBuffer(&#32;<link linkend="__region_profile_8h_1a284f3685f06f0e161d79ef2f7513460b">rewriter</link>.getSourceMgr(&#32;).getMainFileID(&#32;)).write(&#32;dest&#32;);
00505 
00506 
00507 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Success:&#32;No\n\n&quot;</emphasis>;
00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exit(&#32;EXIT_FAILURE&#32;);
00510 &#32;&#32;&#32;&#32;}
00511 
00512 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
00513 }
</programlisting></section>
