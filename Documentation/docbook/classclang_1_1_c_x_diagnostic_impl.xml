<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classclang_1_1_c_x_diagnostic_impl" xml:lang="en-US">
<title>clang::CXDiagnosticImpl Class Reference</title>
<indexterm><primary>clang::CXDiagnosticImpl</primary></indexterm>
<para>
<computeroutput>#include &lt;CIndexDiagnostic.h&gt;</computeroutput>
</para>
<para>Inheritance diagram for clang::CXDiagnosticImpl:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classclang_1_1_c_x_diagnostic_impl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda">Kind</link> { <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaa0bd35601037c6b3bc0264392e5d77bd6">StoredDiagnosticKind</link>
, <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaa7cfd2d3ec9530885fe43a0d48de7e58f">LoadedDiagnosticKind</link>
, <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaaf20568046c187883803beed039cbc572">CustomNoteDiagnosticKind</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>virtual <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a49b8d0e09d19369df964fb4b304e1684">~CXDiagnosticImpl</link> ()</para>
</listitem>
            <listitem><para>virtual CXDiagnosticSeverity <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a87553d5e20319e0a3e480cb214cfb6d7">getSeverity</link> () const =0</para>

<para>Return the severity of the diagnostic. </para>
</listitem>
            <listitem><para>virtual CXSourceLocation <link linkend="_classclang_1_1_c_x_diagnostic_impl_1ae82ba92d144e38fcaaec5d472da066e9">getLocation</link> () const =0</para>

<para>Return the location of the diagnostic. </para>
</listitem>
            <listitem><para>virtual CXString <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a477f39524bfa199ed9180ed85ac4d3d8">getSpelling</link> () const =0</para>

<para>Return the spelling of the diagnostic. </para>
</listitem>
            <listitem><para>virtual CXString <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a104a0f5935756ca714dee6f0948573f9">getDiagnosticOption</link> (CXString *Disable) const =0</para>

<para>Return the text for the diagnostic option. </para>
</listitem>
            <listitem><para>virtual unsigned <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a1fd1ee880f76ddd047a763fdad1e9dc3">getCategory</link> () const =0</para>

<para>Return the category of the diagnostic. </para>
</listitem>
            <listitem><para>virtual CXString <link linkend="_classclang_1_1_c_x_diagnostic_impl_1af5fc17b07ee253ee5ebaaffd8481c11c">getCategoryText</link> () const =0</para>

<para>Return the category string of the diagnostic. </para>
</listitem>
            <listitem><para>virtual unsigned <link linkend="_classclang_1_1_c_x_diagnostic_impl_1add19591d7940fda585a6a69f87b927d8">getNumRanges</link> () const =0</para>

<para>Return the number of source ranges for the diagnostic. </para>
</listitem>
            <listitem><para>virtual CXSourceRange <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a49fc85b074cacc4e1c44dd7c6b540e53">getRange</link> (unsigned Range) const =0</para>

<para>Return the source ranges for the diagnostic. </para>
</listitem>
            <listitem><para>virtual unsigned <link linkend="_classclang_1_1_c_x_diagnostic_impl_1ab80ce934006ca4fb0f9d531586b9162e">getNumFixIts</link> () const =0</para>

<para>Return the number of FixIts. </para>
</listitem>
            <listitem><para>virtual CXString <link linkend="_classclang_1_1_c_x_diagnostic_impl_1aa1e009fc05ec6c332234dbf3ec1b03a6">getFixIt</link> (unsigned FixIt, CXSourceRange *ReplacementRange) const =0</para>

<para>Return the FixIt information (source range and inserted text). </para>
</listitem>
            <listitem><para><link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda">Kind</link> <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a291e683397c75960d2a722387bc4dca7">getKind</link> () const</para>
</listitem>
            <listitem><para><link linkend="_classclang_1_1_c_x_diagnostic_set_impl">CXDiagnosticSetImpl</link> &amp; <link linkend="_classclang_1_1_c_x_diagnostic_impl_1af56711ab018bcca7e31c5c0589743425">getChildDiagnostics</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classclang_1_1_c_x_diagnostic_impl_1a4b828845f3ca99d9ba01c5083279850c">CXDiagnosticImpl</link> (<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda">Kind</link> k)</para>
</listitem>
            <listitem><para>void <link linkend="_classclang_1_1_c_x_diagnostic_impl_1ac1da33a15a858de42c4015a7264caa90">append</link> (std::unique_ptr&lt; <link linkend="_classclang_1_1_c_x_diagnostic_impl">CXDiagnosticImpl</link> &gt; D)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classclang_1_1_c_x_diagnostic_set_impl">CXDiagnosticSetImpl</link> <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a8b46051cf84323f5590bd7ac5550e103">ChildDiags</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00054">54</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda"/>    <section>
    <title>Kind</title>
<indexterm><primary>Kind</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>Kind</secondary></indexterm>
<para><computeroutput>enum <link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda">clang::CXDiagnosticImpl::Kind</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>StoredDiagnosticKind</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>StoredDiagnosticKind</secondary></indexterm>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaa0bd35601037c6b3bc0264392e5d77bd6"/>StoredDiagnosticKind</entry><entry></entry></row><row><entry><indexterm><primary>LoadedDiagnosticKind</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>LoadedDiagnosticKind</secondary></indexterm>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaa7cfd2d3ec9530885fe43a0d48de7e58f"/>LoadedDiagnosticKind</entry><entry></entry></row><row><entry><indexterm><primary>CustomNoteDiagnosticKind</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>CustomNoteDiagnosticKind</secondary></indexterm>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaaf20568046c187883803beed039cbc572"/>CustomNoteDiagnosticKind</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00056">56</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
<programlisting>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaa0bd35601037c6b3bc0264392e5d77bd6">StoredDiagnosticKind</link>,&#32;<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaa7cfd2d3ec9530885fe43a0d48de7e58f">LoadedDiagnosticKind</link>,
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cdaaf20568046c187883803beed039cbc572">CustomNoteDiagnosticKind</link>&#32;};
</programlisting></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a49b8d0e09d19369df964fb4b304e1684"/>    <section>
    <title>~CXDiagnosticImpl()</title>
<indexterm><primary>~CXDiagnosticImpl</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>~CXDiagnosticImpl</secondary></indexterm>
<para><computeroutput>CXDiagnosticImpl::~CXDiagnosticImpl ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_index_diagnostic_8cpp_source_1l00037">37</link> of file <link linkend="__c_index_diagnostic_8cpp_source">CIndexDiagnostic.cpp</link>.</para>
<programlisting>00037 {}
</programlisting>    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a4b828845f3ca99d9ba01c5083279850c"/>    <section>
    <title>CXDiagnosticImpl()</title>
<indexterm><primary>CXDiagnosticImpl</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>CXDiagnosticImpl</secondary></indexterm>
<para><computeroutput>clang::CXDiagnosticImpl::CXDiagnosticImpl (<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda">Kind</link> k)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00099">99</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
<programlisting>00099 :&#32;K(k)&#32;{}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1ac1da33a15a858de42c4015a7264caa90"/>    <section>
    <title>append()</title>
<indexterm><primary>append</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>append</secondary></indexterm>
<para><computeroutput>void clang::CXDiagnosticImpl::append (std::unique_ptr&lt; <link linkend="_classclang_1_1_c_x_diagnostic_impl">CXDiagnosticImpl</link> &gt; D)<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00102">102</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
<programlisting>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00103 &#32;&#32;&#32;&#32;<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a8b46051cf84323f5590bd7ac5550e103">ChildDiags</link>.<link linkend="_classclang_1_1_c_x_diagnostic_set_impl_1a48fbd8d5f59446e568395bc0690db789">appendDiagnostic</link>(std::move(D));
00104 &#32;&#32;}
</programlisting><para>
References <link linkend="__c_index_diagnostic_8cpp_source_1l00033">clang::CXDiagnosticSetImpl::appendDiagnostic()</link>, and <link linkend="__c_index_diagnostic_8h_source_1l00100">ChildDiags</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a1fd1ee880f76ddd047a763fdad1e9dc3"/>    <section>
    <title>getCategory()</title>
<indexterm><primary>getCategory</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getCategory</secondary></indexterm>
<para><computeroutput>virtual unsigned clang::CXDiagnosticImpl::getCategory ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the category of the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a3c54fb1ddeadaea6ea08696865267018">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a49ec3ad33b878055764273963ed663f7">clang::CXStoredDiagnostic</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1af5fc17b07ee253ee5ebaaffd8481c11c"/>    <section>
    <title>getCategoryText()</title>
<indexterm><primary>getCategoryText</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getCategoryText</secondary></indexterm>
<para><computeroutput>virtual CXString clang::CXDiagnosticImpl::getCategoryText ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the category string of the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a4ee4446a2717375a88811bda8eb6dca5">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a21f5f3bde553c4e7d30af47283a670d7">clang::CXStoredDiagnostic</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1af56711ab018bcca7e31c5c0589743425"/>    <section>
    <title>getChildDiagnostics()</title>
<indexterm><primary>getChildDiagnostics</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getChildDiagnostics</secondary></indexterm>
<para><computeroutput><link linkend="_classclang_1_1_c_x_diagnostic_set_impl">CXDiagnosticSetImpl</link>&amp; clang::CXDiagnosticImpl::getChildDiagnostics ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00094">94</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
<programlisting>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classclang_1_1_c_x_diagnostic_impl_1a8b46051cf84323f5590bd7ac5550e103">ChildDiags</link>;
00096 &#32;&#32;}
</programlisting><para>
References <link linkend="__c_index_diagnostic_8h_source_1l00100">ChildDiags</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a104a0f5935756ca714dee6f0948573f9"/>    <section>
    <title>getDiagnosticOption()</title>
<indexterm><primary>getDiagnosticOption</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getDiagnosticOption</secondary></indexterm>
<para><computeroutput>virtual CXString clang::CXDiagnosticImpl::getDiagnosticOption (CXString * Disable) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the text for the diagnostic option. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a5bfd490e9b9b3c8244c0168249031fad">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a4703a42f55f87e110462ceaa96841051">clang::CXStoredDiagnostic</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1aa1e009fc05ec6c332234dbf3ec1b03a6"/>    <section>
    <title>getFixIt()</title>
<indexterm><primary>getFixIt</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getFixIt</secondary></indexterm>
<para><computeroutput>virtual CXString clang::CXDiagnosticImpl::getFixIt (unsigned FixIt, CXSourceRange * ReplacementRange) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the FixIt information (source range and inserted text). </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1ada416d8f7f3bb37084c7f70f693be795">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a22c0db95587b752de69ef1054b9dc92e">clang::CXStoredDiagnostic</link>.</para>
<para>
Referenced by <link linkend="__c_index_diagnostic_8cpp_source_1l00430">clang_getDiagnosticFixIt()</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a291e683397c75960d2a722387bc4dca7"/>    <section>
    <title>getKind()</title>
<indexterm><primary>getKind</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getKind</secondary></indexterm>
<para><computeroutput><link linkend="_classclang_1_1_c_x_diagnostic_impl_1a7f5f268f2ce5caa8ba3d99ad9df52cda">Kind</link> clang::CXDiagnosticImpl::getKind ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00092">92</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
<programlisting>00092 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;K;&#32;}
</programlisting><para>
Referenced by <link linkend="__c_index_diagnostic_8h_source_1l00153">clang::CXStoredDiagnostic::classof()</link>, and <link linkend="__c_x_loaded_diagnostic_8h_source_1l00061">clang::CXLoadedDiagnostic::classof()</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1ae82ba92d144e38fcaaec5d472da066e9"/>    <section>
    <title>getLocation()</title>
<indexterm><primary>getLocation</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getLocation</secondary></indexterm>
<para><computeroutput>virtual CXSourceLocation clang::CXDiagnosticImpl::getLocation ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the location of the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1af8351a8c6ff232e82ac58432d440194b">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a3b30ea3018850186f5e2966c561b1a76">clang::CXStoredDiagnostic</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1ab80ce934006ca4fb0f9d531586b9162e"/>    <section>
    <title>getNumFixIts()</title>
<indexterm><primary>getNumFixIts</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getNumFixIts</secondary></indexterm>
<para><computeroutput>virtual unsigned clang::CXDiagnosticImpl::getNumFixIts ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the number of FixIts. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a24271e8676870afd1c75d6ee1133396e">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1abbc2d1e5efc46b3e6e2ec38121fc9d76">clang::CXStoredDiagnostic</link>.</para>
<para>
Referenced by <link linkend="__c_index_diagnostic_8cpp_source_1l00430">clang_getDiagnosticFixIt()</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1add19591d7940fda585a6a69f87b927d8"/>    <section>
    <title>getNumRanges()</title>
<indexterm><primary>getNumRanges</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getNumRanges</secondary></indexterm>
<para><computeroutput>virtual unsigned clang::CXDiagnosticImpl::getNumRanges ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the number of source ranges for the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1abc268da8fbd76ad5b94c733f76baa463">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1aa6beb55a1e88d3176c79fe0133a36811">clang::CXStoredDiagnostic</link>.</para>
<para>
Referenced by <link linkend="__c_index_diagnostic_8cpp_source_1l00417">clang_getDiagnosticRange()</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a49fc85b074cacc4e1c44dd7c6b540e53"/>    <section>
    <title>getRange()</title>
<indexterm><primary>getRange</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getRange</secondary></indexterm>
<para><computeroutput>virtual CXSourceRange clang::CXDiagnosticImpl::getRange (unsigned Range) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the source ranges for the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1aed464b92b9a60863af495242983f6763">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a16d1af26c211acd8531d20334b56f72e">clang::CXStoredDiagnostic</link>.</para>
<para>
Referenced by <link linkend="__c_index_diagnostic_8cpp_source_1l00417">clang_getDiagnosticRange()</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a87553d5e20319e0a3e480cb214cfb6d7"/>    <section>
    <title>getSeverity()</title>
<indexterm><primary>getSeverity</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getSeverity</secondary></indexterm>
<para><computeroutput>virtual CXDiagnosticSeverity clang::CXDiagnosticImpl::getSeverity ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the severity of the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a6f93075048fc3575fdf1d028ee0d45dd">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a33528d6590cb98adba56982ca34fa512">clang::CXStoredDiagnostic</link>.</para>
    </section><anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a477f39524bfa199ed9180ed85ac4d3d8"/>    <section>
    <title>getSpelling()</title>
<indexterm><primary>getSpelling</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>getSpelling</secondary></indexterm>
<para><computeroutput>virtual CXString clang::CXDiagnosticImpl::getSpelling ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Return the spelling of the diagnostic. </para>
</para>
<para>
Implemented in <link linkend="_classclang_1_1_c_x_loaded_diagnostic_1a4f6c0b425afa599a837958dea19d5edd">clang::CXLoadedDiagnostic</link>, and <link linkend="_structclang_1_1_c_x_stored_diagnostic_1a7155edd88cffff30ab817a538edd02d8">clang::CXStoredDiagnostic</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classclang_1_1_c_x_diagnostic_impl_1a8b46051cf84323f5590bd7ac5550e103"/>    <section>
    <title>ChildDiags</title>
<indexterm><primary>ChildDiags</primary><secondary>clang::CXDiagnosticImpl</secondary></indexterm>
<indexterm><primary>clang::CXDiagnosticImpl</primary><secondary>ChildDiags</secondary></indexterm>
<para><computeroutput><link linkend="_classclang_1_1_c_x_diagnostic_set_impl">CXDiagnosticSetImpl</link> clang::CXDiagnosticImpl::ChildDiags<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__c_index_diagnostic_8h_source_1l00100">100</link> of file <link linkend="__c_index_diagnostic_8h_source">CIndexDiagnostic.h</link>.</para>
<para>
Referenced by <link linkend="__c_index_diagnostic_8h_source_1l00102">append()</link>, and <link linkend="__c_index_diagnostic_8h_source_1l00094">getChildDiagnostics()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/maximilian/clang-llvm/clang/tools/libclang/<link linkend="__c_index_diagnostic_8h">CIndexDiagnostic.h</link>/Users/maximilian/clang-llvm/clang/tools/libclang/<link linkend="__c_index_diagnostic_8cpp">CIndexDiagnostic.cpp</link></section>
</section>
