<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__diag_tool_8h_source" xml:lang="en-US">
<title>DiagTool.h</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/diagtool/DiagTool.h</primary></indexterm>
<programlisting>00001 <emphasis role="comment">//===-&#32;DiagTool.h&#32;-&#32;Classes&#32;for&#32;defining&#32;diagtool&#32;tools&#32;-------------------===//</emphasis>
00002 <emphasis role="comment">//</emphasis>
00003 <emphasis role="comment">//&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
00004 <emphasis role="comment">//&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
00005 <emphasis role="comment">//&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
00006 <emphasis role="comment">//</emphasis>
00007 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00008 <emphasis role="comment">//</emphasis>
00009 <emphasis role="comment">//&#32;This&#32;file&#32;implements&#32;the&#32;boilerplate&#32;for&#32;defining&#32;diagtool&#32;tools.</emphasis>
00010 <emphasis role="comment">//</emphasis>
00011 <emphasis role="comment">//===----------------------------------------------------------------------===//</emphasis>
00012 
00013 <emphasis role="preprocessor">#ifndef&#32;LLVM_CLANG_TOOLS_DIAGTOOL_DIAGTOOL_H</emphasis>
00014 <emphasis role="preprocessor">#define&#32;LLVM_CLANG_TOOLS_DIAGTOOL_DIAGTOOL_H</emphasis>
00015 
00016 <emphasis role="preprocessor">#include&#32;&quot;llvm/ADT/StringRef.h&quot;</emphasis>
00017 <emphasis role="preprocessor">#include&#32;&quot;llvm/Support/ManagedStatic.h&quot;</emphasis>
00018 <emphasis role="preprocessor">#include&#32;&quot;llvm/Support/raw_ostream.h&quot;</emphasis>
00019 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
00020 
00021 
00022 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacediagtool">diagtool</link>&#32;{
00023 
<anchor xml:id="__diag_tool_8h_source_1l00024"/><link linkend="_classdiagtool_1_1_diag_tool">00024</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdiagtool_1_1_diag_tool">DiagTool</link>&#32;{
00025 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;cmd;
00026 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;description;
00027 <emphasis role="keyword">public</emphasis>:
00028 &#32;&#32;<link linkend="_classdiagtool_1_1_diag_tool_1a7b882ee66061b88f2e303dcb214b8c6f">DiagTool</link>(llvm::StringRef&#32;toolCmd,&#32;llvm::StringRef&#32;toolDesc);
00029 &#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<link linkend="_classdiagtool_1_1_diag_tool_1ad1b55bb70cc53b6387ca72af0eaa013b">~DiagTool</link>();
00030 &#32;&#32;
<anchor xml:id="__diag_tool_8h_source_1l00031"/><link linkend="_classdiagtool_1_1_diag_tool_1a1673876dd0a23c6dc5a1fcc65eb48af0">00031</link> &#32;&#32;llvm::StringRef&#32;<link linkend="_classdiagtool_1_1_diag_tool_1a1673876dd0a23c6dc5a1fcc65eb48af0">getName</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;cmd;&#32;}&#32;&#32;
<anchor xml:id="__diag_tool_8h_source_1l00032"/><link linkend="_classdiagtool_1_1_diag_tool_1a3354e06ecca922a78e610f27754dcaff">00032</link> &#32;&#32;llvm::StringRef&#32;<link linkend="_classdiagtool_1_1_diag_tool_1a3354e06ecca922a78e610f27754dcaff">getDescription</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;description;&#32;}&#32;&#32;
00033 
<anchor xml:id="__diag_tool_8h_source_1l00034"/><link linkend="_classdiagtool_1_1_diag_tool_1a3c6dfad062db84a762e2e4a81de50196">00034</link> &#32;&#32;<emphasis role="keyword">virtual</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_classdiagtool_1_1_diag_tool_1a3c6dfad062db84a762e2e4a81de50196">run</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*argv[],&#32;llvm::raw_ostream&#32;&amp;out)&#32;=&#32;0;
00035 };
00036 &#32;&#32;
<anchor xml:id="__diag_tool_8h_source_1l00037"/><link linkend="_classdiagtool_1_1_diag_tools">00037</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdiagtool_1_1_diag_tools">DiagTools</link>&#32;{
00038 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*tools;
00039 <emphasis role="keyword">public</emphasis>:
00040 &#32;&#32;<link linkend="_classdiagtool_1_1_diag_tools_1a3d54b2f91b0ac6e5e687fa1cd20f931b">DiagTools</link>();
00041 &#32;&#32;<link linkend="_classdiagtool_1_1_diag_tools_1ad08eda204c1bf21ee24ab1aaed75a20f">~DiagTools</link>();
00042 &#32;&#32;
00043 &#32;&#32;<link linkend="_classdiagtool_1_1_diag_tool">DiagTool</link>&#32;*<link linkend="_classdiagtool_1_1_diag_tools_1ac78bdbd165a94e9a0bf170344437f02a">getTool</link>(llvm::StringRef&#32;toolCmd);
00044 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdiagtool_1_1_diag_tools_1a4b114fe81b04ff1903766778967b6288">registerTool</link>(<link linkend="_classdiagtool_1_1_diag_tool">DiagTool</link>&#32;*tool);&#32;&#32;
00045 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classdiagtool_1_1_diag_tools_1a6e18f4876ef5c1f90754b96dac399f1a">printCommands</link>(llvm::raw_ostream&#32;&amp;out);&#32;&#32;
00046 };
00047 
00048 <emphasis role="keyword">extern</emphasis>&#32;llvm::ManagedStatic&lt;DiagTools&gt;&#32;<link linkend="_namespacediagtool_1a4962265c638f02cbb1aea128417c4ae7">diagTools</link>;
00049 
00050 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;DIAGTOOL&gt;
<anchor xml:id="__diag_tool_8h_source_1l00051"/><link linkend="_classdiagtool_1_1_register_diag_tool">00051</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classdiagtool_1_1_register_diag_tool">RegisterDiagTool</link>&#32;{
00052 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="__diag_tool_8h_source_1l00053"/><link linkend="_classdiagtool_1_1_register_diag_tool_1aa52cb707def6e759f9c52c6ecaf57c04">00053</link> &#32;&#32;<link linkend="_classdiagtool_1_1_register_diag_tool_1aa52cb707def6e759f9c52c6ecaf57c04">RegisterDiagTool</link>()&#32;{&#32;<link linkend="_namespacediagtool_1a4962265c638f02cbb1aea128417c4ae7">diagTools</link>-&gt;registerTool(<emphasis role="keyword">new</emphasis>&#32;DIAGTOOL());&#32;}
00054 };
00055 
00056 }&#32;<emphasis role="comment">//&#32;end&#32;diagtool&#32;namespace</emphasis>
00057 
<anchor xml:id="__diag_tool_8h_source_1l00058"/><link linkend="__diag_tool_8h_1a688f0ab91a98779498cd51c4a4395a06">00058</link> <emphasis role="preprocessor">#define&#32;DEF_DIAGTOOL(NAME,&#32;DESC,&#32;CLSNAME)\</emphasis>
00059 <emphasis role="preprocessor">namespace&#32;{\</emphasis>
00060 <emphasis role="preprocessor">class&#32;CLSNAME&#32;:&#32;public&#32;diagtool::DiagTool&#32;{\</emphasis>
00061 <emphasis role="preprocessor">public:\</emphasis>
00062 <emphasis role="preprocessor">&#32;&#32;CLSNAME()&#32;:&#32;DiagTool(NAME,&#32;DESC)&#32;{}\</emphasis>
00063 <emphasis role="preprocessor">&#32;&#32;virtual&#32;~CLSNAME()&#32;{}\</emphasis>
00064 <emphasis role="preprocessor">&#32;&#32;int&#32;run(unsigned&#32;argc,&#32;char&#32;*argv[],&#32;llvm::raw_ostream&#32;&amp;out)&#32;override;\</emphasis>
00065 <emphasis role="preprocessor">};\</emphasis>
00066 <emphasis role="preprocessor">diagtool::RegisterDiagTool&lt;CLSNAME&gt;&#32;Register##CLSNAME;\</emphasis>
00067 <emphasis role="preprocessor">}</emphasis>
00068 
00069 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
