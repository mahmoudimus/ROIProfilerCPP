<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test" xml:lang="en-US">
<title>tests.functional.cases.test_create_cdb.ResumeFeatureTest Class Reference</title>
<indexterm><primary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</primary></indexterm>
<para>Inheritance diagram for tests.functional.cases.test_create_cdb.ResumeFeatureTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a3a4acee9885ced3aec9e62a3fe914cb6">test_overwrite_existing_cdb</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a5901a0b9ab366118090b1ab8e39af5bb">test_append_to_existing_cdb</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">run_intercept</link> (tmpdir, target, args)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1ad1957e6ee9ed141293daecf6a5f0934e">count_entries</link> (filename)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00096">96</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1ad1957e6ee9ed141293daecf6a5f0934e"/>    <section>
    <title>count_entries()</title>
<indexterm><primary>count_entries</primary><secondary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</primary><secondary>count_entries</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ResumeFeatureTest.count_entries ( filename)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00106">106</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00106 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>count_entries(filename):
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename,&#32;<emphasis role="stringliteral">&apos;r&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handler:
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;json.load(handler)
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(content)
00110 
</programlisting><para>
References <link linkend="_startfile_8py_source_1l00206">startfile.open()</link>.</para>
<para>
Referenced by <link linkend="_test__create__cdb_8py_source_1l00119">tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_append_to_existing_cdb()</link>, <link linkend="_test__create__cdb_8py_source_1l00067">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_not_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00111">tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_overwrite_existing_cdb()</link>, <link linkend="_test__create__cdb_8py_source_1l00029">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00061">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_all_in_one()</link>, <link linkend="_test__create__cdb_8py_source_1l00052">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_on_empty_env()</link>, <link linkend="_test__create__cdb_8py_source_1l00045">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_parallel()</link>, and <link linkend="_test__create__cdb_8py_source_1l00035">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_with_wrapper()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca"/>    <section>
    <title>run_intercept()</title>
<indexterm><primary>run_intercept</primary><secondary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</primary><secondary>run_intercept</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ResumeFeatureTest.run_intercept ( tmpdir,  target,  args)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00098">98</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00098 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>run_intercept(tmpdir,&#32;target,&#32;args):
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[target]
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1adc1114de8d38e60438160311d84c8d43">silent_check_call</link>(
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;args&#32;+&#32;make)
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result
00104 
</programlisting><para>
References <link linkend="_tests_2functional_2cases_2____init_____8py_source_1l00023">tests.functional.cases.make_args()</link>, and <link linkend="_tests_2functional_2cases_2____init_____8py_source_1l00035">tests.functional.cases.silent_check_call()</link>.</para>
<para>
Referenced by <link linkend="_test__create__cdb_8py_source_1l00154">tests.functional.cases.test_create_cdb.ResultFormatingTest.assert_command_creates_entry()</link>, <link linkend="_test__create__cdb_8py_source_1l00139">tests.functional.cases.test_create_cdb.ResultFormatingTest.assert_creates_number_of_entries()</link>, <link linkend="_test__create__cdb_8py_source_1l00119">tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_append_to_existing_cdb()</link>, <link linkend="_test__create__cdb_8py_source_1l00090">tests.functional.cases.test_create_cdb.ExitCodeTest.test_not_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00111">tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_overwrite_existing_cdb()</link>, <link linkend="_test__create__cdb_8py_source_1l00029">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00085">tests.functional.cases.test_create_cdb.ExitCodeTest.test_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00061">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_all_in_one()</link>, and <link linkend="_test__create__cdb_8py_source_1l00045">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_parallel()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a5901a0b9ab366118090b1ab8e39af5bb"/>    <section>
    <title>test_append_to_existing_cdb()</title>
<indexterm><primary>test_append_to_existing_cdb</primary><secondary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</primary><secondary>test_append_to_existing_cdb</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_append_to_existing_cdb ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00119">119</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00119 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_append_to_existing_cdb(self):
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>,&#32;[])
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>,&#32;[<emphasis role="stringliteral">&apos;--append&apos;</emphasis>])
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.count_entries(result))
00126 
00127 
</programlisting><para>
References <link linkend="_test__create__cdb_8py_source_1l00024">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.count_entries()</link>, <link linkend="_test__create__cdb_8py_source_1l00106">tests.functional.cases.test_create_cdb.ResumeFeatureTest.count_entries()</link>, <link linkend="_test__create__cdb_8py_source_1l00016">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00130">tests.functional.cases.test_create_cdb.ResultFormatingTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00079">tests.functional.cases.test_create_cdb.ExitCodeTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00098">tests.functional.cases.test_create_cdb.ResumeFeatureTest.run_intercept()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a3a4acee9885ced3aec9e62a3fe914cb6"/>    <section>
    <title>test_overwrite_existing_cdb()</title>
<indexterm><primary>test_overwrite_existing_cdb</primary><secondary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ResumeFeatureTest</primary><secondary>test_overwrite_existing_cdb</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_overwrite_existing_cdb ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00111">111</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00111 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_overwrite_existing_cdb(self):
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>,&#32;[])
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>,&#32;[])
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(2,&#32;self.count_entries(result))
00118 
</programlisting><para>
References <link linkend="_test__create__cdb_8py_source_1l00024">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.count_entries()</link>, <link linkend="_test__create__cdb_8py_source_1l00106">tests.functional.cases.test_create_cdb.ResumeFeatureTest.count_entries()</link>, <link linkend="_test__create__cdb_8py_source_1l00016">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00130">tests.functional.cases.test_create_cdb.ResultFormatingTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00079">tests.functional.cases.test_create_cdb.ExitCodeTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00098">tests.functional.cases.test_create_cdb.ResumeFeatureTest.run_intercept()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/<link linkend="_test__create__cdb_8py">test_create_cdb.py</link></section>
</section>
