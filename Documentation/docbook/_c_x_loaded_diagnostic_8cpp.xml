<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__c_x_loaded_diagnostic_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/libclang/CXLoadedDiagnostic.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/libclang/CXLoadedDiagnostic.cpp</primary></indexterm>
<programlisting>#include &quot;CXLoadedDiagnostic.h&quot;
#include &quot;CXString.h&quot;
#include &quot;clang/Basic/Diagnostic.h&quot;
#include &quot;clang/Basic/FileManager.h&quot;
#include &quot;clang/Basic/LLVM.h&quot;
#include &quot;clang/Frontend/SerializedDiagnosticReader.h&quot;
#include &quot;clang/Frontend/SerializedDiagnostics.h&quot;
#include &quot;llvm/ADT/STLExtras.h&quot;
#include &quot;llvm/ADT/StringRef.h&quot;
#include &quot;llvm/ADT/Twine.h&quot;
#include &quot;llvm/Bitstream/BitstreamReader.h&quot;
#include &quot;llvm/Support/ErrorHandling.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__c_x_loaded_diagnostic_8cpp_1a72fdc082560f7761ef5dd4e0b6efd0ad">CASE</link>(X)   case serialized_diags::X: return CXDiagnostic_##X;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef llvm::DenseMap&lt; unsigned, const char * &gt; <link linkend="__c_x_loaded_diagnostic_8cpp_1a43f230387ba6f0bf2e696b6029b136bb">Strings</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>CXDiagnosticSet <link linkend="__c_x_loaded_diagnostic_8cpp_1a46a35c93cdedc31028100374d7856c8b">clang_loadDiagnostics</link> (const char *file, enum CXLoadDiag_Error *error, CXString *errorString)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__c_x_loaded_diagnostic_8cpp_1a72fdc082560f7761ef5dd4e0b6efd0ad"/>    <section>
    <title>CASE</title>
<indexterm><primary>CASE</primary><secondary>CXLoadedDiagnostic.cpp</secondary></indexterm>
<indexterm><primary>CXLoadedDiagnostic.cpp</primary><secondary>CASE</secondary></indexterm>
<para><computeroutput>#define CASE( X)   case serialized_diags::X: return CXDiagnostic_##X;</computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="__c_x_loaded_diagnostic_8cpp_1a43f230387ba6f0bf2e696b6029b136bb"/>    <section>
    <title>Strings</title>
<indexterm><primary>Strings</primary><secondary>CXLoadedDiagnostic.cpp</secondary></indexterm>
<indexterm><primary>CXLoadedDiagnostic.cpp</primary><secondary>Strings</secondary></indexterm>
<para><computeroutput>typedef llvm::DenseMap&lt;unsigned, const char *&gt; <link linkend="__c_x_loaded_diagnostic_8cpp_1a43f230387ba6f0bf2e696b6029b136bb">Strings</link></computeroutput></para><para>
Definition at line <link linkend="__c_x_loaded_diagnostic_8cpp_source_1l00032">32</link> of file <link linkend="__c_x_loaded_diagnostic_8cpp_source">CXLoadedDiagnostic.cpp</link>.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__c_x_loaded_diagnostic_8cpp_1a46a35c93cdedc31028100374d7856c8b"/>    <section>
    <title>clang_loadDiagnostics()</title>
<indexterm><primary>clang_loadDiagnostics</primary><secondary>CXLoadedDiagnostic.cpp</secondary></indexterm>
<indexterm><primary>CXLoadedDiagnostic.cpp</primary><secondary>clang_loadDiagnostics</secondary></indexterm>
<para><computeroutput>CXDiagnosticSet clang_loadDiagnostics (const char * file, enum CXLoadDiag_Error * error, CXString * errorString)</computeroutput></para><para>
Definition at line <link linkend="__c_x_loaded_diagnostic_8cpp_source_1l00389">389</link> of file <link linkend="__c_x_loaded_diagnostic_8cpp_source">CXLoadedDiagnostic.cpp</link>.</para>
<programlisting>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00392 &#32;&#32;DiagLoader&#32;L(error,&#32;errorString);
00393 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;L.load(file);
00394 }
</programlisting></section>
</section>
</section>
