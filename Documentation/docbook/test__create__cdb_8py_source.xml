<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_test__create__cdb_8py_source" xml:lang="en-US">
<title>test_create_cdb.py</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/test_create_cdb.py</primary></indexterm>
<programlisting><anchor xml:id="_test__create__cdb_8py_source_1l00001"/><link linkend="_namespacetests_1_1functional_1_1cases_1_1test__create__cdb">00001</link> <emphasis role="comment">#&#32;-*-&#32;coding:&#32;utf-8&#32;-*-</emphasis>
00002 <emphasis role="comment">#&#32;Part&#32;of&#32;the&#32;LLVM&#32;Project,&#32;under&#32;the&#32;Apache&#32;License&#32;v2.0&#32;with&#32;LLVM&#32;Exceptions.</emphasis>
00003 <emphasis role="comment">#&#32;See&#32;https://llvm.org/LICENSE.txt&#32;for&#32;license&#32;information.</emphasis>
00004 <emphasis role="comment">#&#32;SPDX-License-Identifier:&#32;Apache-2.0&#32;WITH&#32;LLVM-exception</emphasis>
00005 
00006 <emphasis role="keyword">import</emphasis>&#32;libear
00007 <emphasis role="keyword">from</emphasis>&#32;.&#32;<emphasis role="keyword">import</emphasis>&#32;make_args,&#32;silent_check_call,&#32;silent_call,&#32;create_empty_file
00008 <emphasis role="keyword">import</emphasis>&#32;unittest
00009 
00010 <emphasis role="keyword">import</emphasis>&#32;os.path
00011 <emphasis role="keyword">import</emphasis>&#32;json
00012 
00013 
<anchor xml:id="_test__create__cdb_8py_source_1l00014"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test">00014</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test">CompilationDatabaseTest</link>(unittest.TestCase):
00015 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__create__cdb_8py_source_1l00016"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1ab0fa55e73b970ea07fa6ad237ef81ead">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1ab0fa55e73b970ea07fa6ad237ef81ead">run_intercept</link>(tmpdir,&#32;args):
00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;args
00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1adc1114de8d38e60438160311d84c8d43">silent_check_call</link>(
00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;make)
00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result
00022 
00023 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__create__cdb_8py_source_1l00024"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>(filename):
00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename,&#32;<emphasis role="stringliteral">&apos;r&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handler:
00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;json.load(handler)
00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(content)
00028 
<anchor xml:id="_test__create__cdb_8py_source_1l00029"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a4f24dff74efed346dd1c4221e49ec02a">00029</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a4f24dff74efed346dd1c4221e49ec02a">test_successful_build</link>(self):
00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1ab0fa55e73b970ea07fa6ad237ef81ead">run_intercept</link>run_intercept(tmpdir,&#32;[<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>])
00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>count_entries(result))
00034 
<anchor xml:id="_test__create__cdb_8py_source_1l00035"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a3004038d86997cc6b78d7c78160e9652">00035</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a3004038d86997cc6b78d7c78160e9652">test_successful_build_with_wrapper</link>(self):
00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>]
00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1adc1114de8d38e60438160311d84c8d43">silent_check_call</link>([<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result,
00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;--override-compiler&apos;</emphasis>]&#32;+&#32;make)
00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>count_entries(result))
00043 
00044 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@unittest.skipIf(os.getenv(&apos;TRAVIS&apos;)</emphasis>,&#32;<emphasis role="stringliteral">&apos;ubuntu&#32;make&#32;return&#32;-11&apos;</emphasis>)
<anchor xml:id="_test__create__cdb_8py_source_1l00045"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a327a8e6d3247c0ed9b769110073cf2ab">00045</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a327a8e6d3247c0ed9b769110073cf2ab">test_successful_build_parallel</link>(self):
00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1ab0fa55e73b970ea07fa6ad237ef81ead">run_intercept</link>run_intercept(tmpdir,&#32;[<emphasis role="stringliteral">&apos;-j&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;4&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>])
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>count_entries(result))
00050 
00051 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@unittest.skipIf(os.getenv(&apos;TRAVIS&apos;)</emphasis>,&#32;<emphasis role="stringliteral">&apos;ubuntu&#32;env&#32;remove&#32;clang&#32;from&#32;path&apos;</emphasis>)
<anchor xml:id="_test__create__cdb_8py_source_1l00052"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a1d9108fa784cd958354e9273c1c2a47f">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a1d9108fa784cd958354e9273c1c2a47f">test_successful_build_on_empty_env</link>(self):
00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;CC=clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>]
00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1adc1114de8d38e60438160311d84c8d43">silent_check_call</link>([<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result,
00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;env&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-&apos;</emphasis>]&#32;+&#32;make)
00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>count_entries(result))
00060 
<anchor xml:id="_test__create__cdb_8py_source_1l00061"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a1bd86f4f40021437f225ad99ef576e65">00061</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a1bd86f4f40021437f225ad99ef576e65">test_successful_build_all_in_one</link>(self):
00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1ab0fa55e73b970ea07fa6ad237ef81ead">run_intercept</link>run_intercept(tmpdir,&#32;[<emphasis role="stringliteral">&apos;build_all_in_one&apos;</emphasis>])
00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>count_entries(result))
00066 
<anchor xml:id="_test__create__cdb_8py_source_1l00067"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a4eef84c582e392612012338d18dc90cb">00067</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a4eef84c582e392612012338d18dc90cb">test_not_successful_build</link>(self):
00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[<emphasis role="stringliteral">&apos;build_broken&apos;</emphasis>]
00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a7938ec1ad248e0480730d43397d6f3cd">silent_call</link>(
00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;make)
00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(2,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_compilation_database_test_1a9f70ec9474f064f6f774c2245aa52776">count_entries</link>count_entries(result))
00075 
00076 
<anchor xml:id="_test__create__cdb_8py_source_1l00077"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test">00077</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test">ExitCodeTest</link>(unittest.TestCase):
00078 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__create__cdb_8py_source_1l00079"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1adc7a0d85a66abcc51f17751aed5d2ccc">00079</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1adc7a0d85a66abcc51f17751aed5d2ccc">run_intercept</link>(tmpdir,&#32;target):
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[target]
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a7938ec1ad248e0480730d43397d6f3cd">silent_call</link>(
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;make)
00084 
<anchor xml:id="_test__create__cdb_8py_source_1l00085"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a65145e515965787d1047c3d3b4a3dbc2">00085</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a65145e515965787d1047c3d3b4a3dbc2">test_successful_build</link>(self):
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exitcode&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1adc7a0d85a66abcc51f17751aed5d2ccc">run_intercept</link>run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>)
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(exitcode)
00089 
<anchor xml:id="_test__create__cdb_8py_source_1l00090"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a14bcee8b93fc97eea0583e240b424b59">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a14bcee8b93fc97eea0583e240b424b59">test_not_successful_build</link>(self):
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exitcode&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1adc7a0d85a66abcc51f17751aed5d2ccc">run_intercept</link>run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_broken&apos;</emphasis>)
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(exitcode)
00094 
00095 
<anchor xml:id="_test__create__cdb_8py_source_1l00096"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test">00096</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test">ResumeFeatureTest</link>(unittest.TestCase):
00097 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__create__cdb_8py_source_1l00098"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">00098</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">run_intercept</link>(tmpdir,&#32;target,&#32;args):
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[target]
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1adc1114de8d38e60438160311d84c8d43">silent_check_call</link>(
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;args&#32;+&#32;make)
00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result
00104 
00105 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__create__cdb_8py_source_1l00106"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1ad1957e6ee9ed141293daecf6a5f0934e">00106</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1ad1957e6ee9ed141293daecf6a5f0934e">count_entries</link>(filename):
00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename,&#32;<emphasis role="stringliteral">&apos;r&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handler:
00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;json.load(handler)
00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;len(content)
00110 
<anchor xml:id="_test__create__cdb_8py_source_1l00111"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a3a4acee9885ced3aec9e62a3fe914cb6">00111</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a3a4acee9885ced3aec9e62a3fe914cb6">test_overwrite_existing_cdb</link>(self):
00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">run_intercept</link>run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>,&#32;[])
00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">run_intercept</link>run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>,&#32;[])
00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(2,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1ad1957e6ee9ed141293daecf6a5f0934e">count_entries</link>count_entries(result))
00118 
<anchor xml:id="_test__create__cdb_8py_source_1l00119"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a5901a0b9ab366118090b1ab8e39af5bb">00119</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a5901a0b9ab366118090b1ab8e39af5bb">test_append_to_existing_cdb</link>(self):
00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">run_intercept</link>run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>,&#32;[])
00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1a0bef30c9729b6e2f12821ad2b4dd61ca">run_intercept</link>run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_regular&apos;</emphasis>,&#32;[<emphasis role="stringliteral">&apos;--append&apos;</emphasis>])
00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(os.path.isfile(result))
00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(5,&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_resume_feature_test_1ad1957e6ee9ed141293daecf6a5f0934e">count_entries</link>count_entries(result))
00126 
00127 
<anchor xml:id="_test__create__cdb_8py_source_1l00128"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test">00128</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test">ResultFormatingTest</link>(unittest.TestCase):
00129 &#32;&#32;&#32;&#32;<emphasis role="preprocessor">@staticmethod</emphasis>
<anchor xml:id="_test__create__cdb_8py_source_1l00130"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1ac5219f26deb0463ebe4fce6e2d376eb1">00130</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1ac5219f26deb0463ebe4fce6e2d376eb1">run_intercept</link>(tmpdir,&#32;command):
00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1adc1114de8d38e60438160311d84c8d43">silent_check_call</link>(
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;command,
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cwd=tmpdir)
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(result,&#32;<emphasis role="stringliteral">&apos;r&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handler:
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;json.load(handler)
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;content
00138 
<anchor xml:id="_test__create__cdb_8py_source_1l00139"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a05313ebbcbb45ee6c8a3e20379a590e5">00139</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a05313ebbcbb45ee6c8a3e20379a590e5">assert_creates_number_of_entries</link>(self,&#32;command,&#32;count):
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>)
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a329bfe4766e9dade55f5b4e0ece589e1">create_empty_file</link>(filename)
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;command.append(filename)
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd&#32;=&#32;[<emphasis role="stringliteral">&apos;sh&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>.join(command)]
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1ac5219f26deb0463ebe4fce6e2d376eb1">run_intercept</link>run_intercept(tmpdir,&#32;cmd)
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(count,&#32;len(cdb))
00147 
<anchor xml:id="_test__create__cdb_8py_source_1l00148"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1aa0368424008a7a2d0049fb2b5d93ddf5">00148</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1aa0368424008a7a2d0049fb2b5d93ddf5">test_filter_preprocessor_only_calls</link>(self):
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a05313ebbcbb45ee6c8a3e20379a590e5">assert_creates_number_of_entries</link>assert_creates_number_of_entries([<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>],&#32;1)
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a05313ebbcbb45ee6c8a3e20379a590e5">assert_creates_number_of_entries</link>assert_creates_number_of_entries([<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-E&apos;</emphasis>],&#32;0)
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a05313ebbcbb45ee6c8a3e20379a590e5">assert_creates_number_of_entries</link>assert_creates_number_of_entries([<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-M&apos;</emphasis>],&#32;0)
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a05313ebbcbb45ee6c8a3e20379a590e5">assert_creates_number_of_entries</link>assert_creates_number_of_entries([<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-MM&apos;</emphasis>],&#32;0)
00153 
<anchor xml:id="_test__create__cdb_8py_source_1l00154"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">00154</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>(self,&#32;command,&#32;expected):
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;os.path.join(tmpdir,&#32;command[-1])
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a329bfe4766e9dade55f5b4e0ece589e1">create_empty_file</link>(filename)
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cmd&#32;=&#32;[<emphasis role="stringliteral">&apos;sh&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>.join(command)]
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cdb&#32;=&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1ac5219f26deb0463ebe4fce6e2d376eb1">run_intercept</link>run_intercept(tmpdir,&#32;cmd)
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>.join(expected),&#32;cdb[0][<emphasis role="stringliteral">&apos;command&apos;</emphasis>])
00161 
<anchor xml:id="_test__create__cdb_8py_source_1l00162"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a7d4bbb471c2b70ca55e178544b31739b">00162</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a7d4bbb471c2b70ca55e178544b31739b">test_filter_preprocessor_flags</link>(self):
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-MD&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-MMD&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-MD&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-MF&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.d&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00172 
<anchor xml:id="_test__create__cdb_8py_source_1l00173"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a18b12b9f78f21ba8bde4119e0558c246">00173</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a18b12b9f78f21ba8bde4119e0558c246">test_pass_language_flag</link>(self):
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-x&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-x&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00180 
<anchor xml:id="_test__create__cdb_8py_source_1l00181"/><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a8b01ca9cbab8435390e70c997c9a9c7a">00181</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a8b01ca9cbab8435390e70c997c9a9c7a">test_pass_arch_flags</link>(self):
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;i386&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;i386&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.<link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_result_formating_test_1a1163c3ebe8be908048aa9f8e4167fccc">assert_command_creates_entry</link>assert_command_creates_entry(
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;i386&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;armv7l&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>],
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;cc&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-c&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;i386&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-arch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;armv7l&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;test.c&apos;</emphasis>])
</programlisting></section>
