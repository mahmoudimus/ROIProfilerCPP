<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classlibscanbuild_1_1arguments_1_1_append_comma_separated" xml:lang="en-US">
<title>libscanbuild.arguments.AppendCommaSeparated Class Reference</title>
<indexterm><primary>libscanbuild.arguments.AppendCommaSeparated</primary></indexterm>
<para>Inheritance diagram for libscanbuild.arguments.AppendCommaSeparated:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classlibscanbuild_1_1arguments_1_1_append_comma_separated.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classlibscanbuild_1_1arguments_1_1_append_comma_separated_1a8db7b5b464f37684eb33a9dc35094c92">__call__</link> (self, __parser, namespace, values, __option_string)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para><literallayout><computeroutput> argparse Action class to support multiple comma separated lists. </computeroutput></literallayout> </para>
<para>
Definition at line <link linkend="_arguments_8py_source_1l00480">480</link> of file <link linkend="_arguments_8py_source">arguments.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classlibscanbuild_1_1arguments_1_1_append_comma_separated_1a8db7b5b464f37684eb33a9dc35094c92"/>    <section>
    <title>__call__()</title>
<indexterm><primary>__call__</primary><secondary>libscanbuild.arguments.AppendCommaSeparated</secondary></indexterm>
<indexterm><primary>libscanbuild.arguments.AppendCommaSeparated</primary><secondary>__call__</secondary></indexterm>
<para><computeroutput>def libscanbuild.arguments.AppendCommaSeparated.__call__ ( self,  __parser,  namespace,  values,  __option_string)</computeroutput></para><para>
Definition at line <link linkend="_arguments_8py_source_1l00483">483</link> of file <link linkend="_arguments_8py_source">arguments.py</link>.</para>
<programlisting>00483 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>__call__(self,&#32;__parser,&#32;namespace,&#32;values,&#32;__option_string):
00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;getattr(obj,&#32;attr,&#32;default)&#32;does&#32;not&#32;really&#32;returns&#32;default&#32;but&#32;none</emphasis>
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;getattr(namespace,&#32;self.dest,&#32;<emphasis role="keywordtype">None</emphasis>)&#32;<emphasis role="keywordflow">is</emphasis>&#32;<emphasis role="keywordtype">None</emphasis>:
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setattr(namespace,&#32;self.dest,&#32;[])
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;once&#32;it&apos;s&#32;fixed&#32;we&#32;can&#32;use&#32;as&#32;expected</emphasis>
00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actual&#32;=&#32;getattr(namespace,&#32;self.dest)
00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;actual.extend(values.split(<emphasis role="stringliteral">&apos;,&apos;</emphasis>))
00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;setattr(namespace,&#32;self.dest,&#32;actual)
00491 
00492 
</programlisting></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/lib/libscanbuild/<link linkend="_arguments_8py">arguments.py</link></section>
</section>
