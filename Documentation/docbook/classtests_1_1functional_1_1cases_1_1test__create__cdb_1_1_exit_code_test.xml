<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test" xml:lang="en-US">
<title>tests.functional.cases.test_create_cdb.ExitCodeTest Class Reference</title>
<indexterm><primary>tests.functional.cases.test_create_cdb.ExitCodeTest</primary></indexterm>
<para>Inheritance diagram for tests.functional.cases.test_create_cdb.ExitCodeTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a65145e515965787d1047c3d3b4a3dbc2">test_successful_build</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a14bcee8b93fc97eea0583e240b424b59">test_not_successful_build</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1adc7a0d85a66abcc51f17751aed5d2ccc">run_intercept</link> (tmpdir, target)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00077">77</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1adc7a0d85a66abcc51f17751aed5d2ccc"/>    <section>
    <title>run_intercept()</title>
<indexterm><primary>run_intercept</primary><secondary>tests.functional.cases.test_create_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ExitCodeTest</primary><secondary>run_intercept</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ExitCodeTest.run_intercept ( tmpdir,  target)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00079">79</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>run_intercept(tmpdir,&#32;target):
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;cdb.json&apos;</emphasis>)
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;make&#32;=&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1afdf479d8f581ada915c125fd94e837c9">make_args</link>(tmpdir)&#32;+&#32;[target]
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacetests_1_1functional_1_1cases_1a7938ec1ad248e0480730d43397d6f3cd">silent_call</link>(
00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[<emphasis role="stringliteral">&apos;intercept-build&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;--cdb&apos;</emphasis>,&#32;result]&#32;+&#32;make)
00084 
</programlisting><para>
References <link linkend="_tests_2functional_2cases_2____init_____8py_source_1l00023">tests.functional.cases.make_args()</link>, and <link linkend="_tests_2functional_2cases_2____init_____8py_source_1l00030">tests.functional.cases.silent_call()</link>.</para>
<para>
Referenced by <link linkend="_test__create__cdb_8py_source_1l00154">tests.functional.cases.test_create_cdb.ResultFormatingTest.assert_command_creates_entry()</link>, <link linkend="_test__create__cdb_8py_source_1l00139">tests.functional.cases.test_create_cdb.ResultFormatingTest.assert_creates_number_of_entries()</link>, <link linkend="_test__create__cdb_8py_source_1l00119">tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_append_to_existing_cdb()</link>, <link linkend="_test__create__cdb_8py_source_1l00090">tests.functional.cases.test_create_cdb.ExitCodeTest.test_not_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00111">tests.functional.cases.test_create_cdb.ResumeFeatureTest.test_overwrite_existing_cdb()</link>, <link linkend="_test__create__cdb_8py_source_1l00029">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00085">tests.functional.cases.test_create_cdb.ExitCodeTest.test_successful_build()</link>, <link linkend="_test__create__cdb_8py_source_1l00061">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_all_in_one()</link>, and <link linkend="_test__create__cdb_8py_source_1l00045">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.test_successful_build_parallel()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a14bcee8b93fc97eea0583e240b424b59"/>    <section>
    <title>test_not_successful_build()</title>
<indexterm><primary>test_not_successful_build</primary><secondary>tests.functional.cases.test_create_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ExitCodeTest</primary><secondary>test_not_successful_build</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ExitCodeTest.test_not_successful_build ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00090">90</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00090 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_not_successful_build(self):
00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exitcode&#32;=&#32;self.run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_broken&apos;</emphasis>)
00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(exitcode)
00094 
00095 
</programlisting><para>
References <link linkend="_test__create__cdb_8py_source_1l00016">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00130">tests.functional.cases.test_create_cdb.ResultFormatingTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00079">tests.functional.cases.test_create_cdb.ExitCodeTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00098">tests.functional.cases.test_create_cdb.ResumeFeatureTest.run_intercept()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
    </section><anchor xml:id="_classtests_1_1functional_1_1cases_1_1test__create__cdb_1_1_exit_code_test_1a65145e515965787d1047c3d3b4a3dbc2"/>    <section>
    <title>test_successful_build()</title>
<indexterm><primary>test_successful_build</primary><secondary>tests.functional.cases.test_create_cdb.ExitCodeTest</secondary></indexterm>
<indexterm><primary>tests.functional.cases.test_create_cdb.ExitCodeTest</primary><secondary>test_successful_build</secondary></indexterm>
<para><computeroutput>def tests.functional.cases.test_create_cdb.ExitCodeTest.test_successful_build ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__create__cdb_8py_source_1l00085">85</link> of file <link linkend="_test__create__cdb_8py_source">test_create_cdb.py</link>.</para>
<programlisting>00085 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_successful_build(self):
00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;exitcode&#32;=&#32;self.run_intercept(tmpdir,&#32;<emphasis role="stringliteral">&apos;build_clean&apos;</emphasis>)
00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertFalse(exitcode)
00089 
</programlisting><para>
References <link linkend="_test__create__cdb_8py_source_1l00016">tests.functional.cases.test_create_cdb.CompilationDatabaseTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00130">tests.functional.cases.test_create_cdb.ResultFormatingTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00079">tests.functional.cases.test_create_cdb.ExitCodeTest.run_intercept()</link>, <link linkend="_test__create__cdb_8py_source_1l00098">tests.functional.cases.test_create_cdb.ResumeFeatureTest.run_intercept()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/functional/cases/<link linkend="_test__create__cdb_8py">test_create_cdb.py</link></section>
</section>
