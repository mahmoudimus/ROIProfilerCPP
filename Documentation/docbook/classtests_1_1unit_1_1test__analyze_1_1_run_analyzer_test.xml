<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test" xml:lang="en-US">
<title>tests.unit.test_analyze.RunAnalyzerTest Class Reference</title>
<indexterm><primary>tests.unit.test_analyze.RunAnalyzerTest</primary></indexterm>
<para>Inheritance diagram for tests.unit.test_analyze.RunAnalyzerTest:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1a702dcd34442c191fdf3725d9421cc75a">test_run_analyzer</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1a3ba6c9e6496dd0a88243bf8c0c18aa83">test_run_analyzer_crash</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1aee571060a4c53847ba18fa647bc41fb0">test_run_analyzer_crash_and_forwarded</link> (self)</para>
</listitem>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1ad7106ee26eff984ee2d0f8f75d28ce9c">test_run_analyzer_with_sarif</link> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1a1f6707f9c73cc0beb6ff8ba64d5b1afe">run_analyzer</link> (content, failures_report, output_format=&apos;plist&apos;)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_test__analyze_8py_source_1l00128">128</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1a1f6707f9c73cc0beb6ff8ba64d5b1afe"/>    <section>
    <title>run_analyzer()</title>
<indexterm><primary>run_analyzer</primary><secondary>tests.unit.test_analyze.RunAnalyzerTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.RunAnalyzerTest</primary><secondary>run_analyzer</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.RunAnalyzerTest.run_analyzer ( content,  failures_report,  output_format = <computeroutput>&apos;plist&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00131">131</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00131 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis><link linkend="_namespacelibscanbuild_1_1analyze_1a30e68b322e290e30d92b1abd99d3adba">run_analyzer</link>(content,&#32;failures_report,&#32;output_format=&apos;plist&apos;):
00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacelibear_1a44657565063241a3d383ec724243c023">libear.TemporaryDirectory</link>()&#32;<emphasis role="keyword">as</emphasis>&#32;tmpdir:
00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;filename&#32;=&#32;os.path.join(tmpdir,&#32;<emphasis role="stringliteral">&apos;test.cpp&apos;</emphasis>)
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">with</emphasis>&#32;<link linkend="_namespacestartfile_1aa582f75134b683dc321c07d01ff8e501">open</link>(filename,&#32;<emphasis role="stringliteral">&apos;w&apos;</emphasis>)&#32;<emphasis role="keyword">as</emphasis>&#32;handle:
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;handle.write(content)
00136 
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;opts&#32;=&#32;{
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;clang&apos;</emphasis>:&#32;<emphasis role="stringliteral">&apos;clang&apos;</emphasis>,
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;directory&apos;</emphasis>:&#32;os.getcwd(),
00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;flags&apos;</emphasis>:&#32;[],
00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;direct_args&apos;</emphasis>:&#32;[],
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;file&apos;</emphasis>:&#32;filename,
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;output_dir&apos;</emphasis>:&#32;tmpdir,
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;output_format&apos;</emphasis>:&#32;output_format,
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;output_failures&apos;</emphasis>:&#32;failures_report
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spy&#32;=&#32;Spy()
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;result&#32;=&#32;sut.run_analyzer(opts,&#32;spy.call)
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output_files&#32;=&#32;[]
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;entry&#32;<emphasis role="keywordflow">in</emphasis>&#32;os.listdir(tmpdir):
00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;output_files.append(entry)
00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(result,&#32;spy.arg,&#32;output_files)
00153 
</programlisting><para>
References <link linkend="_startfile_8py_source_1l00206">startfile.open()</link>, and <link linkend="_lib_2libear_2____init_____8py_source_1l00070">libear.TemporaryDirectory()</link>.</para>
<para>
Referenced by <link linkend="_test__from__cmd_8py_source_1l00029">tests.functional.cases.test_from_cmd.OutputDirectoryTest.test_clear_deletes_report_dir()</link>, <link linkend="_test__from__cmd_8py_source_1l00035">tests.functional.cases.test_from_cmd.OutputDirectoryTest.test_clear_keeps_report_dir_when_asked()</link>, and <link linkend="_test__from__cmd_8py_source_1l00023">tests.functional.cases.test_from_cmd.OutputDirectoryTest.test_regular_keeps_report_dir()</link>.</para>
    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1a702dcd34442c191fdf3725d9421cc75a"/>    <section>
    <title>test_run_analyzer()</title>
<indexterm><primary>test_run_analyzer</primary><secondary>tests.unit.test_analyze.RunAnalyzerTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.RunAnalyzerTest</primary><secondary>test_run_analyzer</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.RunAnalyzerTest.test_run_analyzer ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00154">154</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00154 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_run_analyzer(self):
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;<emphasis role="stringliteral">&quot;int&#32;div(int&#32;n,&#32;int&#32;d)&#32;{&#32;return&#32;n&#32;/&#32;d;&#32;}&quot;</emphasis>
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(result,&#32;fwds,&#32;_)&#32;=&#32;RunAnalyzerTest.run_analyzer(content,&#32;<emphasis role="keyword">False</emphasis>)
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="keywordtype">None</emphasis>,&#32;fwds)
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(0,&#32;result[<emphasis role="stringliteral">&apos;exit_code&apos;</emphasis>])
00159 
</programlisting>    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1a3ba6c9e6496dd0a88243bf8c0c18aa83"/>    <section>
    <title>test_run_analyzer_crash()</title>
<indexterm><primary>test_run_analyzer_crash</primary><secondary>tests.unit.test_analyze.RunAnalyzerTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.RunAnalyzerTest</primary><secondary>test_run_analyzer_crash</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.RunAnalyzerTest.test_run_analyzer_crash ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00160">160</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00160 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_run_analyzer_crash(self):
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;<emphasis role="stringliteral">&quot;int&#32;div(int&#32;n,&#32;int&#32;d)&#32;{&#32;return&#32;n&#32;/&#32;d&#32;}&quot;</emphasis>
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(result,&#32;fwds,&#32;_)&#32;=&#32;RunAnalyzerTest.run_analyzer(content,&#32;<emphasis role="keyword">False</emphasis>)
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="keywordtype">None</emphasis>,&#32;fwds)
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(1,&#32;result[<emphasis role="stringliteral">&apos;exit_code&apos;</emphasis>])
00165 
</programlisting>    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1aee571060a4c53847ba18fa647bc41fb0"/>    <section>
    <title>test_run_analyzer_crash_and_forwarded()</title>
<indexterm><primary>test_run_analyzer_crash_and_forwarded</primary><secondary>tests.unit.test_analyze.RunAnalyzerTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.RunAnalyzerTest</primary><secondary>test_run_analyzer_crash_and_forwarded</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.RunAnalyzerTest.test_run_analyzer_crash_and_forwarded ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00166">166</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00166 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_run_analyzer_crash_and_forwarded(self):
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;<emphasis role="stringliteral">&quot;int&#32;div(int&#32;n,&#32;int&#32;d)&#32;{&#32;return&#32;n&#32;/&#32;d&#32;}&quot;</emphasis>
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(_,&#32;fwds,&#32;_)&#32;=&#32;RunAnalyzerTest.run_analyzer(content,&#32;<emphasis role="keyword">True</emphasis>)
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(1,&#32;fwds[<emphasis role="stringliteral">&apos;exit_code&apos;</emphasis>])
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertTrue(len(fwds[<emphasis role="stringliteral">&apos;error_output&apos;</emphasis>])&#32;&gt;&#32;0)
00171 
</programlisting>    </section><anchor xml:id="_classtests_1_1unit_1_1test__analyze_1_1_run_analyzer_test_1ad7106ee26eff984ee2d0f8f75d28ce9c"/>    <section>
    <title>test_run_analyzer_with_sarif()</title>
<indexterm><primary>test_run_analyzer_with_sarif</primary><secondary>tests.unit.test_analyze.RunAnalyzerTest</secondary></indexterm>
<indexterm><primary>tests.unit.test_analyze.RunAnalyzerTest</primary><secondary>test_run_analyzer_with_sarif</secondary></indexterm>
<para><computeroutput>def tests.unit.test_analyze.RunAnalyzerTest.test_run_analyzer_with_sarif ( self)</computeroutput></para><para>
Definition at line <link linkend="_test__analyze_8py_source_1l00172">172</link> of file <link linkend="_test__analyze_8py_source">test_analyze.py</link>.</para>
<programlisting>00172 &#32;&#32;&#32;&#32;<emphasis role="keyword">def&#32;</emphasis>test_run_analyzer_with_sarif(self):
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;content&#32;=&#32;<emphasis role="stringliteral">&quot;int&#32;div(int&#32;n,&#32;int&#32;d)&#32;{&#32;return&#32;n&#32;/&#32;d;&#32;}&quot;</emphasis>
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(result,&#32;fwds,&#32;output_files)&#32;=&#32;RunAnalyzerTest.run_analyzer(content,&#32;<emphasis role="keyword">False</emphasis>,&#32;output_format=<emphasis role="stringliteral">&apos;sarif&apos;</emphasis>)
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(<emphasis role="keywordtype">None</emphasis>,&#32;fwds)
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.assertEqual(0,&#32;result[<emphasis role="stringliteral">&apos;exit_code&apos;</emphasis>])
00177 
00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pattern&#32;=&#32;re.compile(<emphasis role="stringliteral">r&apos;^result-.+\.sarif$&apos;</emphasis>)
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;f&#32;<emphasis role="keywordflow">in</emphasis>&#32;output_files:
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;re.match(pattern,&#32;f):
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self.fail(<emphasis role="stringliteral">&apos;no&#32;result&#32;sarif&#32;files&#32;found&#32;in&#32;output&apos;</emphasis>)
00183 
00184 
</programlisting></section>
<para>
The documentation for this class was generated from the following file:</para>
/Users/maximilian/clang-llvm/clang/tools/scan-build-py/tests/unit/<link linkend="_test__analyze_8py">test_analyze.py</link></section>
</section>
