<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__example_clang_l_l_v_m_proto_fuzzer_8cpp" xml:lang="en-US">
<title>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/ExampleClangLLVMProtoFuzzer.cpp File Reference</title>
<indexterm><primary>/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/ExampleClangLLVMProtoFuzzer.cpp</primary></indexterm>
<programlisting>#include &quot;cxx_loop_proto.pb.h&quot;
#include &quot;fuzzer-initialize/fuzzer_initialize.h&quot;
#include &quot;handle-llvm/handle_llvm.h&quot;
#include &quot;proto-to-llvm/loop_proto_to_llvm.h&quot;
#include &quot;src/libfuzzer/libfuzzer_macro.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="__example_clang_l_l_v_m_proto_fuzzer_8cpp_1a247c99365e82549cf5f4d0fbc2b839f8">DEFINE_BINARY_PROTO_FUZZER</link> (const LoopFunction &amp;input)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This file implements a function that compiles a single <link linkend="_namespace_l_l_v_m">LLVM</link> IR string as input and uses libprotobuf-mutator to find new inputs. This function is then linked into the Fuzzer library. </para>
<para>
Definition in file <link linkend="__example_clang_l_l_v_m_proto_fuzzer_8cpp_source">ExampleClangLLVMProtoFuzzer.cpp</link>.</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__example_clang_l_l_v_m_proto_fuzzer_8cpp_1a247c99365e82549cf5f4d0fbc2b839f8"/>    <section>
    <title>DEFINE_BINARY_PROTO_FUZZER()</title>
<indexterm><primary>DEFINE_BINARY_PROTO_FUZZER</primary><secondary>ExampleClangLLVMProtoFuzzer.cpp</secondary></indexterm>
<indexterm><primary>ExampleClangLLVMProtoFuzzer.cpp</primary><secondary>DEFINE_BINARY_PROTO_FUZZER</secondary></indexterm>
<para><computeroutput>DEFINE_BINARY_PROTO_FUZZER (const LoopFunction &amp; input)</computeroutput></para><para>
Definition at line <link linkend="__example_clang_l_l_v_m_proto_fuzzer_8cpp_source_1l00024">24</link> of file <link linkend="__example_clang_l_l_v_m_proto_fuzzer_8cpp_source">ExampleClangLLVMProtoFuzzer.cpp</link>.</para>
<programlisting>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00025 &#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;S&#32;=&#32;<link linkend="_namespaceclang__fuzzer_1a35ef2ec34abd6c5c09fcf55180046986">LoopFunctionToLLVMString</link>(input);
00026 &#32;&#32;<link linkend="_namespaceclang__fuzzer_1a3adbd0effd16c9fde62eef8b297c8fee">HandleLLVM</link>(S,&#32;<link linkend="_namespaceclang__fuzzer_1a7204f11d358bc8d6b48eb043fdba0ce4">GetCLArgs</link>());
00027 }
</programlisting><para>
References <link linkend="_fuzzer__initialize_8cpp_source_1l00031">clang_fuzzer::GetCLArgs()</link>, <link linkend="_handle__llvm_8cpp_source_1l00212">clang_fuzzer::HandleLLVM()</link>, and <link linkend="_loop__proto__to__llvm_8cpp_source_1l00197">clang_fuzzer::LoopFunctionToLLVMString()</link>.</para>
</section>
</section>
</section>
