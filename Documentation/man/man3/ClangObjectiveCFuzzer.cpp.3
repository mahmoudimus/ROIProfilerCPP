.TH "/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/ClangObjectiveCFuzzer.cpp" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/maximilian/clang-llvm/clang/tools/clang-fuzzer/ClangObjectiveCFuzzer.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'handle\-cxx/handle_cxx\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBLLVMFuzzerInitialize\fP (int *argc, char ***argv)"
.br
.ti -1c
.RI "int \fBLLVMFuzzerTestOneInput\fP (uint8_t *data, size_t size)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file implements a function that runs Clang on a single Objective-C input\&. This function is then linked into the Fuzzer library\&. 
.PP
Definition in file \fBClangObjectiveCFuzzer\&.cpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "int LLVMFuzzerInitialize (int * argc, char *** argv)"

.PP
Definition at line 19 of file ClangObjectiveCFuzzer\&.cpp\&.
.PP
.nf
19 { return 0; }
.fi
.SS "int LLVMFuzzerTestOneInput (uint8_t * data, size_t size)"

.PP
Definition at line 21 of file ClangObjectiveCFuzzer\&.cpp\&.
.PP
.nf
21                                                                   {
22   std::string s(reinterpret_cast<const char *>(data), size);
23   HandleCXX(s, "\&./test\&.m", {"-O2"});
24   return 0;
25 }
.fi
.PP
References clang_fuzzer::HandleCXX()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
