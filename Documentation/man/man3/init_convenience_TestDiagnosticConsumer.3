.TH "init_convenience::TestDiagnosticConsumer" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
init_convenience::TestDiagnosticConsumer
.SH SYNOPSIS
.br
.PP
.PP
Inherits DiagnosticConsumer\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTestDiagnosticConsumer\fP ()"
.br
.ti -1c
.RI "virtual void \fBBeginSourceFile\fP (const LangOptions &LangOpts, const Preprocessor *PP=nullptr) override"
.br
.ti -1c
.RI "virtual void \fBEndSourceFile\fP () override"
.br
.ti -1c
.RI "virtual bool \fBIncludeInDiagnosticCounts\fP () const override"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 78 of file clang\-import\-test\&.cpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "init_convenience::TestDiagnosticConsumer::TestDiagnosticConsumer ()\fC [inline]\fP"

.PP
Definition at line 84 of file clang\-import\-test\&.cpp\&.
.PP
.nf
85       : Passthrough(std::make_unique<TextDiagnosticBuffer>()) {}
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual void init_convenience::TestDiagnosticConsumer::BeginSourceFile (const LangOptions & LangOpts, const Preprocessor * PP = \fCnullptr\fP)\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Definition at line 87 of file clang\-import\-test\&.cpp\&.
.PP
.nf
88                                                                           {
89     this->LangOpts = &LangOpts;
90     return Passthrough->BeginSourceFile(LangOpts, PP);
91   }
.fi
.SS "virtual void init_convenience::TestDiagnosticConsumer::EndSourceFile ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Definition at line 93 of file clang\-import\-test\&.cpp\&.
.PP
.nf
93                                         {
94     this->LangOpts = nullptr;
95     Passthrough->EndSourceFile();
96   }
.fi
.SS "virtual bool init_convenience::TestDiagnosticConsumer::IncludeInDiagnosticCounts () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Definition at line 98 of file clang\-import\-test\&.cpp\&.
.PP
.nf
98                                                           {
99     return Passthrough->IncludeInDiagnosticCounts();
100   }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
