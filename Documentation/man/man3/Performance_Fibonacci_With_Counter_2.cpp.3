.TH "Tests/GTime Test Cases/Performance_Fibonacci_With_Counter_2.cpp" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tests/GTime Test Cases/Performance_Fibonacci_With_Counter_2.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br
\fC#include '\&.\&./lib/DataStorage\&.cpp'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBDataStorage\fP \fBdataStorage\fP ('Runtime,Scope,IfStmt 2085332,CustomCompoundStmt i000004')"
.br
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBDataStorage\fP dataStorage (' Runtime, Scope, IfStmt 2085332, CustomCompoundStmt i000004')"

.SS "int main (void)"

.PP
Definition at line 4 of file Performance_Fibonacci_With_Counter_2\&.cpp\&.
.PP
.nf
4                {
5 dataStorage\&.startEvent(0);
6     double n, t1 = 0, t2 = 1, nextTerm = 0;
7     n = 1000;
8 
9     std::cout << "Fibonacci Series: ";
10 
11     dataStorage\&.startEvent(1);
12 for (int i = 1; i <= n; ++i) {
13         dataStorage\&.startEvent(2);
14 if(i == 1) {
15             std::cout << t1;
16             std::cout << ", ";
17         }
18         else if(i == 2) {
19             std::cout << t2;
20             std::cout << ", ";
21         }
22 dataStorage\&.endEvent(2);
23         dataStorage\&.startEvent(3);
24 nextTerm = t1 + t2;
25         t1 = t2;
26         t2 = nextTerm;
27 
28         std::cout << nextTerm << ", ";
29 dataStorage\&.endEvent(3);
30     }
31 dataStorage\&.endEvent(1);
32 
33     dataStorage\&.endEvent(0);
34 dataStorage\&.print();return 0;
35 }
.fi
.PP
References dataStorage(), DataStorage::endEvent(), DataStorage::print(), and DataStorage::startEvent()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
