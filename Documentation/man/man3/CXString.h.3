.TH "/Users/maximilian/clang-llvm/clang/tools/libclang/CXString.h" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/maximilian/clang-llvm/clang/tools/libclang/CXString.h
.SH SYNOPSIS
.br
.PP
\fC#include 'clang\-c/Index\&.h'\fP
.br
\fC#include 'clang/Basic/LLVM\&.h'\fP
.br
\fC#include 'llvm/ADT/SmallString\&.h'\fP
.br
\fC#include 'llvm/ADT/StringRef\&.h'\fP
.br
\fC#include 'llvm/Support/Compiler\&.h'\fP
.br
\fC#include <string>\fP
.br
\fC#include <vector>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBclang::cxstring::CXStringPool\fP"
.br
.RI "A string pool used for fast allocation/deallocation of strings\&. "
.ti -1c
.RI "struct \fBclang::cxstring::CXStringBuf\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBclang\fP"
.br
.RI "-rename "
.ti -1c
.RI " \fBclang::cxstring\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "CXString \fBclang::cxstring::createEmpty\fP ()"
.br
.RI "Create a CXString object for an empty '' string\&. "
.ti -1c
.RI "CXString \fBclang::cxstring::createNull\fP ()"
.br
.ti -1c
.RI "CXString \fBclang::cxstring::createRef\fP (const char *String)"
.br
.ti -1c
.RI "CXString \fBclang::cxstring::createDup\fP (const char *String)"
.br
.ti -1c
.RI "CXString \fBclang::cxstring::createRef\fP (StringRef String)"
.br
.ti -1c
.RI "CXString \fBclang::cxstring::createDup\fP (StringRef String)"
.br
.ti -1c
.RI "CXString \fBclang::cxstring::createRef\fP (std::string String)=delete"
.br
.ti -1c
.RI "CXString \fBclang::cxstring::createCXString\fP (CXStringBuf *buf)"
.br
.RI "Create a CXString object that is backed by a string buffer\&. "
.ti -1c
.RI "CXStringSet * \fBclang::cxstring::createSet\fP (const std::vector< std::string > &\fBStrings\fP)"
.br
.ti -1c
.RI "CXStringBuf * \fBclang::cxstring::getCXStringBuf\fP (CXTranslationUnit TU)"
.br
.ti -1c
.RI "bool \fBclang::cxstring::isManagedByPool\fP (CXString str)"
.br
.RI "Returns true if the CXString data is managed by a pool\&. "
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
