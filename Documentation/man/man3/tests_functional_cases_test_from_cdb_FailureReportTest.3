.TH "tests.functional.cases.test_from_cdb.FailureReportTest" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tests.functional.cases.test_from_cdb.FailureReportTest
.SH SYNOPSIS
.br
.PP
.PP
Inherits unittest\&.TestCase\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBtest_broken_creates_failure_reports\fP (self)"
.br
.ti -1c
.RI "def \fBtest_broken_does_not_creates_failure_reports\fP (self)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 164 of file test_from_cdb\&.py\&.
.SH "Member Function Documentation"
.PP 
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.FailureReportTest\&.test_broken_creates_failure_reports ( self)"

.PP
Definition at line 165 of file test_from_cdb\&.py\&.
.PP
.nf
165     def test_broken_creates_failure_reports(self):
166         with libear\&.TemporaryDirectory() as tmpdir:
167             cdb = prepare_cdb('broken', tmpdir)
168             exit_code, reportdir = run_analyzer(tmpdir, cdb, [])
169             self\&.assertTrue(
170                 os\&.path\&.isdir(os\&.path\&.join(reportdir, 'failures')))
171 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.FailureReportTest\&.test_broken_does_not_creates_failure_reports ( self)"

.PP
Definition at line 172 of file test_from_cdb\&.py\&.
.PP
.nf
172     def test_broken_does_not_creates_failure_reports(self):
173         with libear\&.TemporaryDirectory() as tmpdir:
174             cdb = prepare_cdb('broken', tmpdir)
175             exit_code, reportdir = run_analyzer(
176                 tmpdir, cdb, ['--no-failure-reports'])
177             self\&.assertFalse(
178                 os\&.path\&.isdir(os\&.path\&.join(reportdir, 'failures')))
179 
180 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
