.TH "Tests/test_fibonacci.cpp" 3 "Sun Nov 14 2021" "Version 1.0" "Hagn Tool Performance Counter" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tests/test_fibonacci.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfibonacci\fP ()"
.br
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void fibonacci ()"

.PP
Definition at line 2 of file test_fibonacci\&.cpp\&.
.PP
.nf
2                  {
3     double n, t1 = 0, t2 = 1, nextTerm = 0;
4     n = 100;
5 
6     std::cout << "Fibonacci Series: ";
7 
8     for (int i = 1; i <= n; ++i) {
9         if(i == 1) {
10             std::cout << t1 << ", ";
11             continue;
12         }
13         if(i == 2) {
14             std::cout << t2 << ", ";
15             continue;
16         }
17         nextTerm = t1 + t2;
18         t1 = t2;
19         t2 = nextTerm;
20 
21         std::cout << nextTerm << ", ";
22     }
23 }
.fi
.PP
Referenced by main()\&.
.SS "int main (void)"

.PP
Definition at line 25 of file test_fibonacci\&.cpp\&.
.PP
.nf
25                {
26 
27     int i = 10;
28     double e = 54783498;
29     double d = 54783498;
30     double c = 54783498;
31     double x = e+d+c;
32     double z = x*2;
33     double zy = x*2;
34     zy++;
35     zy++;
36     zy++;
37     zy++;
38     zy++;
39     zy++;
40     zy++;
41     zy++;
42     zy++;
43     zy++;
44     zy++;
45     zy++;
46     zy++;
47     zy++;
48     zy++;
49     zy++;
50     zy++;
51     zy++;
52     zy++;
53     zy++;
54     zy++;
55     e = z;
56     i++;
57 
58     for ( int j = 0; j < 1000000; ++j ) {
59         i++;
60         i++;
61         i++;
62         i++;
63         i++;
64     }
65 
66     fibonacci();
67 
68     double cc = 54783498;
69     double xx = e+d+c;
70     double zz = x*2;
71     cc++;
72     xx++;
73     zz++;
74     zy++;
75 
76     return 0;
77 }
.fi
.PP
References fibonacci()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Hagn Tool Performance Counter from the source code\&.
