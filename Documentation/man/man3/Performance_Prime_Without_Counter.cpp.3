.TH "Tests/Prime Tests Cases/Performance_Prime_Without_Counter.cpp" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tests/Prime Tests Cases/Performance_Prime_Without_Counter.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <chrono>\fP
.br
\fC#include <ctime>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <bitset>\fP
.br
\fC#include <map>\fP
.br
\fC#include <cstring>\fP
.br
\fC#include <cmath>\fP
.br
\fC#include <fstream>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBitArray\fP"
.br
.ti -1c
.RI "class \fBprime_sieve\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmain\fP ()"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int main (void)"

.PP
Definition at line 173 of file Performance_Prime_Without_Counter\&.cpp\&.
.PP
.nf
174 {
175     auto passes = 0;
176     auto tStart = steady_clock::now();
177 
178     while (true)
179     {
180         prime_sieve sieve(1000000L);
181         sieve\&.runSieve();
182         passes++;
183         if (duration_cast<seconds>(steady_clock::now() - tStart)\&.count() >= 5)
184         {
185             sieve\&.printResults(false, duration_cast<microseconds>(steady_clock::now() - tStart)\&.count() / 1000000\&.0, passes);
186             break;
187         }
188     }
189 
190     return 0;
191 }
.fi
.PP
References prime_sieve::printResults(), and prime_sieve::runSieve()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
