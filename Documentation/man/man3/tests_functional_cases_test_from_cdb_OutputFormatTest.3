.TH "tests.functional.cases.test_from_cdb.OutputFormatTest" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tests.functional.cases.test_from_cdb.OutputFormatTest
.SH SYNOPSIS
.br
.PP
.PP
Inherits unittest\&.TestCase\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBtest_default_only_creates_html_report\fP (self)"
.br
.ti -1c
.RI "def \fBtest_plist_and_html_creates_html_and_plist_reports\fP (self)"
.br
.ti -1c
.RI "def \fBtest_plist_only_creates_plist_report\fP (self)"
.br
.ti -1c
.RI "def \fBtest_sarif_only_creates_sarif_result\fP (self)"
.br
.ti -1c
.RI "def \fBtest_sarif_and_html_creates_sarif_and_html_reports\fP (self)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBget_html_count\fP (directory)"
.br
.ti -1c
.RI "def \fBget_plist_count\fP (directory)"
.br
.ti -1c
.RI "def \fBget_sarif_count\fP (directory)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 96 of file test_from_cdb\&.py\&.
.SH "Member Function Documentation"
.PP 
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_html_count ( directory)\fC [static]\fP"

.PP
Definition at line 98 of file test_from_cdb\&.py\&.
.PP
.nf
98     def get_html_count(directory):
99         return len(glob\&.glob(os\&.path\&.join(directory, 'report-*\&.html')))
100 
.fi
.PP
Referenced by tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_default_only_creates_html_report(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_and_html_creates_html_and_plist_reports(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_only_creates_plist_report(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_and_html_creates_sarif_and_html_reports(), and tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_only_creates_sarif_result()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_plist_count ( directory)\fC [static]\fP"

.PP
Definition at line 102 of file test_from_cdb\&.py\&.
.PP
.nf
102     def get_plist_count(directory):
103         return len(glob\&.glob(os\&.path\&.join(directory, 'report-*\&.plist')))
104 
.fi
.PP
Referenced by tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_default_only_creates_html_report(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_intercept_cc_works(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_intercept_cxx_works(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_intercept_library_works(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_intercept_wrapper_works(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_interposition_cc_works(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_interposition_cxx_works(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.test_interposition_works(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_and_html_creates_html_and_plist_reports(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_only_creates_plist_report(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_and_html_creates_sarif_and_html_reports(), and tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_only_creates_sarif_result()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_sarif_count ( directory)\fC [static]\fP"

.PP
Definition at line 106 of file test_from_cdb\&.py\&.
.PP
.nf
106     def get_sarif_count(directory):
107         return len(glob\&.glob(os\&.path\&.join(directory, 'result-*\&.sarif')))
108 
.fi
.PP
Referenced by tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_default_only_creates_html_report(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_and_html_creates_html_and_plist_reports(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_only_creates_plist_report(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_and_html_creates_sarif_and_html_reports(), and tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_only_creates_sarif_result()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_default_only_creates_html_report ( self)"

.PP
Definition at line 109 of file test_from_cdb\&.py\&.
.PP
.nf
109     def test_default_only_creates_html_report(self):
110         with libear\&.TemporaryDirectory() as tmpdir:
111             cdb = prepare_cdb('regular', tmpdir)
112             exit_code, reportdir = run_analyzer(tmpdir, cdb, [])
113             self\&.assertTrue(
114                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'index\&.html')))
115             self\&.assertEqual(self\&.get_html_count(reportdir), 2)
116             self\&.assertEqual(self\&.get_plist_count(reportdir), 0)
117             self\&.assertEqual(self\&.get_sarif_count(reportdir), 0)
118 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_html_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_sarif_count(), tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_and_html_creates_html_and_plist_reports ( self)"

.PP
Definition at line 119 of file test_from_cdb\&.py\&.
.PP
.nf
119     def test_plist_and_html_creates_html_and_plist_reports(self):
120         with libear\&.TemporaryDirectory() as tmpdir:
121             cdb = prepare_cdb('regular', tmpdir)
122             exit_code, reportdir = run_analyzer(tmpdir, cdb, ['--plist-html'])
123             self\&.assertTrue(
124                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'index\&.html')))
125             self\&.assertEqual(self\&.get_html_count(reportdir), 2)
126             self\&.assertEqual(self\&.get_plist_count(reportdir), 5)
127             self\&.assertEqual(self\&.get_sarif_count(reportdir), 0)
128 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_html_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_sarif_count(), tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_plist_only_creates_plist_report ( self)"

.PP
Definition at line 129 of file test_from_cdb\&.py\&.
.PP
.nf
129     def test_plist_only_creates_plist_report(self):
130         with libear\&.TemporaryDirectory() as tmpdir:
131             cdb = prepare_cdb('regular', tmpdir)
132             exit_code, reportdir = run_analyzer(tmpdir, cdb, ['--plist'])
133             self\&.assertFalse(
134                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'index\&.html')))
135             self\&.assertEqual(self\&.get_html_count(reportdir), 0)
136             self\&.assertEqual(self\&.get_plist_count(reportdir), 5)
137             self\&.assertEqual(self\&.get_sarif_count(reportdir), 0)
138 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_html_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_sarif_count(), tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_and_html_creates_sarif_and_html_reports ( self)"

.PP
Definition at line 151 of file test_from_cdb\&.py\&.
.PP
.nf
151     def test_sarif_and_html_creates_sarif_and_html_reports(self):
152         with libear\&.TemporaryDirectory() as tmpdir:
153             cdb = prepare_cdb('regular', tmpdir)
154             exit_code, reportdir = run_analyzer(tmpdir, cdb, ['--sarif-html'])
155             self\&.assertTrue(
156                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'index\&.html')))
157             self\&.assertTrue(
158                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'results-merged\&.sarif')))
159             self\&.assertEqual(self\&.get_html_count(reportdir), 2)
160             self\&.assertEqual(self\&.get_plist_count(reportdir), 0)
161             self\&.assertEqual(self\&.get_sarif_count(reportdir), 5)
162 
163 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_html_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_sarif_count(), tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.
.SS "def tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.test_sarif_only_creates_sarif_result ( self)"

.PP
Definition at line 139 of file test_from_cdb\&.py\&.
.PP
.nf
139     def test_sarif_only_creates_sarif_result(self):
140         with libear\&.TemporaryDirectory() as tmpdir:
141             cdb = prepare_cdb('regular', tmpdir)
142             exit_code, reportdir = run_analyzer(tmpdir, cdb, ['--sarif'])
143             self\&.assertFalse(
144                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'index\&.html')))
145             self\&.assertTrue(
146                 os\&.path\&.exists(os\&.path\&.join(reportdir, 'results-merged\&.sarif')))
147             self\&.assertEqual(self\&.get_html_count(reportdir), 0)
148             self\&.assertEqual(self\&.get_plist_count(reportdir), 0)
149             self\&.assertEqual(self\&.get_sarif_count(reportdir), 5)
150 
.fi
.PP
References tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_html_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cmd\&.RunAnalyzerTest\&.get_plist_count(), tests\&.functional\&.cases\&.test_from_cdb\&.OutputFormatTest\&.get_sarif_count(), tests\&.functional\&.cases\&.test_from_cdb\&.prepare_cdb(), tests\&.functional\&.cases\&.test_from_cdb\&.run_analyzer(), and libear\&.TemporaryDirectory()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
