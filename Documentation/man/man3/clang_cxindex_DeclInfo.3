.TH "clang::cxindex::DeclInfo" 3 "Sat Feb 12 2022" "Version 1.2" "Regions Of Interest (ROI) Profiler" \" -*- nroff -*-
.ad l
.nh
.SH NAME
clang::cxindex::DeclInfo
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CXIndexDataConsumer\&.h>\fP
.PP
Inherits CXIdxDeclInfo\&.
.PP
Inherited by \fBclang::cxindex::CXXClassDeclInfo\fP, \fBclang::cxindex::ObjCContainerDeclInfo\fP, and \fBclang::cxindex::ObjCPropertyDeclInfo\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBDInfoKind\fP { \fBInfo_Decl\fP, \fBInfo_ObjCContainer\fP, \fBInfo_ObjCInterface\fP, \fBInfo_ObjCProtocol\fP, \fBInfo_ObjCCategory\fP, \fBInfo_ObjCProperty\fP, \fBInfo_CXXClass\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDeclInfo\fP (bool isRedeclaration, bool isDefinition, bool isContainer)"
.br
.ti -1c
.RI "\fBDeclInfo\fP (\fBDInfoKind\fP K, bool isRedeclaration, bool isDefinition, bool isContainer)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBDInfoKind\fP \fBKind\fP"
.br
.ti -1c
.RI "\fBEntityInfo\fP \fBEntInfo\fP"
.br
.ti -1c
.RI "\fBContainerInfo\fP \fBSemanticContainer\fP"
.br
.ti -1c
.RI "\fBContainerInfo\fP \fBLexicalContainer\fP"
.br
.ti -1c
.RI "\fBContainerInfo\fP \fBDeclAsContainer\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 65 of file CXIndexDataConsumer\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBclang::cxindex::DeclInfo::DInfoKind\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIInfo_Decl \fP\fP
.TP
\fB\fIInfo_ObjCContainer \fP\fP
.TP
\fB\fIInfo_ObjCInterface \fP\fP
.TP
\fB\fIInfo_ObjCProtocol \fP\fP
.TP
\fB\fIInfo_ObjCCategory \fP\fP
.TP
\fB\fIInfo_ObjCProperty \fP\fP
.TP
\fB\fIInfo_CXXClass \fP\fP
.PP
Definition at line 66 of file CXIndexDataConsumer\&.h\&.
.PP
.nf
66                  {
67     Info_Decl,
68 
69     Info_ObjCContainer,
70       Info_ObjCInterface,
71       Info_ObjCProtocol,
72       Info_ObjCCategory,
73 
74     Info_ObjCProperty,
75 
76     Info_CXXClass
77   };
.fi
.SH "Constructor & Destructor Documentation"
.PP 
.SS "clang::cxindex::DeclInfo::DeclInfo (bool isRedeclaration, bool isDefinition, bool isContainer)\fC [inline]\fP"

.PP
Definition at line 86 of file CXIndexDataConsumer\&.h\&.
.PP
.nf
87     : Kind(Info_Decl) {
88     this->isRedeclaration = isRedeclaration;
89     this->isDefinition = isDefinition;
90     this->isContainer = isContainer;
91     attributes = nullptr;
92     numAttributes = 0;
93     declAsContainer = semanticContainer = lexicalContainer = nullptr;
94     flags = 0;
95   }
.fi
.SS "clang::cxindex::DeclInfo::DeclInfo (\fBDInfoKind\fP K, bool isRedeclaration, bool isDefinition, bool isContainer)\fC [inline]\fP"

.PP
Definition at line 96 of file CXIndexDataConsumer\&.h\&.
.PP
.nf
98     : Kind(K) {
99     this->isRedeclaration = isRedeclaration;
100     this->isDefinition = isDefinition;
101     this->isContainer = isContainer;
102     attributes = nullptr;
103     numAttributes = 0;
104     declAsContainer = semanticContainer = lexicalContainer = nullptr;
105     flags = 0;
106   }
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBContainerInfo\fP clang::cxindex::DeclInfo::DeclAsContainer"

.PP
Definition at line 84 of file CXIndexDataConsumer\&.h\&.
.SS "\fBEntityInfo\fP clang::cxindex::DeclInfo::EntInfo"

.PP
Definition at line 81 of file CXIndexDataConsumer\&.h\&.
.SS "\fBDInfoKind\fP clang::cxindex::DeclInfo::Kind"

.PP
Definition at line 79 of file CXIndexDataConsumer\&.h\&.
.PP
Referenced by clang::cxindex::ObjCContainerDeclInfo::classof(), clang::cxindex::ObjCInterfaceDeclInfo::classof(), clang::cxindex::ObjCProtocolDeclInfo::classof(), clang::cxindex::ObjCCategoryDeclInfo::classof(), clang::cxindex::ObjCPropertyDeclInfo::classof(), and clang::cxindex::CXXClassDeclInfo::classof()\&.
.SS "\fBContainerInfo\fP clang::cxindex::DeclInfo::LexicalContainer"

.PP
Definition at line 83 of file CXIndexDataConsumer\&.h\&.
.SS "\fBContainerInfo\fP clang::cxindex::DeclInfo::SemanticContainer"

.PP
Definition at line 82 of file CXIndexDataConsumer\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Regions Of Interest (ROI) Profiler from the source code\&.
